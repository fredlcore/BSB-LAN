{"config":{"indexing":"full","lang":["en","de","fr"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"What is BSB-LAN? BSB-LAN is a software /hardware solution for accessing the \u201cBoiler-System-Bus\u201d (BSB) , the \u201cLocal-Process-Bus (LPB)\u201d and the \u201cPunkt-zu-Punkt-Schnittstelle\u201d (PPS) . The BSB-LAN hardware is available for various ESP32 -based microcontrollers (ESP32 NodeMCU, Olimex EVB, Olimex POE-ISO) as well as for an Arduino Due with Ethernet shield. It allows accessing the heating systems from Atlantic, Br\u00f6tje, Elco and many other manufacturers via LAN/WLAN, provided that they use one of the Siemens controllers listed below. BSB-LAN makes it possible to monitor and control the heating system and log any given values. This project supports almost all parameters available on the heating systems and can be a more comprehensive and cost-effective alternative to the OZW 672, OCI 700 or Remocon Net B. Optional integration into existing smart home systems such as Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon or EDOMI is possible via MQTT , JSON or HTTP access . The adapter can also be used as a standalone logger without LAN or Internet connection when using a microSD card. Temperature and humidity sensors can also be connected and their data can also be logged and analyzed. The option of integrating your own code into the BSB-LAN software also offers a wide range of expansion options. Where and how do I begin? You are an experienced user? Head on to the quickstart instructions . Otherwise (or if you run into problems), please read on! Is my heating system supported by BSB-LAN? Please go to the list of supported heating systems . If you already know that your system is supported, find out more about the BSB-LAN adapter and where to get it. If you already have the adapter, you may want to know how to install the adapter . If you have installed the adapter, you will need to configure BSB-LAN . Once you have everything up and running, find out about how to use BSB-LAN or learn more about the ways to ingetrate BSB-LAN into home automation systems . If you want to update BSB-LAN and would like to know what has changed since your last installation, please check the ChangeLog . Our wiki pages are continuously growing and provide background knowledge as well as more specialized topics on BSB-LAN and heating systems in general. If you run into troubles, have a look at the troubleshooting page . And before you ask anyone else any questions, have a look at our Frequently Asked Questions (FAQ) first!","title":"Overview"},{"location":"index.html#what-is-bsb-lan","text":"BSB-LAN is a software /hardware solution for accessing the \u201cBoiler-System-Bus\u201d (BSB) , the \u201cLocal-Process-Bus (LPB)\u201d and the \u201cPunkt-zu-Punkt-Schnittstelle\u201d (PPS) . The BSB-LAN hardware is available for various ESP32 -based microcontrollers (ESP32 NodeMCU, Olimex EVB, Olimex POE-ISO) as well as for an Arduino Due with Ethernet shield. It allows accessing the heating systems from Atlantic, Br\u00f6tje, Elco and many other manufacturers via LAN/WLAN, provided that they use one of the Siemens controllers listed below. BSB-LAN makes it possible to monitor and control the heating system and log any given values. This project supports almost all parameters available on the heating systems and can be a more comprehensive and cost-effective alternative to the OZW 672, OCI 700 or Remocon Net B. Optional integration into existing smart home systems such as Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon or EDOMI is possible via MQTT , JSON or HTTP access . The adapter can also be used as a standalone logger without LAN or Internet connection when using a microSD card. Temperature and humidity sensors can also be connected and their data can also be logged and analyzed. The option of integrating your own code into the BSB-LAN software also offers a wide range of expansion options.","title":"What is BSB-LAN?"},{"location":"index.html#where-and-how-do-i-begin","text":"You are an experienced user? Head on to the quickstart instructions . Otherwise (or if you run into problems), please read on! Is my heating system supported by BSB-LAN? Please go to the list of supported heating systems . If you already know that your system is supported, find out more about the BSB-LAN adapter and where to get it. If you already have the adapter, you may want to know how to install the adapter . If you have installed the adapter, you will need to configure BSB-LAN . Once you have everything up and running, find out about how to use BSB-LAN or learn more about the ways to ingetrate BSB-LAN into home automation systems . If you want to update BSB-LAN and would like to know what has changed since your last installation, please check the ChangeLog . Our wiki pages are continuously growing and provide background knowledge as well as more specialized topics on BSB-LAN and heating systems in general. If you run into troubles, have a look at the troubleshooting page . And before you ask anyone else any questions, have a look at our Frequently Asked Questions (FAQ) first!","title":"Where and how do I begin?"},{"location":"CHANGELOG.html","text":"ChangeLog Current Master ATTENTION: BREAKING CHANGE! Streamlined topic structure for MQTT. New strucuture adds /status for querying a parameter, /set for SETting a parameter, /inf for sending data as INF telegram and /poll to force BSB-LAN to send an update of that parameter value to the broker. If you are using MQTT auto-discovery, ideally, calling /M1 should update these changes. However, if you are using your own configurations, you'll have to make adjustments here. ATTENTION: BREAKING CHANGE! When using JSON settings for MQTT, previously all messages were written to the BSB-LAN/json and thus basically immediately overwritten when logging several parameters. Now this setting only determines the format (and not format and topic) of the data that is written into /status of each parameter. For auto-discovery, plain text remains the only valid choice. ATTENTION: BREAKING CHANGE The acknowledgement message sent by BSB-LAN to the MQTT topic has been removed. Instead, QoS for publishing messages has been set to level 1. ATTENTION: BREAKING CHANGE: Log configuration values have changed. However, only users that have logged to UDP are affected and will have to adjust their settings. ATTENTION: /JK=ALL now lists all categories of all devices in LPB systems with more than one device. Use dev_fam (device family), dev_var (device variant), dev_id (destination device ID) and dev_name (device model) elements to sort and identify which category applies to the current destination device. Added setting to only publish log parameters to MQTT. Forcing MQTT updates via /poll topic are still possible. Added state_class for non cumulative sensors in MQTT auto-discovery Updated the room unit emulation in custom_functions to work with version 4.x. Bugfix for VT_ENERGY, added new data type VT_ENERGY10 and VT_ENERGY10_N Disabling parameters can now be done both with an empty value as well as by sending --- . Sending an empty value is still possible, but is depracated and will be removed at some later time. BSB-LAN now scans the BSB/LPB bus during startup (and later periodically, if not connected to heating system) for other devices on the bus. This significantly reduces access times later on for systems with more than one device on the bus. New version from new repo of PubSubClient. Hopefully with this version, disconnects will be greatly reduced. French and German translations of the manual added, special thanks to GitHub user @plauwers for this! Numerous bugfixes, especially for the JSON API Version 4.1 06.11.2024 ATTENTION: BREAKING CHANGE! Changed topic structure for MQTT. This means that all existing MQTT entities in your home-automation system will have to be adjusted or created anew! The new structure now is BSB-LAN/<device id>/<category id>/<parameter number> . ATTENTION: BREAKING CHANGE! Changed unique_id for MQTT auto-discovery. This means that all MQTT entities that have been created via auto-discovery will have to be created anew! ATTENTION: Configuration options fixed_device_family and fixed_device_variant have been removed since they no longer work for device-specific parameter lists. If your heating system is off when turning on the microcontroller, BSB-LAN will try to acquire the details every 60 seconds. ATTENTION: Change of configuration options results in new EEPROM layout, therefore EEPROM will be reinitialized based on configuration of BSB_LAN_config.h . MQTT auto-discovery now works for all devices, not only device ID 0. Use /M1!<x> or /M0!<x> to create/remove entities for device ID <x> . Changed MQTT auto-discovery messages' flag to \"retain\" so that parameters remain available after reboot of Home Assistant. Version 4.0 01.11.2024 ATTENTION: BREAKING CHANGE! Room temperature parameter 10000, 10001 and 10002 must now have the additional flag FL_SPECIAL_INF , otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! Outside temperature simulation parameter 10017 must have FL_SPECIAL_INF flag removed, otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! Room temperature parameter 10000, 10001 and 10002 for Weishaupt heaters (device families 49, 50, 51 and 59) must now have FL_SPECIAL_INF flag removd, otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! URL commands /U (dislpay user-defined variables) and /X (display MAX! values) have been removed as these values can now be accessed via parameters 20000++ ATTENTION: BREAKING CHANGE! PPS time program parameters (15050-15091) have been streamlined with BSB/LPB time program parameters, resulting in only one parameter per day (instead of six), covering three switch points (start and end) per parameter. ATTENTION: For ESP32, BSB-LAN requires ESP32 framework version 3.0.x - please look out for errors or strange behaviour (1-Wire sensors are still not tested) as well as any other kind of strange behaviour/crashes. ATTENTION: New configuration options in BSB_LAN_config.h - please update your existing configuration files! Web-based configuration will be overwritten with config file settings due to change in EEPROM layout! ATTENTION: New manual URL: https://docs.bsb-lan.de/ BUTTONS and RGT_EMULATION have been moved from main code to custom_functions library. To continue using them, make use of BSB_LAN_custom_*.h files and activate CUSTOM_COMMANDS definement. Most configuration definements removed from BSB_LAN_config.h . Almost all functionality can now be configured without reflashing. BSB-LAN now supports MQTT auto discovery (supported e.g. by Home Assistant). To create devices, call URL command /M1 , to remove them call /M0 ATTENTION: MQTT auto discovery creates a general switch for the BSB-LAN device in Home Assistant. This switch will immediately write all parameters with the values stored in Home Assistant. DO NOT USE THIS SWITCH unless you REALLY know what it does! \"Set\" button in webinterface now also works with non-default destination devices (i.e. 1 instead of 0) Queried/set parameters are now forwarded to the MQTT broker (if MQTT is enabled) Previously used /M1 and /M0 for toggling monitor function have been removed since it can now be accessed via the configuration in the webinterface. Listing categories with /K now also works with destination device (e.g. /K!1 for destination device 1, default is 0). Important bugfix for OTA update: Previous versions had a hard limit on file size which newer heating systems with several hundred parameters hit, so no OTA update was possible. This is now fixed, but affected users will have to make a USB-based update one more time. 1-Wire- and DHT-sensors are now be disabled with value -1 instead of 0. In web interface, an empty field is also accepted. MQTTTopicPrefix is no longer optional, \"fromBroker\" topic removed (formerly used to send commands to BSB-LAN via MQTT) Using the 24h averages functionality no longer requires the use of an SD card. SD card will only be used to store averages if interval logging to SD card is active. New PPS room unit variant for RVD130, which increases high nibble of magic byte at every transaction. Polling current time from NTP server is active by default. Deactivate by setting ntp_server to empty string. New parameter flag FL_NOSWAP_QUR for parameters that do not swap the first two bytes of command ID in QUR telegram New parameter flag FL_FORCE_INF for parameters from which we are certain they only work with INF (such as room temperature). Will force an INF telegram even if /S is used to set the parameter (allows setting room temperature via web interface) BSB-LAN logo watermark in log graph display (DE-cr) Binary ENUMs (yes/no, on/off etc.) now return either 0 or 1 when queried, not - as is the case with some heating systems - 0 or 255. Setting any value from 1 to 255 is still possible. Fixed a breaking bug in PPS that prevented running properly in active/room unit mode. Fixed bug (or, based on perspective, reduced security) that prevented issuing commands via serial/telnet console when HTTP authentication was active Various bugfixes, among others logging of bus telegrams on storage device. New OneWireNg library version This release has been supported by the following sponsors: Erich Scheilko Version 3.3 12.03.2024 ATTENTION: New configuration options in BSB_LAN_config.h - please update your existing configuration files! ESP32: Support for receiving date and time via NTP instead of taking it from the heater. MQTT broker setting now accepts domain names as well as IP addresses. An optional port can be added after a trailing colon, e.g. broker.my-domain.com:1884. Otherwise defaults to 1883. ESP32 NodeMCU: Support for optional additional SD card adapter. SPI pins can be configured in BSB_LAN_config.h , defaulting to standard SPI pins 5, 18, 19 and 23. ESP32: Switching between log storage device (SD card / internal flash) can now be done in the web interface. ESP32: Create temporary WiFi AP in case Ethernet connection fails ESP32 NodeMCU: EEPROM clear pin has changed from 18 to 21 in order not to collide with SPI SD card adapters. This release has been supported by the following GitHub sponsors: jsimon3 Version 3.2 15.11.2023 ATTENTION: In BSB_LAN_config.h , new layout of log_parameters , avg_parameters and ipwe_parameters now written in curly brackets and different size (40 instead of 80) and type ( parameter instead of float ). Please update your BSB_LAN_config.h accordingly to prevent errors! Added configuration file versioning checks to prevent the use of outdated configuration files with newer software versions. Variable esp32_save_energy now defaults to false because it only seems to make sense when using LAN connection or if you use WiFi and can live with the performance impact. Added folder custom_functions where code examples for useful functions will be collected which are nevertheless too specific to be added to BSB-LAN's core code. Added custom function example for mapping DS18B20 sensors to fixed custom floats parameters This release has been supported by the following GitHub Sponsors: BraweProg, fdobrovolny, Harald Version 3.1 04.06.2023 ATTENTION: For ESP32 devices using internal flash for log storage: Filesystem was switched from SPIFFS to LittleFS. Download important log data before updating! ATTENTION: In BSB_LAN_config.h , the structure of log_parameters , avg_parameters and ipwe_parameters has changed and now includes the destination device on the bus! ATTENTION: New EEPROM schema may result in lost web-configuration settings when updating. Note your settings prior to updating! ATTENTION: New variable esp32_save_energy in BSB_LAN_config.h - update before compiling new version. ATTENTION: New variable bssid in BSB_LAN_config.h - defines a fixed BSSID address to connect to when using WiFi on ESP32. Parameters can now be queried from other devices on the bus using the ! notation also when logging (including MQTT) or using average or IPWE parameters Enable/disable power saving on ESP32. Saves 20% of energy, but can have impact on WiFi range and downloading speed of log files when using WiFi (LAN not affected) Improved performance and flash memory usage on ESP32 devices using internal flash for logging due to switch from SPIFFS to LittleFS To improve handling of large datalogs: date range selection in /DG , new url commands /Da,b , /DA , /DB , /Dn , /DI and /DKn This release has been supported by the following GitHub Sponsors: lapixo, nrobadey Version 3.0 16.03.2023 ATTENTION: BSB_LAN_custom_defs.h .default needs to be renamed to BSB_LAN_custom_defs.h and only contains a very limited set of parameters by default. See the manual for getting device-specific parameter lists. Add new /LN URL command to force logging irrespective of current interval. Improved library checks: No need for ESP32 users to remove ArduinoMDNS and WiFiSpi folders anymore. New SdFat version 2 for Arduino Due New data type VT_BINARY_ENUM This release has been supported by the following GitHub Sponsors: Alex, DE-cr Version 2.2 01.11.2022 ATTENTION: Several variables in BSB_LAN_config.h .default have changed their variable type, it's probably best to re-create your BSB_LAN_config.h from scratch. Parameter numbers are now floating point (i.e. XXXX.Y) because some parameters contain two different kinds of information. These are now shown in decimal increments of 0.1. You can still qurey the \"main\" parameter via XXXX (without .Y) Lots of bugfixes and new data types Device-specific parameter lists supported Version 2.1 30.07.2022 Many new parameters for LMU64 ATTENTION: New categories for LMU64 and RVD/RVP controllers due to their different numbering schemes. Will be filled over time. PPS and sensor categories have moved up by two. ESP32: OTA now uses system-wide HTTP AUTH authentication credentials Improved built-in chart display /DG , new configuration definement #define USE_ADVANCED_PLOT_LOG_FILE - thanks to Christian Ramharter Optional logging via UDP broadcast added (configurable, same parameters and format as in SD card logging) Lots of bugfixes Version 2.0 31.12.2021 ATTENTION: LOTS of new functionalities, some of which break compatibility with previous versions, so be careful and read all the docs if you make the upgrade! ATTENTION: Added and reorganized PPS parameters, almost all parameter numbers have changed! ATTENTION: Change of EEPROM layout will lead to loading of default values from BSB_LAN_config.h ! You need to write settings to EEPROM in configuration menu again! ATTENTION: Folder locations and filenames have been adjusted for easier installation! If you update your installation, please take note that the configuration is now in BSB_LAN_config.h (LAN in caps), and no longer in BSB_lan_config.h (lower-caps \"lan\") ATTENTION: HTTP-Authentication configuration has changed and now uses plain text instead of Base64 encoded strings! Thanks to GitHub user do13, this code now also compiles on a ESP32, tested on NodeMCU-ESP32, Olimex ESP32-POE and Olimex ESP32-EVB boards. ESP32 code uses SDK version 2.0.2, please take note when configuring Arduino IDE! OTA Updates now possible for ESP32-based devices Support for special PPS devices (based on DC225/Honeywell MCBA) added Webinterface allows for configuration of most settings without the need to re-flash, also split into basic and extended configuration Added better WiFi option for Arduinos through Jiri Bilek's WiFiSpi library, using an ESP8266-based microcontroller like Wemos D1 mini or LoLin NodeMCU. Older WiFi-via-Serial approach no longer supported. Added MDNS_SUPPORT definement in config so that BSB-LAN can be discovered through mDNS If BSB-LAN cannot connect to WiFi on ESP32, it will set up its own access point BSB-LAN with password BSB-LPB-PPS-LAN for 30 minutes. After that, it will reboot and try to connect again. New MQTT functions, including allowing any parameter to be set by an MQTT message and actively query any parameter once by sending an MQTT message Added support for BME280 sensors Setting a temporary destination address for querying parameters by adding !x (where x is the destination id), e.g. /6224!10 to query the identification of the display unit URL commands /A /B /T and /JA have been removed as all sensors can now be accessed via parameter numbers 20000 and above as well as (currently) under new category K49. New categories added, subsequent categories have been shifted up HTTP Authentification now uses clear text username and password in configuration PPS users can now send time and day of week to heater Lots of new parameters added URL command /JR allows for querying the standard (reset) value of a parameter in JSON format URL command /JB allows for backing up parameters to JSON file New library for DHT22 should provide more reliable results Consolidated data and value types: New data types VT_YEAR , VT_DAYMONTH , VT_TIME as subsets of VT_DATETIME for parameters 1-3, replacing VT_SUMMERPERIOD and adjusting VT_VACATIONPROG . New value types DT_THMS for time consisting of hour:minutes:seconds MQTT: Use MQTTDeviceID as a client ID for the broker, still defaults to BSB-LAN . ATTENTION: Check your config if you're broker relies on the client ID in any way for authorization etc. Version 1.1 10.11.2020 ATTENTION: DHW Push (\"Trinkwasser Push\") parameter had to be moved from 1601 to 1603 because 1601 has a different \"official\" meaning on some heaters. Please check and change your configuration if necessary ATTENTION: New categories added, most category numbers (using /K) will be shifted up by a few numbers. /JA URL command outputs average values Many new parameters decoded New parameters for device families 25, 44, 51, 59, 68, 85, 88, 90, 96, 97, 108, 134, 162, 163, 170, 195, 209, 211 Improved mobile display of webinterface Added definement \"BtSerial\" for diverting serial output to Serial2 where a Bluetooth adapter can be connected (5V->5V, GND->GND, RX->TX2, TX->RX2). Adapter has to be in slave mode and configured to 115200 bps, 8N1. Lots of added Polish translations New data types VT_BYTE10 , VT_SPF Bugfix for PPS bus regarding display of heating time programs Bugfix for MQTT Version 1.0 03.08.2020 /JI URL command outputs configuration in JSON structure /JC URL command gets list of possible values from user-defined list of functions. Example: /JC=505,700,701,702,711,1600,1602 Logging telegrams (log parameter 30000) now writes to separate file ( journal.txt ). It can be reset with /D0 (same time with datalog.txt) command and dumped with /DJ command. removed WIFI configuration as it is no longer applicable for the Due lots of new parameters for various device families Code optimization and restructuring, general increase of speed new schemativs for board layout V3 lots of bugfixes Version 0.44 11.05.2020 Added webserver functionality via SD card and various other improvements from GitHub user dukess Added JSON output for MQTT mobile friendlier web interface more parameters and device families last version completely tested on Mega 2560. Future versions may still run on the Mega, but will only be tested on the Arduino Due. Version 0.43 20.02.2020 Added support for HardwareSerial (Serial1) connection of the adapter. Use RX pin 19 in bus() definition to activate. See manual/forum for hardware details. Added definement DebugTelnet to divert serial output to telnet client (port 23, no password) in BSB_LAN_config.h Added possibility to control BSB-LAN (almost?) completely via USB-serial port. Most commands supported like their URL-counterparts, i.e. /<passcode>/xxx to query parameter xxx or /<passcode>/N to restart Arduino. Changed default device ID from 6 (room controller \"RGT1\") to unused ID 66 (\"LAN\") Many new parameters, please run /Q to see any possible changes for your device family and report back to us! Added global variables (arrays of 20 bytes) custom_floats[] and custom_longs[] for use with BSB_LAN_custom.h , for example to read sensors etc. Output of these variables is done via new URL command /U Added device families 23 and 29 (Gr\u00fcnenwald heaters) Added device families 49, 52, 59 (Weishaupt heaters) Added device fmilies 91, 92, 94, 118, 133, 136, 137, 165, 184, 188 (various controllers like QAA75 or AVS37) Added device family 171 (B\u00f6sch wood pellet system) Added device family 172 (SensoTherm BLW Split B (RVS21.826F/200)) Added device families 186 and 164 (Olymp WHS-500) Added device family 195 variant 2 (Thision 19 Plus / LMS14.111B109) Including DHT, 1Wire and burner status parameters (>20000) to MQTT English is now default language Updated various translations Added STL files to print a case with a 3D printer (thanks to FHEM user EPo!) Moved all sensors to /T , /H is now no longer used New virtual parameters 702/703 for Weishaupt room controller New virtual parameter 10003 to set outside temperature on newer systems Added text descriptions for error phases (6706 ff.) /Q is now more comprehensive New data types VT_CUSTOM_ENUM and VT_CUSTOM_BYTE to extract information from non-standard telegrams (such as 702/703) Bugfix: DHCP (ethernet) implementation Version 0.42 21.03.2019 Added localization! Now you can help translate BSB-LAN into your language! Simply copy one of the language files from the localization folder ( LANG_DE.h is the most complete) and translate whatever you can. Non-translated items will be displayed in German. Attention: Language definition in BSB_LAN_config.h is now #define LANG <ISO-CODE> For example: #define LANG DE Added export to MQTT broker, use log_parameters [] in BSB_LAN_config.h to define parameters and activate MQTTBrokerIP definement. Added support for WiFi modules such as an ESP8266 or a Wemos Mega connected to Serial3 (RX:15/TX:14) of the Arduino. The ESP8266 has to be flashed with the AT firmware from Espressif to work. Please take note that WiFi over serial is by design much slower (only 115kpbs) than \"pure\" TCP/IP connections. Added new category \"34 - Konfiguration / Erweiterungsmodule\". All subsequent categories move one number up! Lots of new parameters coming from device family 123, please run /Q to see if some parameters also work for your heater! Lots of new yet unknown parameters through brute force querying :) (parameter numbers 10200 and above) Added further PPS-Bus commands, moved parameter numbers to 15000 and above Default PPS mode now \"listening\". Use third parameter of bus definition to switch between listening and controlling, 1 stands for controlling, everything else for listening, i.e. BSB bus(68,67,1) sends data to the heater, BSB bus(68,67) only receives data from heater / room controller. You can switch between modes at run-time with URL command /P2,x where x is either 1 (for controlling) or not 1 (for listening only) Fixed bug that crashed PPS bus queries Stability improvements for PPS bus Improved graph legend when plotting several parameters Added JSON export; query with /JQ=a,b,c,d... or push queries to /JQ or push set commands to /JS Logging of MAX! parameters now possible with logging parameter 20007 Added Waterstage WP device family (119) Added WHG Procon device family (195) Added unit to log file as well as average output Rewrote device matching in cmd_tbl to accomodate also device variant (Ger\u00e4tevariante). Run /Q to see if transition has worked for your device! Added BSB_LAN_custom_setup.h and BSB_LAN_custom_global.h for you to add individual code (best used in conjunction with BSB_LAN_custom.h ) Marked all (known) OEM parameters with flag FL_OEM . OEM parameters are set by default as read-only. To make them writeable, change FL_OEM from 5 to 4 in BSB_LAN_defs.h Increased performance for querying several parameters at once (similar to category query) Added config option to define subnet. /Q no longer needs #define DEBUG Bugfix ENUM memory adressing Bugfix in reset function /N , clear EEPROM during reset with /NE Added favicon.ico Split of cmdtbl into cmdtbl1 and cmdtbl2 due to Arduino's(?) limit of 32kB size of struct, opening up more space for new parameters. Version 0.41 17.03.2019 Interim release containing all changes from 0.42 above, except locaization, i.e. all text fragments are still part of the main code. Version 0.40 21.01.2018 Implemented polling of MAX! heating thermostats, display with URL command /X See BSB_LAN_custom.h for an example to transmit average room temperature to heating system. Added new category \"22 - Energiez\u00e4hler\" - please note that all subsequent categories move one up! New virtual parameter 1601 (manual TWW push) Added Fujitsu Waterstage WSYP100DG6 device family (211) Added CTC device family (103) New definement #define TRUSTED_IP2 to grant access to a second local IP address Added optional definement #define GatewayIP in BSB_LAN_config.h to enable setting router address different from x.x.x.1 Removed parameter 10109 because it is the same as 10000 Added function to check all known CommandIDs on your own heating system. Use /Q after enabling definement #define DEBUG in BSB_LAN_config.h Added parameter numbers to category menu Updated analyze.sh hopefully fixing the memory issue Moved HTML strings to html_strings.h Version 0.39 02.01.2018 Implemntation of PPS-Bus protocol. See /K40 for the limited commands available for this bus. Use setBusType(2) to set to PPS upon boot or /P2 to switch temporarily. Set GPIOs to input by using /Gxx,I Definement #define CUSTOM_COMMANDS added. Use this in your configuration to include individual code from BSB_LAN_custom.h (needs to be created by you!) which is executed at the end of each main loop. Variables custom_timer and custom_timer_compare have been added to execute code at arbitrary intervals. Added LogoBloc Unit L-UB 25C device family (95) several new parameters added Bugfix for logging Brennerlaufzeit Stufe 2 Version 0.38 22.11.2017 ATTENTION: New BSB_LAN_config.h configurations! You need to adjust your configuration when upgrading to this version! Webserver port is now defined in #define Port xx IP address is now defined in #define IPAddr 88,88,88,88 form - note the commas instead of dots! Special log parameters 20002 to 20006 have changed, see BSB_LAN_config.h for their new meaning Added new virtual parameter 701 (Pr\u00e4senztaste) which enters reduced temperature mode until next timed switch Added Br\u00f6tje BOB device family (138), including many new parameters! Added Br\u00f6tje SOB26 device family (28) Added Elco Aquatop 8es device family (85) Added Elco Thision 13 Plus device family (203) Added Weishaupt WTU 25-G familiy (50) Added output for absolute humidity (g/m3) for DHT22 sensors New schematics for Arduino/Raspberry board layout Included support for W5500 Ethernet2 shields. Activate definement ETHERNET_W5500 in BSB_LAN_config.h Including two-stage oil furnaces BC-counters and logging - please note that logging parameters have been adjusted, see BSB_LAN_config.h for new values! Added new options for commands /P and /S to allow specifying a different destination device during runtime Added new configuration definement CUSTOM_COMMANDS which includes BSB_LAN_custom.h at the end of each main loop. You may use custom_timer (set to current millis()) and custom_timer_compare to execute only every x milliseconds. Bugfixing SD-card logging in monitor mode Bugfix for setting hour:time parameters via webinterface Version 0.37 08.09.2017 LPB implementation! More than 450 parameters supported! Switch temporarily between LPB and BSB with the /Px command (with x equals to 0=BSB, 1=LPB) or use the setBusType config option to set bus-type at boot-time. Parameter numbers are the same as for BSB. Version 0.36 23.08.2017 bugfix: brought back VT_BIT list of options which were erroneously deleted :(, fixed/freed several memory issues Version 0.35 25.06.2017 new category \"Sitherm Pro\"; caution: category numbers all move up by one, starting from category \"W\u00e4rmepumpe\" (from 20 to 21) onwards. graph display of logging data now comes with crosshair and shows detailed values as tooltip improved SD-card output by factor 3 (from 16 to 45 kbps), switching SD-card library from from SD.h to SdFat.h (https://github.com/greiman/SdFat) brings another 10% performance boost adjusted paths and directory layout of SdFat to enable compiling from sketch directory. new data type VT_SINT for signed int data, currently only used in some Sitherm Pro parameters Version 0.34 29.05.2017 Log data can now be displayed as graph Webinterface can now display and set VT_BIT type parameters in human-readable form added KonfigRGx descriptions; caution: various sources used, no guarantee that descriptions match your individual heating system! VT_BIT is generally read-only in the webinterface. To set, use URL command /S with decimal representation of value fixed a bug with VT_SECONDS_SHORT5 , affecting parameters 9500 and 9540. fixed bug regarding Fujitsu's device family (from 127 to 170) moved libraries from folder libraries to src so they can be included without copying them to the Arduino libraries folder modified DallasTemperature.h's include path for OneWire.h Version 0.33 09.05.2017 no more heating system definements anymore due to new autodetect function based on device family (parameter 6225), or set device_id variable to parameter value directly two more security options: TRUSTED_IP to limit access to one IP address only, and HTTP authentication with username and password Average values are saved on SD-card if present and LOGGER definement is activated deactivate logging by setting /L0=0 - this way you can enable LOGGER definement without filling up SD card but still save average values new error codes for THISION added dump of data payload on website for commands of unknown type, greyed out unsopported parameters enable logging of telegrams (log parameter 30000) also in monitor mode (bsb.cpp and bsb.h updated) time from heating system is now retreived periodically from broadcast telegrams, further reducing bus activity new data type VT_BIT for parameters that set individual bits. Display as binary digits, setting still using decimal representation new data type VT_TEMP_SHORT5_US for unsigned one byte temperatures divided by 2 (so far only 887 Vorlaufsoll NormAussentemp) new data type VT_PERCENT5 for unsigned one byte temperatures divided by 2 (so far only 885 Pumpe-PWM Minimum) new data type VT_SECONDS_WORD5 for two byte seconds divided by 2 (so far only 2232, 9500 and 9540) new data type VT_SECONDS_SHORT4 for (signed?) one byte seconds divided by 4 (so far only 2235) new data type VT_SECONDS_SHORT5 for (signed?) one byte seconds divided by 5 (so far only 9500, 9540) new data type VT_SPEED2 for two byte rpm (so far only 7050) cleaned up set() function from apparent duplicate cases added cases for VT_TEMP_WORD , VT_SECONDS_WORD5 , VT_TEMP_SHORT , VT_TEMP_SHORT5 , VT_SECONDS_SHORT4 to set() function Version 0.32 18.04.2017 lots of new parameters suppoerted newly designed webinterface allows control over heating system without any additional software or cryptic URL commands. URL commands of course are still available, so no need to change anything when using FHEM etc. German webinterface available with definement LANG_DE new URL-command /LB=x to log only broadcast messages (x=1) or all bus messages (x=0) new URL-command /X to reset the Arduino (need to enable RESET definement in BSB_LAN_config.h ) new logging parameters 20002 and 20003 for hot water loading times and cycles moved DS18B20 logging parameters from 20010-20019 to 20200-20299 and DHT22 logging parameters from 20020-20029 to 20100 to 20199 moved average logging parameter from 20002 to 20004 set numerous parameters to read-only because that's what they obviously are (K33-36) various bugfixes Version 0.31 10.04.2017 increased dumping of logfile by factor 5 / as long as we still have memory left, you can increase logbuflen from 100 to 1000 to increase transfer speed from approx. 16 to 18 kB/s adjusted burner activity monitoring based on broadcast messages for Br\u00f6tje systems removed definement PROGNR_5895 because so far, it has only disabled an ENUM definition. removed definement PROGNR_6030 because double command ID could be resolved via BROETJE / non-BROETJE definements renamed BROETJE_SOB to BROETJE in order to allow for fine-grained distinction between different BROETJE cases (e.g. 6800ff) This means you have to activate TWO definements when using a Br\u00f6tje system now: The general BROETJE as well as BROETJE_SOB or BROETJE_BSW . Have a look at your serial log for parameters 6800 to see which command IDs fit your system and activate one of both accordingly. changed 16-Bit addressing of flash memory to 32-Bit to address crashes due to ever growing PROGMEM tables - now we have lots of air to breathe again for new command IDs :) removed trailing \\0 string from several ENUMs that led to wrong ENUM listings. Please keep in mind not to end ENUMs with a trailing \\0 ! Version 0.30 22.03.2017 Time library by Paul Stoffregen (https://github.com/PaulStoffregen/Time) is now required and included in the library folder. adds logging of raw telegram data to SD card with logging parameter 30000. Logging telegram data is affected by commands /V and /LU adds command /LU=x to log only known (x=0) or unknown (x=1) command IDs when logging telegram data removed define USE_BROADCAST , broadcast data is now always processed new internal functions GetDateTime, TranslateAddr, TranslateType Version 0.29 07.03.2017 adds command /C to display current configuration adds command /L to configure logging interval and parameters adds option for command /A to set 24h average parameters during runtime adds special parameter 20002 for logging /A command (24h averages, only makes sense for long logging intervals) bugfixes for logging DS18B20 sensors Version 0.28 05.03.2017 adds special parameters 20000++ for SD card logging of /B, /T and /H commands (see BSB_LAN_config.h for examples) adds version info to BSB_LAN web interface Version 0.27 01.03.2017 adds date field to log file (requires exact time to be sent by heating system) /D0 recreates datalog.txt file with table header added \"flags\" field to command table structure. Currently, only FL_RONLY is supported to make a parameter read-only added DEFAULT_FLAG in config. Defaults to NULL , i.e. all fields are read/writeable. Setting it to FL_RONLY makes all parameters read-only, e.g. for added level of security. Individual parameters can be set to NULL / FL_RONLY to make only these parameters writable/read-only. Version 0.26 27.02.2017 added functionality for logging on micro SD card, using the slot of the w5100 Ethernet shield more parameters added (e.g. 8009) Version 0.25 21.02.2017 more FUJITSU parameters added Version 0.24 14.02.2017 updated README with added functions added German translations of FAQ and README, courtesy of Ulf Dieckmann Version 0.23 12.02.2017 minor bugfix Version 0.22 07.02.2017 more FUJITSU parameters (hopefully) correct implementation of VT_VOLTAGE readings minor bugfixes Version 0.21 06.02.2017 added numerous parameters for Fujitsu W\u00e4rmepumpe, including new #define FUJITSU directive to activate these parameters due to different parameter numbers minor bugfixes Version 0.20 27.01.2017 added more parameters for Feststoffkessel minor bugfixes Version 0.19 01.01.2017 added humidity command /H , currently for DHT22 sensors added 24h average command /A , define parameters in BSB_LAN_config.h removed trailing whitespace from menu strings fixed command id 0x053D04A2 for THISION heaters included Rob Tillaart's DHT library because there are various libraries implementing the protocol and this one is used in the code for its ability to address multiple sensors with one object. removed /temp URL parameter as it is a duplicate of /T included loop to display DHT22 sensors in IPWE making compiling IPWE extensions optional ( #define IPWE ) Version 0.18 22.12.2016 split off configuration into bsb_lan_config.h split off command definitions into bsb_lan_defs.h changed GPIO return values from LOW/HIGH to 1/0 reactivated and updated IPWE (define parameters in config) check for protected pins when accessing GPIO (define in config) added schematics and PCB files to new subfolder \"schematics\" Version 0.17a 20.12.2016 minor errors corrected Version 0.17 20.12.2016 merged v0.16 with FHEM user miwi's changes Version 0.16 20.11.2016 removed IPWE and EthRly interface added GPIO interface merged parameters from J.Weber resolved duplicate command IDs Version 0.15a 25.07.2016 collated the commands from a Python project and this project, merged the two versions, corrected obvious errors. Inserted hypothetical numerical values in ENUM definitions where Broetje manuals documented only the message texts. added information from traces in a Broetje installation with an ISR-SSR controller and a WOB 25C oil furnace. Version 0.15 21.04.2016 added Solar and Pufferspeicher from Elco Logon B & Logon B MM Version 0.14 04.04.2016 minor bugfixes for Broetje SOB extended broadcast handling (experimental) Version 0.13 31.03.2016 change resistor value in receiving path from 4k7 to 1k5 added values 0x0f and 0x10 to Enum8005 fixed strings for Zeitprogramme added timeout for sending a message (1 second) added /T for querying one wire temperature sensors in mixed querys added special handling for Broetje SOB simplified settings Version 0.12 09.04.2015 added ONEWIRE_SENSORS to ipwe fixed parameter decoding for ELCO Thision heating system Version 0.11 07.04.2015 fixed parameter decoding for ELCO Thision heating system Version 0.10 15.03.2015 added more parameters for ELCO Thision heating system Version 0.9 09.03.2015 added more parameters for ELCO Thision heating system printTelegramm returns value string for further processing Version 0.8 05.03.2015 added parameters for ELCO Thision heating system added IPWE extension minor bugfixes Version 0.7 06.02.2015 added bus monitor functionality Version 0.6 02.02.2015 renamed SoftwareSerial to BSBSoftwareSerial changed folder structure to enable simple build with arduino sdk Version 0.5 02.02.2015 bugfixes added documentation (README) added passkey feature added /R feature (query reset value) added /E feature (list enum values) added setter for almost all value types fixed indentation added /V feature to set verbosity for serial output set baudrate to 115200 for serial output redirecting favicon request added some images of the BSB adapter Version 0.1 21.01.2015 initial version","title":"ChangeLog"},{"location":"CHANGELOG.html#changelog","text":"","title":"ChangeLog"},{"location":"CHANGELOG.html#current-master","text":"ATTENTION: BREAKING CHANGE! Streamlined topic structure for MQTT. New strucuture adds /status for querying a parameter, /set for SETting a parameter, /inf for sending data as INF telegram and /poll to force BSB-LAN to send an update of that parameter value to the broker. If you are using MQTT auto-discovery, ideally, calling /M1 should update these changes. However, if you are using your own configurations, you'll have to make adjustments here. ATTENTION: BREAKING CHANGE! When using JSON settings for MQTT, previously all messages were written to the BSB-LAN/json and thus basically immediately overwritten when logging several parameters. Now this setting only determines the format (and not format and topic) of the data that is written into /status of each parameter. For auto-discovery, plain text remains the only valid choice. ATTENTION: BREAKING CHANGE The acknowledgement message sent by BSB-LAN to the MQTT topic has been removed. Instead, QoS for publishing messages has been set to level 1. ATTENTION: BREAKING CHANGE: Log configuration values have changed. However, only users that have logged to UDP are affected and will have to adjust their settings. ATTENTION: /JK=ALL now lists all categories of all devices in LPB systems with more than one device. Use dev_fam (device family), dev_var (device variant), dev_id (destination device ID) and dev_name (device model) elements to sort and identify which category applies to the current destination device. Added setting to only publish log parameters to MQTT. Forcing MQTT updates via /poll topic are still possible. Added state_class for non cumulative sensors in MQTT auto-discovery Updated the room unit emulation in custom_functions to work with version 4.x. Bugfix for VT_ENERGY, added new data type VT_ENERGY10 and VT_ENERGY10_N Disabling parameters can now be done both with an empty value as well as by sending --- . Sending an empty value is still possible, but is depracated and will be removed at some later time. BSB-LAN now scans the BSB/LPB bus during startup (and later periodically, if not connected to heating system) for other devices on the bus. This significantly reduces access times later on for systems with more than one device on the bus. New version from new repo of PubSubClient. Hopefully with this version, disconnects will be greatly reduced. French and German translations of the manual added, special thanks to GitHub user @plauwers for this! Numerous bugfixes, especially for the JSON API","title":"Current Master"},{"location":"CHANGELOG.html#version-41","text":"06.11.2024 ATTENTION: BREAKING CHANGE! Changed topic structure for MQTT. This means that all existing MQTT entities in your home-automation system will have to be adjusted or created anew! The new structure now is BSB-LAN/<device id>/<category id>/<parameter number> . ATTENTION: BREAKING CHANGE! Changed unique_id for MQTT auto-discovery. This means that all MQTT entities that have been created via auto-discovery will have to be created anew! ATTENTION: Configuration options fixed_device_family and fixed_device_variant have been removed since they no longer work for device-specific parameter lists. If your heating system is off when turning on the microcontroller, BSB-LAN will try to acquire the details every 60 seconds. ATTENTION: Change of configuration options results in new EEPROM layout, therefore EEPROM will be reinitialized based on configuration of BSB_LAN_config.h . MQTT auto-discovery now works for all devices, not only device ID 0. Use /M1!<x> or /M0!<x> to create/remove entities for device ID <x> . Changed MQTT auto-discovery messages' flag to \"retain\" so that parameters remain available after reboot of Home Assistant.","title":"Version 4.1"},{"location":"CHANGELOG.html#version-40","text":"01.11.2024 ATTENTION: BREAKING CHANGE! Room temperature parameter 10000, 10001 and 10002 must now have the additional flag FL_SPECIAL_INF , otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! Outside temperature simulation parameter 10017 must have FL_SPECIAL_INF flag removed, otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! Room temperature parameter 10000, 10001 and 10002 for Weishaupt heaters (device families 49, 50, 51 and 59) must now have FL_SPECIAL_INF flag removd, otherwise setting temperature will not work! ATTENTION: BREAKING CHANGE! URL commands /U (dislpay user-defined variables) and /X (display MAX! values) have been removed as these values can now be accessed via parameters 20000++ ATTENTION: BREAKING CHANGE! PPS time program parameters (15050-15091) have been streamlined with BSB/LPB time program parameters, resulting in only one parameter per day (instead of six), covering three switch points (start and end) per parameter. ATTENTION: For ESP32, BSB-LAN requires ESP32 framework version 3.0.x - please look out for errors or strange behaviour (1-Wire sensors are still not tested) as well as any other kind of strange behaviour/crashes. ATTENTION: New configuration options in BSB_LAN_config.h - please update your existing configuration files! Web-based configuration will be overwritten with config file settings due to change in EEPROM layout! ATTENTION: New manual URL: https://docs.bsb-lan.de/ BUTTONS and RGT_EMULATION have been moved from main code to custom_functions library. To continue using them, make use of BSB_LAN_custom_*.h files and activate CUSTOM_COMMANDS definement. Most configuration definements removed from BSB_LAN_config.h . Almost all functionality can now be configured without reflashing. BSB-LAN now supports MQTT auto discovery (supported e.g. by Home Assistant). To create devices, call URL command /M1 , to remove them call /M0 ATTENTION: MQTT auto discovery creates a general switch for the BSB-LAN device in Home Assistant. This switch will immediately write all parameters with the values stored in Home Assistant. DO NOT USE THIS SWITCH unless you REALLY know what it does! \"Set\" button in webinterface now also works with non-default destination devices (i.e. 1 instead of 0) Queried/set parameters are now forwarded to the MQTT broker (if MQTT is enabled) Previously used /M1 and /M0 for toggling monitor function have been removed since it can now be accessed via the configuration in the webinterface. Listing categories with /K now also works with destination device (e.g. /K!1 for destination device 1, default is 0). Important bugfix for OTA update: Previous versions had a hard limit on file size which newer heating systems with several hundred parameters hit, so no OTA update was possible. This is now fixed, but affected users will have to make a USB-based update one more time. 1-Wire- and DHT-sensors are now be disabled with value -1 instead of 0. In web interface, an empty field is also accepted. MQTTTopicPrefix is no longer optional, \"fromBroker\" topic removed (formerly used to send commands to BSB-LAN via MQTT) Using the 24h averages functionality no longer requires the use of an SD card. SD card will only be used to store averages if interval logging to SD card is active. New PPS room unit variant for RVD130, which increases high nibble of magic byte at every transaction. Polling current time from NTP server is active by default. Deactivate by setting ntp_server to empty string. New parameter flag FL_NOSWAP_QUR for parameters that do not swap the first two bytes of command ID in QUR telegram New parameter flag FL_FORCE_INF for parameters from which we are certain they only work with INF (such as room temperature). Will force an INF telegram even if /S is used to set the parameter (allows setting room temperature via web interface) BSB-LAN logo watermark in log graph display (DE-cr) Binary ENUMs (yes/no, on/off etc.) now return either 0 or 1 when queried, not - as is the case with some heating systems - 0 or 255. Setting any value from 1 to 255 is still possible. Fixed a breaking bug in PPS that prevented running properly in active/room unit mode. Fixed bug (or, based on perspective, reduced security) that prevented issuing commands via serial/telnet console when HTTP authentication was active Various bugfixes, among others logging of bus telegrams on storage device. New OneWireNg library version This release has been supported by the following sponsors: Erich Scheilko","title":"Version 4.0"},{"location":"CHANGELOG.html#version-33","text":"12.03.2024 ATTENTION: New configuration options in BSB_LAN_config.h - please update your existing configuration files! ESP32: Support for receiving date and time via NTP instead of taking it from the heater. MQTT broker setting now accepts domain names as well as IP addresses. An optional port can be added after a trailing colon, e.g. broker.my-domain.com:1884. Otherwise defaults to 1883. ESP32 NodeMCU: Support for optional additional SD card adapter. SPI pins can be configured in BSB_LAN_config.h , defaulting to standard SPI pins 5, 18, 19 and 23. ESP32: Switching between log storage device (SD card / internal flash) can now be done in the web interface. ESP32: Create temporary WiFi AP in case Ethernet connection fails ESP32 NodeMCU: EEPROM clear pin has changed from 18 to 21 in order not to collide with SPI SD card adapters. This release has been supported by the following GitHub sponsors: jsimon3","title":"Version 3.3"},{"location":"CHANGELOG.html#version-32","text":"15.11.2023 ATTENTION: In BSB_LAN_config.h , new layout of log_parameters , avg_parameters and ipwe_parameters now written in curly brackets and different size (40 instead of 80) and type ( parameter instead of float ). Please update your BSB_LAN_config.h accordingly to prevent errors! Added configuration file versioning checks to prevent the use of outdated configuration files with newer software versions. Variable esp32_save_energy now defaults to false because it only seems to make sense when using LAN connection or if you use WiFi and can live with the performance impact. Added folder custom_functions where code examples for useful functions will be collected which are nevertheless too specific to be added to BSB-LAN's core code. Added custom function example for mapping DS18B20 sensors to fixed custom floats parameters This release has been supported by the following GitHub Sponsors: BraweProg, fdobrovolny, Harald","title":"Version 3.2"},{"location":"CHANGELOG.html#version-31","text":"04.06.2023 ATTENTION: For ESP32 devices using internal flash for log storage: Filesystem was switched from SPIFFS to LittleFS. Download important log data before updating! ATTENTION: In BSB_LAN_config.h , the structure of log_parameters , avg_parameters and ipwe_parameters has changed and now includes the destination device on the bus! ATTENTION: New EEPROM schema may result in lost web-configuration settings when updating. Note your settings prior to updating! ATTENTION: New variable esp32_save_energy in BSB_LAN_config.h - update before compiling new version. ATTENTION: New variable bssid in BSB_LAN_config.h - defines a fixed BSSID address to connect to when using WiFi on ESP32. Parameters can now be queried from other devices on the bus using the ! notation also when logging (including MQTT) or using average or IPWE parameters Enable/disable power saving on ESP32. Saves 20% of energy, but can have impact on WiFi range and downloading speed of log files when using WiFi (LAN not affected) Improved performance and flash memory usage on ESP32 devices using internal flash for logging due to switch from SPIFFS to LittleFS To improve handling of large datalogs: date range selection in /DG , new url commands /Da,b , /DA , /DB , /Dn , /DI and /DKn This release has been supported by the following GitHub Sponsors: lapixo, nrobadey","title":"Version 3.1"},{"location":"CHANGELOG.html#version-30","text":"16.03.2023 ATTENTION: BSB_LAN_custom_defs.h .default needs to be renamed to BSB_LAN_custom_defs.h and only contains a very limited set of parameters by default. See the manual for getting device-specific parameter lists. Add new /LN URL command to force logging irrespective of current interval. Improved library checks: No need for ESP32 users to remove ArduinoMDNS and WiFiSpi folders anymore. New SdFat version 2 for Arduino Due New data type VT_BINARY_ENUM This release has been supported by the following GitHub Sponsors: Alex, DE-cr","title":"Version 3.0"},{"location":"CHANGELOG.html#version-22","text":"01.11.2022 ATTENTION: Several variables in BSB_LAN_config.h .default have changed their variable type, it's probably best to re-create your BSB_LAN_config.h from scratch. Parameter numbers are now floating point (i.e. XXXX.Y) because some parameters contain two different kinds of information. These are now shown in decimal increments of 0.1. You can still qurey the \"main\" parameter via XXXX (without .Y) Lots of bugfixes and new data types Device-specific parameter lists supported","title":"Version 2.2"},{"location":"CHANGELOG.html#version-21","text":"30.07.2022 Many new parameters for LMU64 ATTENTION: New categories for LMU64 and RVD/RVP controllers due to their different numbering schemes. Will be filled over time. PPS and sensor categories have moved up by two. ESP32: OTA now uses system-wide HTTP AUTH authentication credentials Improved built-in chart display /DG , new configuration definement #define USE_ADVANCED_PLOT_LOG_FILE - thanks to Christian Ramharter Optional logging via UDP broadcast added (configurable, same parameters and format as in SD card logging) Lots of bugfixes","title":"Version 2.1"},{"location":"CHANGELOG.html#version-20","text":"31.12.2021 ATTENTION: LOTS of new functionalities, some of which break compatibility with previous versions, so be careful and read all the docs if you make the upgrade! ATTENTION: Added and reorganized PPS parameters, almost all parameter numbers have changed! ATTENTION: Change of EEPROM layout will lead to loading of default values from BSB_LAN_config.h ! You need to write settings to EEPROM in configuration menu again! ATTENTION: Folder locations and filenames have been adjusted for easier installation! If you update your installation, please take note that the configuration is now in BSB_LAN_config.h (LAN in caps), and no longer in BSB_lan_config.h (lower-caps \"lan\") ATTENTION: HTTP-Authentication configuration has changed and now uses plain text instead of Base64 encoded strings! Thanks to GitHub user do13, this code now also compiles on a ESP32, tested on NodeMCU-ESP32, Olimex ESP32-POE and Olimex ESP32-EVB boards. ESP32 code uses SDK version 2.0.2, please take note when configuring Arduino IDE! OTA Updates now possible for ESP32-based devices Support for special PPS devices (based on DC225/Honeywell MCBA) added Webinterface allows for configuration of most settings without the need to re-flash, also split into basic and extended configuration Added better WiFi option for Arduinos through Jiri Bilek's WiFiSpi library, using an ESP8266-based microcontroller like Wemos D1 mini or LoLin NodeMCU. Older WiFi-via-Serial approach no longer supported. Added MDNS_SUPPORT definement in config so that BSB-LAN can be discovered through mDNS If BSB-LAN cannot connect to WiFi on ESP32, it will set up its own access point BSB-LAN with password BSB-LPB-PPS-LAN for 30 minutes. After that, it will reboot and try to connect again. New MQTT functions, including allowing any parameter to be set by an MQTT message and actively query any parameter once by sending an MQTT message Added support for BME280 sensors Setting a temporary destination address for querying parameters by adding !x (where x is the destination id), e.g. /6224!10 to query the identification of the display unit URL commands /A /B /T and /JA have been removed as all sensors can now be accessed via parameter numbers 20000 and above as well as (currently) under new category K49. New categories added, subsequent categories have been shifted up HTTP Authentification now uses clear text username and password in configuration PPS users can now send time and day of week to heater Lots of new parameters added URL command /JR allows for querying the standard (reset) value of a parameter in JSON format URL command /JB allows for backing up parameters to JSON file New library for DHT22 should provide more reliable results Consolidated data and value types: New data types VT_YEAR , VT_DAYMONTH , VT_TIME as subsets of VT_DATETIME for parameters 1-3, replacing VT_SUMMERPERIOD and adjusting VT_VACATIONPROG . New value types DT_THMS for time consisting of hour:minutes:seconds MQTT: Use MQTTDeviceID as a client ID for the broker, still defaults to BSB-LAN . ATTENTION: Check your config if you're broker relies on the client ID in any way for authorization etc.","title":"Version 2.0"},{"location":"CHANGELOG.html#version-11","text":"10.11.2020 ATTENTION: DHW Push (\"Trinkwasser Push\") parameter had to be moved from 1601 to 1603 because 1601 has a different \"official\" meaning on some heaters. Please check and change your configuration if necessary ATTENTION: New categories added, most category numbers (using /K) will be shifted up by a few numbers. /JA URL command outputs average values Many new parameters decoded New parameters for device families 25, 44, 51, 59, 68, 85, 88, 90, 96, 97, 108, 134, 162, 163, 170, 195, 209, 211 Improved mobile display of webinterface Added definement \"BtSerial\" for diverting serial output to Serial2 where a Bluetooth adapter can be connected (5V->5V, GND->GND, RX->TX2, TX->RX2). Adapter has to be in slave mode and configured to 115200 bps, 8N1. Lots of added Polish translations New data types VT_BYTE10 , VT_SPF Bugfix for PPS bus regarding display of heating time programs Bugfix for MQTT","title":"Version 1.1"},{"location":"CHANGELOG.html#version-10","text":"03.08.2020 /JI URL command outputs configuration in JSON structure /JC URL command gets list of possible values from user-defined list of functions. Example: /JC=505,700,701,702,711,1600,1602 Logging telegrams (log parameter 30000) now writes to separate file ( journal.txt ). It can be reset with /D0 (same time with datalog.txt) command and dumped with /DJ command. removed WIFI configuration as it is no longer applicable for the Due lots of new parameters for various device families Code optimization and restructuring, general increase of speed new schemativs for board layout V3 lots of bugfixes","title":"Version 1.0"},{"location":"CHANGELOG.html#version-044","text":"11.05.2020 Added webserver functionality via SD card and various other improvements from GitHub user dukess Added JSON output for MQTT mobile friendlier web interface more parameters and device families last version completely tested on Mega 2560. Future versions may still run on the Mega, but will only be tested on the Arduino Due.","title":"Version 0.44"},{"location":"CHANGELOG.html#version-043","text":"20.02.2020 Added support for HardwareSerial (Serial1) connection of the adapter. Use RX pin 19 in bus() definition to activate. See manual/forum for hardware details. Added definement DebugTelnet to divert serial output to telnet client (port 23, no password) in BSB_LAN_config.h Added possibility to control BSB-LAN (almost?) completely via USB-serial port. Most commands supported like their URL-counterparts, i.e. /<passcode>/xxx to query parameter xxx or /<passcode>/N to restart Arduino. Changed default device ID from 6 (room controller \"RGT1\") to unused ID 66 (\"LAN\") Many new parameters, please run /Q to see any possible changes for your device family and report back to us! Added global variables (arrays of 20 bytes) custom_floats[] and custom_longs[] for use with BSB_LAN_custom.h , for example to read sensors etc. Output of these variables is done via new URL command /U Added device families 23 and 29 (Gr\u00fcnenwald heaters) Added device families 49, 52, 59 (Weishaupt heaters) Added device fmilies 91, 92, 94, 118, 133, 136, 137, 165, 184, 188 (various controllers like QAA75 or AVS37) Added device family 171 (B\u00f6sch wood pellet system) Added device family 172 (SensoTherm BLW Split B (RVS21.826F/200)) Added device families 186 and 164 (Olymp WHS-500) Added device family 195 variant 2 (Thision 19 Plus / LMS14.111B109) Including DHT, 1Wire and burner status parameters (>20000) to MQTT English is now default language Updated various translations Added STL files to print a case with a 3D printer (thanks to FHEM user EPo!) Moved all sensors to /T , /H is now no longer used New virtual parameters 702/703 for Weishaupt room controller New virtual parameter 10003 to set outside temperature on newer systems Added text descriptions for error phases (6706 ff.) /Q is now more comprehensive New data types VT_CUSTOM_ENUM and VT_CUSTOM_BYTE to extract information from non-standard telegrams (such as 702/703) Bugfix: DHCP (ethernet) implementation","title":"Version 0.43"},{"location":"CHANGELOG.html#version-042","text":"21.03.2019 Added localization! Now you can help translate BSB-LAN into your language! Simply copy one of the language files from the localization folder ( LANG_DE.h is the most complete) and translate whatever you can. Non-translated items will be displayed in German. Attention: Language definition in BSB_LAN_config.h is now #define LANG <ISO-CODE> For example: #define LANG DE Added export to MQTT broker, use log_parameters [] in BSB_LAN_config.h to define parameters and activate MQTTBrokerIP definement. Added support for WiFi modules such as an ESP8266 or a Wemos Mega connected to Serial3 (RX:15/TX:14) of the Arduino. The ESP8266 has to be flashed with the AT firmware from Espressif to work. Please take note that WiFi over serial is by design much slower (only 115kpbs) than \"pure\" TCP/IP connections. Added new category \"34 - Konfiguration / Erweiterungsmodule\". All subsequent categories move one number up! Lots of new parameters coming from device family 123, please run /Q to see if some parameters also work for your heater! Lots of new yet unknown parameters through brute force querying :) (parameter numbers 10200 and above) Added further PPS-Bus commands, moved parameter numbers to 15000 and above Default PPS mode now \"listening\". Use third parameter of bus definition to switch between listening and controlling, 1 stands for controlling, everything else for listening, i.e. BSB bus(68,67,1) sends data to the heater, BSB bus(68,67) only receives data from heater / room controller. You can switch between modes at run-time with URL command /P2,x where x is either 1 (for controlling) or not 1 (for listening only) Fixed bug that crashed PPS bus queries Stability improvements for PPS bus Improved graph legend when plotting several parameters Added JSON export; query with /JQ=a,b,c,d... or push queries to /JQ or push set commands to /JS Logging of MAX! parameters now possible with logging parameter 20007 Added Waterstage WP device family (119) Added WHG Procon device family (195) Added unit to log file as well as average output Rewrote device matching in cmd_tbl to accomodate also device variant (Ger\u00e4tevariante). Run /Q to see if transition has worked for your device! Added BSB_LAN_custom_setup.h and BSB_LAN_custom_global.h for you to add individual code (best used in conjunction with BSB_LAN_custom.h ) Marked all (known) OEM parameters with flag FL_OEM . OEM parameters are set by default as read-only. To make them writeable, change FL_OEM from 5 to 4 in BSB_LAN_defs.h Increased performance for querying several parameters at once (similar to category query) Added config option to define subnet. /Q no longer needs #define DEBUG Bugfix ENUM memory adressing Bugfix in reset function /N , clear EEPROM during reset with /NE Added favicon.ico Split of cmdtbl into cmdtbl1 and cmdtbl2 due to Arduino's(?) limit of 32kB size of struct, opening up more space for new parameters.","title":"Version 0.42"},{"location":"CHANGELOG.html#version-041","text":"17.03.2019 Interim release containing all changes from 0.42 above, except locaization, i.e. all text fragments are still part of the main code.","title":"Version 0.41"},{"location":"CHANGELOG.html#version-040","text":"21.01.2018 Implemented polling of MAX! heating thermostats, display with URL command /X See BSB_LAN_custom.h for an example to transmit average room temperature to heating system. Added new category \"22 - Energiez\u00e4hler\" - please note that all subsequent categories move one up! New virtual parameter 1601 (manual TWW push) Added Fujitsu Waterstage WSYP100DG6 device family (211) Added CTC device family (103) New definement #define TRUSTED_IP2 to grant access to a second local IP address Added optional definement #define GatewayIP in BSB_LAN_config.h to enable setting router address different from x.x.x.1 Removed parameter 10109 because it is the same as 10000 Added function to check all known CommandIDs on your own heating system. Use /Q after enabling definement #define DEBUG in BSB_LAN_config.h Added parameter numbers to category menu Updated analyze.sh hopefully fixing the memory issue Moved HTML strings to html_strings.h","title":"Version 0.40"},{"location":"CHANGELOG.html#version-039","text":"02.01.2018 Implemntation of PPS-Bus protocol. See /K40 for the limited commands available for this bus. Use setBusType(2) to set to PPS upon boot or /P2 to switch temporarily. Set GPIOs to input by using /Gxx,I Definement #define CUSTOM_COMMANDS added. Use this in your configuration to include individual code from BSB_LAN_custom.h (needs to be created by you!) which is executed at the end of each main loop. Variables custom_timer and custom_timer_compare have been added to execute code at arbitrary intervals. Added LogoBloc Unit L-UB 25C device family (95) several new parameters added Bugfix for logging Brennerlaufzeit Stufe 2","title":"Version 0.39"},{"location":"CHANGELOG.html#version-038","text":"22.11.2017 ATTENTION: New BSB_LAN_config.h configurations! You need to adjust your configuration when upgrading to this version! Webserver port is now defined in #define Port xx IP address is now defined in #define IPAddr 88,88,88,88 form - note the commas instead of dots! Special log parameters 20002 to 20006 have changed, see BSB_LAN_config.h for their new meaning Added new virtual parameter 701 (Pr\u00e4senztaste) which enters reduced temperature mode until next timed switch Added Br\u00f6tje BOB device family (138), including many new parameters! Added Br\u00f6tje SOB26 device family (28) Added Elco Aquatop 8es device family (85) Added Elco Thision 13 Plus device family (203) Added Weishaupt WTU 25-G familiy (50) Added output for absolute humidity (g/m3) for DHT22 sensors New schematics for Arduino/Raspberry board layout Included support for W5500 Ethernet2 shields. Activate definement ETHERNET_W5500 in BSB_LAN_config.h Including two-stage oil furnaces BC-counters and logging - please note that logging parameters have been adjusted, see BSB_LAN_config.h for new values! Added new options for commands /P and /S to allow specifying a different destination device during runtime Added new configuration definement CUSTOM_COMMANDS which includes BSB_LAN_custom.h at the end of each main loop. You may use custom_timer (set to current millis()) and custom_timer_compare to execute only every x milliseconds. Bugfixing SD-card logging in monitor mode Bugfix for setting hour:time parameters via webinterface","title":"Version 0.38"},{"location":"CHANGELOG.html#version-037","text":"08.09.2017 LPB implementation! More than 450 parameters supported! Switch temporarily between LPB and BSB with the /Px command (with x equals to 0=BSB, 1=LPB) or use the setBusType config option to set bus-type at boot-time. Parameter numbers are the same as for BSB.","title":"Version 0.37"},{"location":"CHANGELOG.html#version-036","text":"23.08.2017 bugfix: brought back VT_BIT list of options which were erroneously deleted :(, fixed/freed several memory issues","title":"Version 0.36"},{"location":"CHANGELOG.html#version-035","text":"25.06.2017 new category \"Sitherm Pro\"; caution: category numbers all move up by one, starting from category \"W\u00e4rmepumpe\" (from 20 to 21) onwards. graph display of logging data now comes with crosshair and shows detailed values as tooltip improved SD-card output by factor 3 (from 16 to 45 kbps), switching SD-card library from from SD.h to SdFat.h (https://github.com/greiman/SdFat) brings another 10% performance boost adjusted paths and directory layout of SdFat to enable compiling from sketch directory. new data type VT_SINT for signed int data, currently only used in some Sitherm Pro parameters","title":"Version 0.35"},{"location":"CHANGELOG.html#version-034","text":"29.05.2017 Log data can now be displayed as graph Webinterface can now display and set VT_BIT type parameters in human-readable form added KonfigRGx descriptions; caution: various sources used, no guarantee that descriptions match your individual heating system! VT_BIT is generally read-only in the webinterface. To set, use URL command /S with decimal representation of value fixed a bug with VT_SECONDS_SHORT5 , affecting parameters 9500 and 9540. fixed bug regarding Fujitsu's device family (from 127 to 170) moved libraries from folder libraries to src so they can be included without copying them to the Arduino libraries folder modified DallasTemperature.h's include path for OneWire.h","title":"Version 0.34"},{"location":"CHANGELOG.html#version-033","text":"09.05.2017 no more heating system definements anymore due to new autodetect function based on device family (parameter 6225), or set device_id variable to parameter value directly two more security options: TRUSTED_IP to limit access to one IP address only, and HTTP authentication with username and password Average values are saved on SD-card if present and LOGGER definement is activated deactivate logging by setting /L0=0 - this way you can enable LOGGER definement without filling up SD card but still save average values new error codes for THISION added dump of data payload on website for commands of unknown type, greyed out unsopported parameters enable logging of telegrams (log parameter 30000) also in monitor mode (bsb.cpp and bsb.h updated) time from heating system is now retreived periodically from broadcast telegrams, further reducing bus activity new data type VT_BIT for parameters that set individual bits. Display as binary digits, setting still using decimal representation new data type VT_TEMP_SHORT5_US for unsigned one byte temperatures divided by 2 (so far only 887 Vorlaufsoll NormAussentemp) new data type VT_PERCENT5 for unsigned one byte temperatures divided by 2 (so far only 885 Pumpe-PWM Minimum) new data type VT_SECONDS_WORD5 for two byte seconds divided by 2 (so far only 2232, 9500 and 9540) new data type VT_SECONDS_SHORT4 for (signed?) one byte seconds divided by 4 (so far only 2235) new data type VT_SECONDS_SHORT5 for (signed?) one byte seconds divided by 5 (so far only 9500, 9540) new data type VT_SPEED2 for two byte rpm (so far only 7050) cleaned up set() function from apparent duplicate cases added cases for VT_TEMP_WORD , VT_SECONDS_WORD5 , VT_TEMP_SHORT , VT_TEMP_SHORT5 , VT_SECONDS_SHORT4 to set() function","title":"Version 0.33"},{"location":"CHANGELOG.html#version-032","text":"18.04.2017 lots of new parameters suppoerted newly designed webinterface allows control over heating system without any additional software or cryptic URL commands. URL commands of course are still available, so no need to change anything when using FHEM etc. German webinterface available with definement LANG_DE new URL-command /LB=x to log only broadcast messages (x=1) or all bus messages (x=0) new URL-command /X to reset the Arduino (need to enable RESET definement in BSB_LAN_config.h ) new logging parameters 20002 and 20003 for hot water loading times and cycles moved DS18B20 logging parameters from 20010-20019 to 20200-20299 and DHT22 logging parameters from 20020-20029 to 20100 to 20199 moved average logging parameter from 20002 to 20004 set numerous parameters to read-only because that's what they obviously are (K33-36) various bugfixes","title":"Version 0.32"},{"location":"CHANGELOG.html#version-031","text":"10.04.2017 increased dumping of logfile by factor 5 / as long as we still have memory left, you can increase logbuflen from 100 to 1000 to increase transfer speed from approx. 16 to 18 kB/s adjusted burner activity monitoring based on broadcast messages for Br\u00f6tje systems removed definement PROGNR_5895 because so far, it has only disabled an ENUM definition. removed definement PROGNR_6030 because double command ID could be resolved via BROETJE / non-BROETJE definements renamed BROETJE_SOB to BROETJE in order to allow for fine-grained distinction between different BROETJE cases (e.g. 6800ff) This means you have to activate TWO definements when using a Br\u00f6tje system now: The general BROETJE as well as BROETJE_SOB or BROETJE_BSW . Have a look at your serial log for parameters 6800 to see which command IDs fit your system and activate one of both accordingly. changed 16-Bit addressing of flash memory to 32-Bit to address crashes due to ever growing PROGMEM tables - now we have lots of air to breathe again for new command IDs :) removed trailing \\0 string from several ENUMs that led to wrong ENUM listings. Please keep in mind not to end ENUMs with a trailing \\0 !","title":"Version 0.31"},{"location":"CHANGELOG.html#version-030","text":"22.03.2017 Time library by Paul Stoffregen (https://github.com/PaulStoffregen/Time) is now required and included in the library folder. adds logging of raw telegram data to SD card with logging parameter 30000. Logging telegram data is affected by commands /V and /LU adds command /LU=x to log only known (x=0) or unknown (x=1) command IDs when logging telegram data removed define USE_BROADCAST , broadcast data is now always processed new internal functions GetDateTime, TranslateAddr, TranslateType","title":"Version 0.30"},{"location":"CHANGELOG.html#version-029","text":"07.03.2017 adds command /C to display current configuration adds command /L to configure logging interval and parameters adds option for command /A to set 24h average parameters during runtime adds special parameter 20002 for logging /A command (24h averages, only makes sense for long logging intervals) bugfixes for logging DS18B20 sensors","title":"Version 0.29"},{"location":"CHANGELOG.html#version-028","text":"05.03.2017 adds special parameters 20000++ for SD card logging of /B, /T and /H commands (see BSB_LAN_config.h for examples) adds version info to BSB_LAN web interface","title":"Version 0.28"},{"location":"CHANGELOG.html#version-027","text":"01.03.2017 adds date field to log file (requires exact time to be sent by heating system) /D0 recreates datalog.txt file with table header added \"flags\" field to command table structure. Currently, only FL_RONLY is supported to make a parameter read-only added DEFAULT_FLAG in config. Defaults to NULL , i.e. all fields are read/writeable. Setting it to FL_RONLY makes all parameters read-only, e.g. for added level of security. Individual parameters can be set to NULL / FL_RONLY to make only these parameters writable/read-only.","title":"Version 0.27"},{"location":"CHANGELOG.html#version-026","text":"27.02.2017 added functionality for logging on micro SD card, using the slot of the w5100 Ethernet shield more parameters added (e.g. 8009)","title":"Version 0.26"},{"location":"CHANGELOG.html#version-025","text":"21.02.2017 more FUJITSU parameters added","title":"Version 0.25"},{"location":"CHANGELOG.html#version-024","text":"14.02.2017 updated README with added functions added German translations of FAQ and README, courtesy of Ulf Dieckmann","title":"Version 0.24"},{"location":"CHANGELOG.html#version-023","text":"12.02.2017 minor bugfix","title":"Version 0.23"},{"location":"CHANGELOG.html#version-022","text":"07.02.2017 more FUJITSU parameters (hopefully) correct implementation of VT_VOLTAGE readings minor bugfixes","title":"Version 0.22"},{"location":"CHANGELOG.html#version-021","text":"06.02.2017 added numerous parameters for Fujitsu W\u00e4rmepumpe, including new #define FUJITSU directive to activate these parameters due to different parameter numbers minor bugfixes","title":"Version 0.21"},{"location":"CHANGELOG.html#version-020","text":"27.01.2017 added more parameters for Feststoffkessel minor bugfixes","title":"Version 0.20"},{"location":"CHANGELOG.html#version-019","text":"01.01.2017 added humidity command /H , currently for DHT22 sensors added 24h average command /A , define parameters in BSB_LAN_config.h removed trailing whitespace from menu strings fixed command id 0x053D04A2 for THISION heaters included Rob Tillaart's DHT library because there are various libraries implementing the protocol and this one is used in the code for its ability to address multiple sensors with one object. removed /temp URL parameter as it is a duplicate of /T included loop to display DHT22 sensors in IPWE making compiling IPWE extensions optional ( #define IPWE )","title":"Version 0.19"},{"location":"CHANGELOG.html#version-018","text":"22.12.2016 split off configuration into bsb_lan_config.h split off command definitions into bsb_lan_defs.h changed GPIO return values from LOW/HIGH to 1/0 reactivated and updated IPWE (define parameters in config) check for protected pins when accessing GPIO (define in config) added schematics and PCB files to new subfolder \"schematics\"","title":"Version 0.18"},{"location":"CHANGELOG.html#version-017a","text":"20.12.2016 minor errors corrected","title":"Version 0.17a"},{"location":"CHANGELOG.html#version-017","text":"20.12.2016 merged v0.16 with FHEM user miwi's changes","title":"Version 0.17"},{"location":"CHANGELOG.html#version-016","text":"20.11.2016 removed IPWE and EthRly interface added GPIO interface merged parameters from J.Weber resolved duplicate command IDs","title":"Version 0.16"},{"location":"CHANGELOG.html#version-015a","text":"25.07.2016 collated the commands from a Python project and this project, merged the two versions, corrected obvious errors. Inserted hypothetical numerical values in ENUM definitions where Broetje manuals documented only the message texts. added information from traces in a Broetje installation with an ISR-SSR controller and a WOB 25C oil furnace.","title":"Version 0.15a"},{"location":"CHANGELOG.html#version-015","text":"21.04.2016 added Solar and Pufferspeicher from Elco Logon B & Logon B MM","title":"Version 0.15"},{"location":"CHANGELOG.html#version-014","text":"04.04.2016 minor bugfixes for Broetje SOB extended broadcast handling (experimental)","title":"Version 0.14"},{"location":"CHANGELOG.html#version-013","text":"31.03.2016 change resistor value in receiving path from 4k7 to 1k5 added values 0x0f and 0x10 to Enum8005 fixed strings for Zeitprogramme added timeout for sending a message (1 second) added /T for querying one wire temperature sensors in mixed querys added special handling for Broetje SOB simplified settings","title":"Version 0.13"},{"location":"CHANGELOG.html#version-012","text":"09.04.2015 added ONEWIRE_SENSORS to ipwe fixed parameter decoding for ELCO Thision heating system","title":"Version 0.12"},{"location":"CHANGELOG.html#version-011","text":"07.04.2015 fixed parameter decoding for ELCO Thision heating system","title":"Version 0.11"},{"location":"CHANGELOG.html#version-010","text":"15.03.2015 added more parameters for ELCO Thision heating system","title":"Version 0.10"},{"location":"CHANGELOG.html#version-09","text":"09.03.2015 added more parameters for ELCO Thision heating system printTelegramm returns value string for further processing","title":"Version 0.9"},{"location":"CHANGELOG.html#version-08","text":"05.03.2015 added parameters for ELCO Thision heating system added IPWE extension minor bugfixes","title":"Version 0.8"},{"location":"CHANGELOG.html#version-07","text":"06.02.2015 added bus monitor functionality","title":"Version 0.7"},{"location":"CHANGELOG.html#version-06","text":"02.02.2015 renamed SoftwareSerial to BSBSoftwareSerial changed folder structure to enable simple build with arduino sdk","title":"Version 0.6"},{"location":"CHANGELOG.html#version-05","text":"02.02.2015 bugfixes added documentation (README) added passkey feature added /R feature (query reset value) added /E feature (list enum values) added setter for almost all value types fixed indentation added /V feature to set verbosity for serial output set baudrate to 115200 for serial output redirecting favicon request added some images of the BSB adapter","title":"Version 0.5"},{"location":"CHANGELOG.html#version-01","text":"21.01.2015 initial version","title":"Version 0.1"},{"location":"bsb-lan_adapter.html","text":"The BSB-LAN adapter Adapter boards available - contact Frederik at bsb(\u00e4t)code-it.de (German or English) for more details. In order to connect to your heating system with a microcontroller, you need to have an adapter board that does the necessary logic-level conversion: The adapter is then plugged right onto the microcontroller, either underneath the pins of the ESP32-NodeMCU or onto the UEXT connector of the Olimex: The two different types of ESP32 adapters (Olimex and ESP32-NoceMCU) only vary in the location of their connectors, the other parts of the board are identical. The Arduino Due board contains an EEPROM chip because the Due does not come with on-board EEPROM. Therefore, you can re-use the Arduino Due board on an ESP32 microcontroller (if you connect the correct pins with wires), but you cannot use an adapter for the ESP32 on an Arduino Due. Suitable microcontrollers BSB-LAN can be installed on three different types of microcontrollers: ESP32-Olimex ESP32-NodeMCU (30 pin version only!) and Arduino Due. Olimex produces several kinds of boards: We recommend either the Olimex ESP32-EVB or the Olimex ESP32-POE-ISO . The simple POE version (without the \"ISO\") is not recommended because it does not allow to be connected to PoE Ethernet and USB at the same time. The Arduino Due requires an Ethernet Shield in order to access the local network. Each of the different controllers have their advantages and disadvantages: Functionality ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Over-the-air updateable X X X - Built-in micro-SD card X X - - Accessible GPIOs 2 (GPIO13/16) some some many","title":"The BSB-LAN Adapter"},{"location":"bsb-lan_adapter.html#the-bsb-lan-adapter","text":"","title":"The BSB-LAN adapter"},{"location":"bsb-lan_adapter.html#adapter-boards-available-contact-frederik-at-bsbatcode-itde-german-or-english-for-more-details","text":"In order to connect to your heating system with a microcontroller, you need to have an adapter board that does the necessary logic-level conversion: The adapter is then plugged right onto the microcontroller, either underneath the pins of the ESP32-NodeMCU or onto the UEXT connector of the Olimex: The two different types of ESP32 adapters (Olimex and ESP32-NoceMCU) only vary in the location of their connectors, the other parts of the board are identical. The Arduino Due board contains an EEPROM chip because the Due does not come with on-board EEPROM. Therefore, you can re-use the Arduino Due board on an ESP32 microcontroller (if you connect the correct pins with wires), but you cannot use an adapter for the ESP32 on an Arduino Due.","title":"Adapter boards available - contact Frederik at bsb(\u00e4t)code-it.de (German or English) for more details."},{"location":"bsb-lan_adapter.html#suitable-microcontrollers","text":"BSB-LAN can be installed on three different types of microcontrollers: ESP32-Olimex ESP32-NodeMCU (30 pin version only!) and Arduino Due. Olimex produces several kinds of boards: We recommend either the Olimex ESP32-EVB or the Olimex ESP32-POE-ISO . The simple POE version (without the \"ISO\") is not recommended because it does not allow to be connected to PoE Ethernet and USB at the same time. The Arduino Due requires an Ethernet Shield in order to access the local network. Each of the different controllers have their advantages and disadvantages: Functionality ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Over-the-air updateable X X X - Built-in micro-SD card X X - - Accessible GPIOs 2 (GPIO13/16) some some many","title":"Suitable microcontrollers"},{"location":"bus_systems.html","text":"The BSB/LPB/PPS Bus Developed at the end of the last millenium based on the BatiBUS (more information can be found here and here ), many Siemens heating system controllers still use the same kind of physical bus to \"talk\" to room units as well as other heating devices. While a bus speed of a mere 4800 bits per second might sound anachronistic these days, it still provides for a stable and robust transmission protocol that is even today perfectly sufficient when it comes to transmitting short messages of a few dozen bytes over lines sometimes as long as one kilometer. The bus topology also allows you to connect BSB-LAN at any point: At the room unit, at the heating system or anywhere where the bus lines are available. You can even add the two wires for BSB-LAN in an already \"occupied\" slot, and it won't harm the other device (proper installation assumed). On top of the same physical layer, three bus systems, BSB, LPB and PPS, cater for different tasks, and while BSB and LPB should always be preferred if available, PPS nevertheless provides a set of parameters that is usually quite enough for the average user. BSB-LAN runs on any of these busses and swapping between them is just changing a few settings away. The Boiler System Bus (BSB) BSB is the most common bus system in Siemens controllers for the last 10-15 years. It is the successor of the PPS system with which it shares the same physical parameters, but is much more versatile: Instead of just a few dozen parameters, it can access hundreds of parameters and group them into various categories for easier navigation. It is a transaction-based protocol where most messages are being sent from one device to another and the recipient returning some kind of feedback, for example whether the task could be completed or whether it contained invalid data. While BSB is capable of addressing multiple devices on the bus, it is not used in systems with more than one heating device. The heating device always has the ID 0 , the display unit on the heating system has the ID 10 (or 0x0A in hexadecimal) and the standard room unit has the ID 6 . BSB-LAN has the ID 66 or 0x42 in hexadecimal. Room units that \"speak\" BSB are, for example, the QAA55 and the QAA75. The Local Process Bus (LPB) LPB was introduced more or less around the same time as PPS which it complemented in terms of communication with other heating devices: While PPS was used to communicate with the room unit, LPB was used to send commands from one main heating device to one or more auxilliary heating devices, for example in a cascade setup. At that time, most of the information transmitted via LPB was related to the internals of the heating system (such as sensor data or internal setpoint temperatures), whereas the parameters relevant for the user (such as comfort temperature setpoint etc.) were only available via PPS. Nowadays, heating devices that offer both LPB and BSB have the same kind of parameter data available on both bus systems. LPB uses a specific addressing scheme with segments and devices. Each segment from 0 to 15 can contain up to 15 devices (from 1 to 15). When writing these addresses, segment and device are separated by a colon: 00:01 or 04:03 . To convert the segment-based address into the destination ID required for BSB-LAN, the formula is as this: SEGMENT multiplied by 16 plus DEVICE minus one. Example: Device 3 in segment 4 equals to 4 * 16 + 3 - 1 = 66. The main heating unit is by definition 00:01 , so this equals to a destination ID 0. To learn more about the LPB system and how it should be deployed, you may refer to these two documents from the end of the 1990s, one covers the basic system data that covers the conceptualization of an LPB network, and the other one deals with the basic engineering data and provides details about cable lengths and diameters etc. Except for some Weishaut heaters, room units are not connected to the heating system via LPB. Newer models use BSB for this task while older models use either PPS or in some cases also OpenTherm. The Point-to-Point Interface (PPS) The Point-to-Point Interface (PPS deriving from the German term \"Punkt-zu-Punkt Schnittstelle\") is compatible to the other systems on a physical layer, but not in the way message telegrams are being exchanged. While BSB and LPB talk to each other by sending telegrams and acknowledging their receipt respectively, PPS is dominated by the heating unit. The heating unit constantly sends its data to the room unit and tells the room unit when and what kind of information it should send. So it may take up to a few minutes until a value that is set in BSB-LAN is actually requested by the heating system and shown there. It is also a very timing sensitive protocol, therefore long other tasks that BSB-LAN is told to do will lead to a temporary interruption and possible error message on the heating system. However, after a short while, this should be clearing by itself when the two components \"talk\" to each other again. Other than BSB and LPB, changes made in BSB-LAN do not take immediate effect. Changing values, for example like the room temperature comfort setpoint, will be stored internally in BSB-LAN first to be sent out to the heating system once it tells the room unit (i.e. BSB-LAN) to do so. This may take up to a minute or so, so one should not be confused that settings do not show up on the heater immediately, as is the case with BSB and LPB. With PPS, BSB-LAN can run in two modes: either listening passively or as a room unit. In passive mode, BSB-LAN can just listen to the data exchanged between the room unit and the heating device. It is not possible to send one's own data, for the simple fact that it would be overwritten in no time by the same type of data coming from the room unit. In order to send parameter data to the heating system, BSB-LAN mus run in \"room unit\" mode, and this means that any room unit will have to be removed from the heating system. In this case, it is especially important to regularly send a room temperature value to BSB-LAN which in turn will send this value to the heating device. Only if the heater runs solely on outside temperature then this value can be ignored. BSB-LAN stores some values in its non-volatile EEPROM, but some values need to be set anew after a reboot, such as the room temperature setpoint. This is to prevent to store a parameter value that has become invalid but is still sent as it is stored in the EEPROM. Room units commonly used with heating systems that support PPS are the QAA50 and the QAA70.","title":"The BSB/LPB/PPS Bus"},{"location":"bus_systems.html#the-bsblpbpps-bus","text":"Developed at the end of the last millenium based on the BatiBUS (more information can be found here and here ), many Siemens heating system controllers still use the same kind of physical bus to \"talk\" to room units as well as other heating devices. While a bus speed of a mere 4800 bits per second might sound anachronistic these days, it still provides for a stable and robust transmission protocol that is even today perfectly sufficient when it comes to transmitting short messages of a few dozen bytes over lines sometimes as long as one kilometer. The bus topology also allows you to connect BSB-LAN at any point: At the room unit, at the heating system or anywhere where the bus lines are available. You can even add the two wires for BSB-LAN in an already \"occupied\" slot, and it won't harm the other device (proper installation assumed). On top of the same physical layer, three bus systems, BSB, LPB and PPS, cater for different tasks, and while BSB and LPB should always be preferred if available, PPS nevertheless provides a set of parameters that is usually quite enough for the average user. BSB-LAN runs on any of these busses and swapping between them is just changing a few settings away.","title":"The BSB/LPB/PPS Bus"},{"location":"bus_systems.html#the-boiler-system-bus-bsb","text":"BSB is the most common bus system in Siemens controllers for the last 10-15 years. It is the successor of the PPS system with which it shares the same physical parameters, but is much more versatile: Instead of just a few dozen parameters, it can access hundreds of parameters and group them into various categories for easier navigation. It is a transaction-based protocol where most messages are being sent from one device to another and the recipient returning some kind of feedback, for example whether the task could be completed or whether it contained invalid data. While BSB is capable of addressing multiple devices on the bus, it is not used in systems with more than one heating device. The heating device always has the ID 0 , the display unit on the heating system has the ID 10 (or 0x0A in hexadecimal) and the standard room unit has the ID 6 . BSB-LAN has the ID 66 or 0x42 in hexadecimal. Room units that \"speak\" BSB are, for example, the QAA55 and the QAA75.","title":"The Boiler System Bus (BSB)"},{"location":"bus_systems.html#the-local-process-bus-lpb","text":"LPB was introduced more or less around the same time as PPS which it complemented in terms of communication with other heating devices: While PPS was used to communicate with the room unit, LPB was used to send commands from one main heating device to one or more auxilliary heating devices, for example in a cascade setup. At that time, most of the information transmitted via LPB was related to the internals of the heating system (such as sensor data or internal setpoint temperatures), whereas the parameters relevant for the user (such as comfort temperature setpoint etc.) were only available via PPS. Nowadays, heating devices that offer both LPB and BSB have the same kind of parameter data available on both bus systems. LPB uses a specific addressing scheme with segments and devices. Each segment from 0 to 15 can contain up to 15 devices (from 1 to 15). When writing these addresses, segment and device are separated by a colon: 00:01 or 04:03 . To convert the segment-based address into the destination ID required for BSB-LAN, the formula is as this: SEGMENT multiplied by 16 plus DEVICE minus one. Example: Device 3 in segment 4 equals to 4 * 16 + 3 - 1 = 66. The main heating unit is by definition 00:01 , so this equals to a destination ID 0. To learn more about the LPB system and how it should be deployed, you may refer to these two documents from the end of the 1990s, one covers the basic system data that covers the conceptualization of an LPB network, and the other one deals with the basic engineering data and provides details about cable lengths and diameters etc. Except for some Weishaut heaters, room units are not connected to the heating system via LPB. Newer models use BSB for this task while older models use either PPS or in some cases also OpenTherm.","title":"The Local Process Bus (LPB)"},{"location":"bus_systems.html#the-point-to-point-interface-pps","text":"The Point-to-Point Interface (PPS deriving from the German term \"Punkt-zu-Punkt Schnittstelle\") is compatible to the other systems on a physical layer, but not in the way message telegrams are being exchanged. While BSB and LPB talk to each other by sending telegrams and acknowledging their receipt respectively, PPS is dominated by the heating unit. The heating unit constantly sends its data to the room unit and tells the room unit when and what kind of information it should send. So it may take up to a few minutes until a value that is set in BSB-LAN is actually requested by the heating system and shown there. It is also a very timing sensitive protocol, therefore long other tasks that BSB-LAN is told to do will lead to a temporary interruption and possible error message on the heating system. However, after a short while, this should be clearing by itself when the two components \"talk\" to each other again. Other than BSB and LPB, changes made in BSB-LAN do not take immediate effect. Changing values, for example like the room temperature comfort setpoint, will be stored internally in BSB-LAN first to be sent out to the heating system once it tells the room unit (i.e. BSB-LAN) to do so. This may take up to a minute or so, so one should not be confused that settings do not show up on the heater immediately, as is the case with BSB and LPB. With PPS, BSB-LAN can run in two modes: either listening passively or as a room unit. In passive mode, BSB-LAN can just listen to the data exchanged between the room unit and the heating device. It is not possible to send one's own data, for the simple fact that it would be overwritten in no time by the same type of data coming from the room unit. In order to send parameter data to the heating system, BSB-LAN mus run in \"room unit\" mode, and this means that any room unit will have to be removed from the heating system. In this case, it is especially important to regularly send a room temperature value to BSB-LAN which in turn will send this value to the heating device. Only if the heater runs solely on outside temperature then this value can be ignored. BSB-LAN stores some values in its non-volatile EEPROM, but some values need to be set anew after a reboot, such as the room temperature setpoint. This is to prevent to store a parameter value that has become invalid but is still sent as it is stored in the EEPROM. Room units commonly used with heating systems that support PPS are the QAA50 and the QAA70.","title":"The Point-to-Point Interface (PPS)"},{"location":"configure.html","text":"Configuration There are two ways to configure BSB-LAN: Through the configuration file BSB_LAN_config.h Through the web-interface by calling http://bsb-lan.local/C (or the corresponding IP address) For the initial configuration, some settings have to be configured in the configuration file (such as language and network settings). Any further changes can be done also in the web-interface. It may, however, be useful to do the configuration (also) in the configuration file in case one needs to change the microcontroller. Almost all settings exist also in the web-interface and vice versa. On an ESP32-based microcontroller, BSB-LAN will set up its own wireless access point named BSB-LAN if it cannot connect to any network. So even without any further configuration, you can connect to this access point with the password BSB-LPB-PPS-LAN and access BSB-LAN via the IP address http://192.168.4.1 and proceed with the configuration via this way. Keep in mind that if you have set a passkey or HTTP username and password, these are still required if these details are stored in EEPROM or BSB_LAN_config.h . Configuration through `BSB_LAN_config.h`` The configuration file consists of variables that are used in other parts of BSB-LAN. It is therefore important to only change the contents of the variables (i.e. the settings) and not the type of the variables. So if there is for example the setting byte ip_addr[4] = {192,168,178,88}; you must not alter the byte ip_addr[4] = part, only the contents, in this case the comma-separated IP address. Configuration through the web-interface Configuring BSB-LAN through the web-interface is pretty straightforward, as you don't have to deal with variable names but clear descriptions. Initially, only a selected number of configuration options are displayed in the webinterface. To have access to all of them, you have to set the \"extended configuration\" option to \"on\". Overview of configuration options table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 20%; } table th:nth-of-type(3) { width: 40%; } table th:nth-of-type(4) { width: 20%; } General Settings Web-Interface Configuration File Functionality Possible settings - #define LANG Set language DE , EN , FR and other ISO country codes Display extended configuration - Show all configuration options On Off Read config from EEPROM UseEEPROM Read configuration from EEPROM or file On ( 1 ) Off ( 0 ) Write access (level) - If DEFAULT_FLAG is set to FL_SW_CTL_RONLY , you can set the level of write access here. Off (read-only) On (Standard) On (Complete) Check for updates enable_version_check Query BSB-LAN server for new available version On ( true ) OTA Update enable_ota_update Enable over-the-air (OTA) update On ( true ) Energy saving esp32_save_energy Reduces speed, saves energy. Do not enable when using WiFi. On ( true ) Off ( false ) Webserver file system webserver Enables serving files from SD card On ( true ) Off ( false ) - #define DEFAULT_FLAG Set read/write access to heating system. FL_RONLY sets all parameters to read-only. FL_SW_CTL_RONLY allows setting read/write access via web-interface configuration setting. 0 makes all parameters that could be written writeable. Do not use this option unless instructed otherwise! FL_RONLY FL_SW_CTL_RONLY 0 Bus settings Web-Interface Configuration File Functionality Possible settings Bus type bus_type Bus type (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) PPS: mode pps_write BSB-LAN can act as a PPS room unit (only if no real room unit is connected) or just listen passively. passive ( 0 ) as room unit ( 1 ) PPS: QAA model QAA_TYPE Room unit that should be simulated for PPS bus QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Own address own_address Own bus address (default 66 should not be changed) 66 ( 66 ) Destination address dest_address Destination bus address. For BSB always 0 . For LPB 0 if destination device is in segment 1, device address 0. To convert from LPB segment and device address notation to destination address, multiply segment by 16, add the device address and subtract one. For example, to address a device in segment 4 with device address 3, the destination address is (4 * 16) + 3 - 1 = 66 . For PPS not relevant. 0 ( 0 ) RX pin number TX pin number bus_pins Define the RX/TX pins to communicate with the BSB-LAN adapter. Leave at 0 for auto-detection. 0 and 0 ( 0, 0 ) Network settings Web-Interface Configuration File Functionality Possible settings Network device network_type Choose between WLAN and LAN to connect BSB-LAN to the network. LAN ( 0 ) WLAN ( 1 ) WLAN SSID wifi_ssid Set the WLAN network name when using WLAN. Your_WLAN_name ( Your_WLAN_name ) WLAN password wifi_pass Set the WLAN password when using WLAN. YourWLANpassword ( YourWLANpassword ) DHCP usage use_dhcp Set whether or not to use DHCP to get an IP address from the router. On ( true ) Off ( false ) IP address (fixed) ip_addr When not using DHCP, you can set a fixed IP address here. Otherwise leave at 0.0.0.0 . In the web-interface, you may use dot notation. In the configuration file, you have to use comma as a separator. 192.168.178.88 ( 192,168,178,88 ) Subnet subnet_addr Subnet when using fixed IP address. Same notation as with IP address. 255.255.255.0 ( 255,255,255,0 ) Gateway gateway_addr Gateway address when using fixed IP address. Same notation as with IP address. 192.168.178.1 ( 192,168,178,1 ) DNS Server dns_addr DNS server address when using fixed IP address. Same notation as with IP address. 192.168.178.1 ( 192,168,178,1 ) TCP Port HTTPPort HTTP port number to access the web-interface. Defaults to 80 . 80 ( 80 ) MAC address mac Set a fixed MAC address. Only relevant on Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) mDNS Hostname mDNS_hostname Hostname for mDNS discovery BSB-LAN ( BSB-LAN ) HTTP authentification USER_PASS If not empty, this setting contains the username and password for HTTP authentification, separated by a colon. Username:Password ( Username:Password ) URL Passkey PASSKEY Passkey adds a user-defined sequence that needs to be added to the URL after the hostname. For example, a passkey of 1234 requires every URL to be written as http://bsb-lan.local/1234/ instead of just http://bsb-lan.local/1234/ . Leave empty for no passkey. 1234 ( 1234 ) Trusted IP address trusted_ip_addr Access to BSB-LAN is only possible from this IP address. Same notation as with IP address. 192.168.178.89 ( 192,168,178,89 ) Trusted IP address trusted_ip_addr2 Access to BSB-LAN is only possible from this IP address. Same notation as with IP address. 192.168.178.90 ( 192,168,178,90 ) - bssid Enter a specific BSSID address here to ensure connecting to a specific access point. Set to all zeros under normal circumstances. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server Set an NTP server here to acquire exact time for BSB-LAN. Set to empty string if you don't want to use NTP. ESP32-based microcontrollers only. ( pool.ntp.org ) - local_timezone Timezone to use for NTP. See here for a complete list. ( CET-1CEST,M3.5.0,M10.5.0/3 ) Logging Web-Interface Configuration File Functionality Possible settings Storage device LogDestination Select the destination for logging activities. SD card is highly recommended, as using the internal flash will wear out the internal flash eventually. SD card ( SDCARD ) Internal Flash Storage ( FLASH ) Logging mode LoggingMode Set the logging destinations/activities. Multiple selections are possible, for the configuration file, the values have to be added, for example, to send to MQTT broker and to UDP, set the value to 4 + 16 = 20 Write to SD card ( 1 ) Calculate 24h averages ( 2 ) Send to MQTT broker ( 4 ) Only send log parameters to MQTT ( 8 ) Send to UDP ( 16 ) Logging Interval log_interval Interval for logging activities (in seconds) 60 ( 60 ) Log Parameters log_parameters List of logging parameters. See addressing instructions below. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Log bus telegrams logTelegram Log raw bus telegrams, such as broadcast messages or unknown telegrams Off ( LOGTELEGRAM_OFF ) Log all bus telegrams ( LOGTELEGRAM_ON ) Log unknown bus telegrams only ( LOGTELEGRAM_UNKNOWN_ONLY ) Log broadcast bus telegrams only ( LOGTELEGRAM_BROADCAST_ONLY ) Log unknown broadcast bus telegrams only ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) 24h averages parameters avg_parameters List of parameters for generating 24 hour averages. See addressing instructions below. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT Define default number of days to plot logging data ( 3 ) MQTT Web-Interface Configuration File Functionality Possible settings MQTT Broker server mqtt_broker_addr Hostname/IP of the MQTT broker my-mqtt-broker.local ( my-mqtt-broker.local ) MQTT Username MQTTUsername Optional username for MQTT broker MyMQTTusername ( MyMQTTusername ) MQTT Password MQTTPassword Optional password for MQTT broker MyMQTTpassword ( MyMQTTpassword ) MQTT Device ID MQTTDeviceID Device identifier for MQTT BSB-LAN ( BSB-LAN ) MQTT Topic prefix MQTTTopicPrefix Topic prefix for MQTT BSB-LAN ( BSB-LAN ) MQTT Usage mqtt_mode Set the format for MQTT messages Plain text ( 1 ) - Send parameter number and value in plain text format JSON ( 2 ) - Send messages in JSON format (parameter number and value only) Rich JSON ( 3 ) - Send parameter number/name/value/unit/error in JSON format. Sensors and external devices Web-Interface Configuration File Functionality Possible settings OneWire Pins One_Wire_Pin Set the OneWire pin (use -1 in configuration file to disable) 10 ( 10 ) DHT Pins DHT_Pins Set the DHT22 sensor pins (use -1 in configuration file to disable) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1, -1 ) BME280 sensors BME_Sensors Set number of BME280 sensors on the I2C bus. You need to have access to I2C pins. Fixed addresses 0x76 and 0x77 will be used. Use 0 to disable. 1 ( 1 ) MAX! Usage enable_max_cul Enable or disable connection to CUNO/CUNX/modified MAX!Cube On ( true ) Off ( false ) IP address cube max_cul_ip_addr IP address of the CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) MAX! Devices max_device_list IDs of MAX! devices to be polled. These IDs can be found on a sticker of the device. After entering them here, each device needs to be set into pairing mode. This has to be repeated every time the EEPROM layout of BSB-LAN is changed (see ChangeLog). KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) IPWE Usage enable_ipwe Enable IPWE extension ( /ipwe.cgi ) On ( true ) Off ( false ) IPWE Parameters ipwe_parameters List of parameters for display in IPWE extension. See addressing instructions below. 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Enable custom functions Debugging Web-Interface Configuration File Functionality Possible settings Debugging Usage debug_mode Select debug output Off ( 0 ) Serial ( 1 ) Telnet ( 2 ) Verbosity mode verbose Enable or disable verbose debug messages (do not turn off unless advised) On ( 1 ) Off ( 0 ) Raw data mode monitor Enable or disable raw data mode (do not turn on unless advised!) On ( 1 ) Off ( 0 ) Display unknown parameters show_unknown Try and display also parameters not supported by destination device On ( true ) Off ( false ) Adressing different heating controllers In order to address parameters from devices other than the default destination device in the web-interface, you need to add an exclamation mark followed by the device address (see above for converting segment/device notation to device address). For example, parameter 8700 from device address 1 would be written as 8700!1 instead of just 8700 . For the configuration file, parameters are listed in the form {parameter number, destination address} . Parameter 8700 from device address 1 would thus be written as {8700, 1} . To address the default destination, you can do so by using -1 .","title":"Configuration"},{"location":"configure.html#configuration","text":"There are two ways to configure BSB-LAN: Through the configuration file BSB_LAN_config.h Through the web-interface by calling http://bsb-lan.local/C (or the corresponding IP address) For the initial configuration, some settings have to be configured in the configuration file (such as language and network settings). Any further changes can be done also in the web-interface. It may, however, be useful to do the configuration (also) in the configuration file in case one needs to change the microcontroller. Almost all settings exist also in the web-interface and vice versa. On an ESP32-based microcontroller, BSB-LAN will set up its own wireless access point named BSB-LAN if it cannot connect to any network. So even without any further configuration, you can connect to this access point with the password BSB-LPB-PPS-LAN and access BSB-LAN via the IP address http://192.168.4.1 and proceed with the configuration via this way. Keep in mind that if you have set a passkey or HTTP username and password, these are still required if these details are stored in EEPROM or BSB_LAN_config.h .","title":"Configuration"},{"location":"configure.html#configuration-through-bsb_lan_configh","text":"The configuration file consists of variables that are used in other parts of BSB-LAN. It is therefore important to only change the contents of the variables (i.e. the settings) and not the type of the variables. So if there is for example the setting byte ip_addr[4] = {192,168,178,88}; you must not alter the byte ip_addr[4] = part, only the contents, in this case the comma-separated IP address.","title":"Configuration through `BSB_LAN_config.h``"},{"location":"configure.html#configuration-through-the-web-interface","text":"Configuring BSB-LAN through the web-interface is pretty straightforward, as you don't have to deal with variable names but clear descriptions. Initially, only a selected number of configuration options are displayed in the webinterface. To have access to all of them, you have to set the \"extended configuration\" option to \"on\".","title":"Configuration through the web-interface"},{"location":"configure.html#overview-of-configuration-options","text":"table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 20%; } table th:nth-of-type(3) { width: 40%; } table th:nth-of-type(4) { width: 20%; }","title":"Overview of configuration options"},{"location":"configure.html#general-settings","text":"Web-Interface Configuration File Functionality Possible settings - #define LANG Set language DE , EN , FR and other ISO country codes Display extended configuration - Show all configuration options On Off Read config from EEPROM UseEEPROM Read configuration from EEPROM or file On ( 1 ) Off ( 0 ) Write access (level) - If DEFAULT_FLAG is set to FL_SW_CTL_RONLY , you can set the level of write access here. Off (read-only) On (Standard) On (Complete) Check for updates enable_version_check Query BSB-LAN server for new available version On ( true ) OTA Update enable_ota_update Enable over-the-air (OTA) update On ( true ) Energy saving esp32_save_energy Reduces speed, saves energy. Do not enable when using WiFi. On ( true ) Off ( false ) Webserver file system webserver Enables serving files from SD card On ( true ) Off ( false ) - #define DEFAULT_FLAG Set read/write access to heating system. FL_RONLY sets all parameters to read-only. FL_SW_CTL_RONLY allows setting read/write access via web-interface configuration setting. 0 makes all parameters that could be written writeable. Do not use this option unless instructed otherwise! FL_RONLY FL_SW_CTL_RONLY 0","title":"General Settings"},{"location":"configure.html#bus-settings","text":"Web-Interface Configuration File Functionality Possible settings Bus type bus_type Bus type (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) PPS: mode pps_write BSB-LAN can act as a PPS room unit (only if no real room unit is connected) or just listen passively. passive ( 0 ) as room unit ( 1 ) PPS: QAA model QAA_TYPE Room unit that should be simulated for PPS bus QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Own address own_address Own bus address (default 66 should not be changed) 66 ( 66 ) Destination address dest_address Destination bus address. For BSB always 0 . For LPB 0 if destination device is in segment 1, device address 0. To convert from LPB segment and device address notation to destination address, multiply segment by 16, add the device address and subtract one. For example, to address a device in segment 4 with device address 3, the destination address is (4 * 16) + 3 - 1 = 66 . For PPS not relevant. 0 ( 0 ) RX pin number TX pin number bus_pins Define the RX/TX pins to communicate with the BSB-LAN adapter. Leave at 0 for auto-detection. 0 and 0 ( 0, 0 )","title":"Bus settings"},{"location":"configure.html#network-settings","text":"Web-Interface Configuration File Functionality Possible settings Network device network_type Choose between WLAN and LAN to connect BSB-LAN to the network. LAN ( 0 ) WLAN ( 1 ) WLAN SSID wifi_ssid Set the WLAN network name when using WLAN. Your_WLAN_name ( Your_WLAN_name ) WLAN password wifi_pass Set the WLAN password when using WLAN. YourWLANpassword ( YourWLANpassword ) DHCP usage use_dhcp Set whether or not to use DHCP to get an IP address from the router. On ( true ) Off ( false ) IP address (fixed) ip_addr When not using DHCP, you can set a fixed IP address here. Otherwise leave at 0.0.0.0 . In the web-interface, you may use dot notation. In the configuration file, you have to use comma as a separator. 192.168.178.88 ( 192,168,178,88 ) Subnet subnet_addr Subnet when using fixed IP address. Same notation as with IP address. 255.255.255.0 ( 255,255,255,0 ) Gateway gateway_addr Gateway address when using fixed IP address. Same notation as with IP address. 192.168.178.1 ( 192,168,178,1 ) DNS Server dns_addr DNS server address when using fixed IP address. Same notation as with IP address. 192.168.178.1 ( 192,168,178,1 ) TCP Port HTTPPort HTTP port number to access the web-interface. Defaults to 80 . 80 ( 80 ) MAC address mac Set a fixed MAC address. Only relevant on Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) mDNS Hostname mDNS_hostname Hostname for mDNS discovery BSB-LAN ( BSB-LAN ) HTTP authentification USER_PASS If not empty, this setting contains the username and password for HTTP authentification, separated by a colon. Username:Password ( Username:Password ) URL Passkey PASSKEY Passkey adds a user-defined sequence that needs to be added to the URL after the hostname. For example, a passkey of 1234 requires every URL to be written as http://bsb-lan.local/1234/ instead of just http://bsb-lan.local/1234/ . Leave empty for no passkey. 1234 ( 1234 ) Trusted IP address trusted_ip_addr Access to BSB-LAN is only possible from this IP address. Same notation as with IP address. 192.168.178.89 ( 192,168,178,89 ) Trusted IP address trusted_ip_addr2 Access to BSB-LAN is only possible from this IP address. Same notation as with IP address. 192.168.178.90 ( 192,168,178,90 ) - bssid Enter a specific BSSID address here to ensure connecting to a specific access point. Set to all zeros under normal circumstances. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server Set an NTP server here to acquire exact time for BSB-LAN. Set to empty string if you don't want to use NTP. ESP32-based microcontrollers only. ( pool.ntp.org ) - local_timezone Timezone to use for NTP. See here for a complete list. ( CET-1CEST,M3.5.0,M10.5.0/3 )","title":"Network settings"},{"location":"configure.html#logging","text":"Web-Interface Configuration File Functionality Possible settings Storage device LogDestination Select the destination for logging activities. SD card is highly recommended, as using the internal flash will wear out the internal flash eventually. SD card ( SDCARD ) Internal Flash Storage ( FLASH ) Logging mode LoggingMode Set the logging destinations/activities. Multiple selections are possible, for the configuration file, the values have to be added, for example, to send to MQTT broker and to UDP, set the value to 4 + 16 = 20 Write to SD card ( 1 ) Calculate 24h averages ( 2 ) Send to MQTT broker ( 4 ) Only send log parameters to MQTT ( 8 ) Send to UDP ( 16 ) Logging Interval log_interval Interval for logging activities (in seconds) 60 ( 60 ) Log Parameters log_parameters List of logging parameters. See addressing instructions below. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Log bus telegrams logTelegram Log raw bus telegrams, such as broadcast messages or unknown telegrams Off ( LOGTELEGRAM_OFF ) Log all bus telegrams ( LOGTELEGRAM_ON ) Log unknown bus telegrams only ( LOGTELEGRAM_UNKNOWN_ONLY ) Log broadcast bus telegrams only ( LOGTELEGRAM_BROADCAST_ONLY ) Log unknown broadcast bus telegrams only ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) 24h averages parameters avg_parameters List of parameters for generating 24 hour averages. See addressing instructions below. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT Define default number of days to plot logging data ( 3 )","title":"Logging"},{"location":"configure.html#mqtt","text":"Web-Interface Configuration File Functionality Possible settings MQTT Broker server mqtt_broker_addr Hostname/IP of the MQTT broker my-mqtt-broker.local ( my-mqtt-broker.local ) MQTT Username MQTTUsername Optional username for MQTT broker MyMQTTusername ( MyMQTTusername ) MQTT Password MQTTPassword Optional password for MQTT broker MyMQTTpassword ( MyMQTTpassword ) MQTT Device ID MQTTDeviceID Device identifier for MQTT BSB-LAN ( BSB-LAN ) MQTT Topic prefix MQTTTopicPrefix Topic prefix for MQTT BSB-LAN ( BSB-LAN ) MQTT Usage mqtt_mode Set the format for MQTT messages Plain text ( 1 ) - Send parameter number and value in plain text format JSON ( 2 ) - Send messages in JSON format (parameter number and value only) Rich JSON ( 3 ) - Send parameter number/name/value/unit/error in JSON format.","title":"MQTT"},{"location":"configure.html#sensors-and-external-devices","text":"Web-Interface Configuration File Functionality Possible settings OneWire Pins One_Wire_Pin Set the OneWire pin (use -1 in configuration file to disable) 10 ( 10 ) DHT Pins DHT_Pins Set the DHT22 sensor pins (use -1 in configuration file to disable) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1, -1 ) BME280 sensors BME_Sensors Set number of BME280 sensors on the I2C bus. You need to have access to I2C pins. Fixed addresses 0x76 and 0x77 will be used. Use 0 to disable. 1 ( 1 ) MAX! Usage enable_max_cul Enable or disable connection to CUNO/CUNX/modified MAX!Cube On ( true ) Off ( false ) IP address cube max_cul_ip_addr IP address of the CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) MAX! Devices max_device_list IDs of MAX! devices to be polled. These IDs can be found on a sticker of the device. After entering them here, each device needs to be set into pairing mode. This has to be repeated every time the EEPROM layout of BSB-LAN is changed (see ChangeLog). KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) IPWE Usage enable_ipwe Enable IPWE extension ( /ipwe.cgi ) On ( true ) Off ( false ) IPWE Parameters ipwe_parameters List of parameters for display in IPWE extension. See addressing instructions below. 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Enable custom functions","title":"Sensors and external devices"},{"location":"configure.html#debugging","text":"Web-Interface Configuration File Functionality Possible settings Debugging Usage debug_mode Select debug output Off ( 0 ) Serial ( 1 ) Telnet ( 2 ) Verbosity mode verbose Enable or disable verbose debug messages (do not turn off unless advised) On ( 1 ) Off ( 0 ) Raw data mode monitor Enable or disable raw data mode (do not turn on unless advised!) On ( 1 ) Off ( 0 ) Display unknown parameters show_unknown Try and display also parameters not supported by destination device On ( true ) Off ( false )","title":"Debugging"},{"location":"configure.html#adressing-different-heating-controllers","text":"In order to address parameters from devices other than the default destination device in the web-interface, you need to add an exclamation mark followed by the device address (see above for converting segment/device notation to device address). For example, parameter 8700 from device address 1 would be written as 8700!1 instead of just 8700 . For the configuration file, parameters are listed in the form {parameter number, destination address} . Parameter 8700 from device address 1 would thus be written as {8700, 1} . To address the default destination, you can do so by using -1 .","title":"Adressing different heating controllers"},{"location":"faq.html","text":"Frequently Asked Questions (FAQ) Will my settings remain when updating BSB-LAN? That depends. Minor updates will not affect any settings, but sometimes it is unavoidable that changes in the code also affect the settings. In that case, it is mentioned in the file CHANGELOG.md , and BSB-LAN rewrites the settings in the EEPROM based on the settings in BSB_LAN_config.h . That's why it's best to always make significant changes in the settings also in that file. Updates never affect any parameters in the heating system. My heater has a OpenTherm/eBus/L-Bus/R-Bus connector, can I use BSB-LAN? No, these controllers are not compatible with BSB-LAN. Do not try and connect the adapter to your heating system! I'm missing function XYZ BSB-LAN offers the possibility to create own functions using the files BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h and BSB_LAN_custom.h . Please see the folder custom_functions in the repository for more details and examples. Feel free to contribute your solutions to the public!","title":"FAQ"},{"location":"faq.html#frequently-asked-questions-faq","text":"","title":"Frequently Asked Questions (FAQ)"},{"location":"faq.html#will-my-settings-remain-when-updating-bsb-lan","text":"That depends. Minor updates will not affect any settings, but sometimes it is unavoidable that changes in the code also affect the settings. In that case, it is mentioned in the file CHANGELOG.md , and BSB-LAN rewrites the settings in the EEPROM based on the settings in BSB_LAN_config.h . That's why it's best to always make significant changes in the settings also in that file. Updates never affect any parameters in the heating system.","title":"Will my settings remain when updating BSB-LAN?"},{"location":"faq.html#my-heater-has-a-openthermebusl-busr-bus-connector-can-i-use-bsb-lan","text":"No, these controllers are not compatible with BSB-LAN. Do not try and connect the adapter to your heating system!","title":"My heater has a OpenTherm/eBus/L-Bus/R-Bus connector, can I use BSB-LAN?"},{"location":"faq.html#im-missing-function-xyz","text":"BSB-LAN offers the possibility to create own functions using the files BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h and BSB_LAN_custom.h . Please see the folder custom_functions in the repository for more details and examples. Feel free to contribute your solutions to the public!","title":"I'm missing function XYZ"},{"location":"homeautomation.html","text":"Connecting BSB-LAN to home automation systems BSB-LAN provides four ways to connect to home automation systems: Using supported modules for specific home automation systems Exchanging data via MQTT Exchanging data via JSON Exchanging data via URL commands and screen scraping Using supported modules for specific home automation systems For some systems, specific modules exist that can be used to access BSB-LAN seamlessly: Home Assistant While the official plugin no longer works, the MQTT approach (see below) works well with Home Assistant, including the auto-discovery feature. Here is a link to a video in the BSB-LAN YouTube channel that shows how to set up BSB-LAN in Home Assistant using the auto-discovery feature of Home Assistant. For further details of the implementation, you may also refer to these tutorials: GitHub user @ryann72 wrote detailed instructions for BSB-LAN and HomeAssistant/Mosquitto . It is also available in French . YouTuber @StoneTime has created two videos (in German) where he shows the installation of BSB-LAN as well as setting it up in Home Assistant . Dankesch\u00f6n! YouTuber @ArminasTV has created two videos (in French) where he shows the installation of BSB-LAN as well as how to set it up with Home Assistant and MQTT . Merci beacoup! Homebridge BSB-LAN user Michael has written a plugin for Homebridge . Thank you! ioBroker GitHub user @hacki11 has developed an adapter for ioBroker . Thank you! Jeedom GitHub user @bernard-dandrea has written a plugin for Jeedom (with a French description). Thank you! Node-RED GitHub user @konne wrote a module for Node-RED . Thank you! FHEM FHEM forum user Luposoft has written a compact explanation of the configuration for using FHEM via MQTT. Thank you! openHAB Since version 2.5.4, there exists a binding that is officially part of OpenHAB. Homematic FHEM forum user PaulM has written a few scripts to showcase the integration of BSB-LAN into Homematic. Thank you! SmartHomeNG GitHub user @thensty wrote a plugin for SmartHomeNG . Thank you! Volkszaehler GitHub user @lapixo has contributed a script for the Volkszaehler project . Thank you! Bash script GitHub user @khfm has written Bash scripts to query data and display it using gnuplot. Thank you! Exchanging data via MQTT This is the recommended way to connect BSB-LAN to home automation systems because it allows seamless exchange of data. As a prerequisite, a MQTT broker (such as mosquitto ) is needed, either running locally or via making use of a public service. Some home automation systems such as Home Assistant offer the installation of mosquitto as part of their software. Attention: Currently, the mosquitto broker seems to have an issue with handling larger numbers of messages from versions 2.0.16 onwards ( see this bug report ). If you encounter the problem that your BSB-LAN entities become \"unavailable\", especially after using the auto-discovery feature below, please downgrade to mosquitto version 2.0.15. However, be aware that this version has security issues, so make sure that your broker runs at least in a firewalled environment. In BSB-LAN, you need to make or enable at least the following configurations: Set Logging mode (additionally) to Send to MQTT Broker . Set Log Interval to the time (in seconds) you want the log parameters to be published. Select up to 20 Log Parameters you want to be sent to your home automation system. Set MQTT Usage to plain text . Set MQTT Broker Server to the hostname of your MQTT broker (such as the mosquitto server). If your home automation system supports MQTT auto-discovery (as is the case with Home Assistant), you can call URL command /M1!<x> and BSB-LAN will send auto-discovery messages for all available parameters from device ID <x> to the MQTT broker and thus to the home automation system. You may have to clean up afterwards or send a removal message for all these parameters using URL command /M0!<x> if you don't want to use this feature anymore. Otherwise, if you want to set up your own connection details, the topic structure of BSB-LAN is as follows: <BSB-LAN MQTT Topic>/<device ID>/<category no.>/<parameter no.> whereas <BSB-LAN MQTT Topic> is defined in BSB-LAN's settings (defaults to BSB-LAN ), <device ID> is the ID of the heating controller (usually 0 for the main controller), <category no.> is the category number as it is used with URL-command /K , <parameter no.> is the parameter number, such as 501.1 . This structure is followed by one of these topics that determine the action to be performed: /status - contains the value of the parameter in the MQTT payload. /set - used to set a parameter with the value contained in the published MQTT payload using the SET telegram (default way of setting parameters). /inf - same as /set , but uses the INF telegram (used for sending room temperature parameter 10000, for example). /poll - ignores the published value and forces BSB-LAN to immediately update /status of the same parameter with a freshly retrieved parameter value. /poll can also be accessed directly below the main topic (e.g. BSB-LAN/poll ) where it accepts a list of parameters separated by comma. These parameters will then immediately have their respective /status topics updated in one go. Addressing parameters can either be done in topic-style (with leading slash) or similar to the list of logging parameters in BSB-LAN's settings (see examples below). At the same time, the legacy way of sending URL commands via MQTT directly to the main topic (as defined in the settings, defaulting to BSB-LAN ), is still supported for compatibility reasons, but deprecated. Responses will always be written to /status of the above mentioned topic structure. The /status topic is updated in four ways: via logging parameters to MQTT as explained above every time a URL query is made to BSB-LAN (can be disabled by activating Only send log parameters to MQTT in configuration) every time a parameter is changed through the room unit (can be disabled by activating Only send log parameters to MQTT in configuration) every time the parameter is updated via the /poll topic as explained above In these cases, the respective values of the parameters affected will be sent to the MQTT broker, so even changes made outside of BSB-LAN are sent to the home automation system, which is why the MQTT approach is the recommended way to connect to a home automation system. This also means that, as an alternative to the built-in logging feature of BSB-LAN, you can also just periodically call a URL with the parameters you want to see updated. Since these parameters will also be sent to the MQTT broker, your home automation system will receive them as well. For example, if you periodically call the URL http://bsb-lan.local/700/8700 , both the operating mode of heat circuit 1 (parameter 700) as well as the current outside temperature (parameter 8700) will be sent to the MQTT broker. Examples for querying or setting parameters via MQTT using mosquitto Query the outside temperature (device ID 0, category no. 51, parameter 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status Set the comfort temperature setpoint (device ID 0, category no. 16, parameter 710) to 20 degrees: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Force immediate update of outside temperature (device ID 0, category no. 51, parameter 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Force immediate update of parameters 700 and 8700 from default device as well as parameter 8326 from device ID 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll or mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Attention: Take note that the category number differs from system to system and has to be compared with your system first! Exchanging data via JSON BSB-LAN allows to query and set parameters via JSON structures and also provides numerous information about the parameters and category structures this way. The JSON API is accessd via URL commands and the openapi.yaml file provided in this repository can be used with Swagger to explore its possibilities and functionalitites. Exchanging data via URL commands and screen scraping For simpler solutions, using the URL commands to query and set parameters can be used to control BSB-LAN from other systems. Screen scraping is possible since the project tries not to break certain ways of displaying data, so that parsing with regular expressions remains feasible. Nevertheless, for most scenarios one of the other options will probably be preferrable.","title":"Connect to your Smart Home"},{"location":"homeautomation.html#connecting-bsb-lan-to-home-automation-systems","text":"BSB-LAN provides four ways to connect to home automation systems: Using supported modules for specific home automation systems Exchanging data via MQTT Exchanging data via JSON Exchanging data via URL commands and screen scraping","title":"Connecting BSB-LAN to home automation systems"},{"location":"homeautomation.html#using-supported-modules-for-specific-home-automation-systems","text":"For some systems, specific modules exist that can be used to access BSB-LAN seamlessly:","title":"Using supported modules for specific home automation systems"},{"location":"homeautomation.html#home-assistant","text":"While the official plugin no longer works, the MQTT approach (see below) works well with Home Assistant, including the auto-discovery feature. Here is a link to a video in the BSB-LAN YouTube channel that shows how to set up BSB-LAN in Home Assistant using the auto-discovery feature of Home Assistant. For further details of the implementation, you may also refer to these tutorials: GitHub user @ryann72 wrote detailed instructions for BSB-LAN and HomeAssistant/Mosquitto . It is also available in French . YouTuber @StoneTime has created two videos (in German) where he shows the installation of BSB-LAN as well as setting it up in Home Assistant . Dankesch\u00f6n! YouTuber @ArminasTV has created two videos (in French) where he shows the installation of BSB-LAN as well as how to set it up with Home Assistant and MQTT . Merci beacoup!","title":"Home Assistant"},{"location":"homeautomation.html#homebridge","text":"BSB-LAN user Michael has written a plugin for Homebridge . Thank you!","title":"Homebridge"},{"location":"homeautomation.html#iobroker","text":"GitHub user @hacki11 has developed an adapter for ioBroker . Thank you!","title":"ioBroker"},{"location":"homeautomation.html#jeedom","text":"GitHub user @bernard-dandrea has written a plugin for Jeedom (with a French description). Thank you!","title":"Jeedom"},{"location":"homeautomation.html#node-red","text":"GitHub user @konne wrote a module for Node-RED . Thank you!","title":"Node-RED"},{"location":"homeautomation.html#fhem","text":"FHEM forum user Luposoft has written a compact explanation of the configuration for using FHEM via MQTT. Thank you!","title":"FHEM"},{"location":"homeautomation.html#openhab","text":"Since version 2.5.4, there exists a binding that is officially part of OpenHAB.","title":"openHAB"},{"location":"homeautomation.html#homematic","text":"FHEM forum user PaulM has written a few scripts to showcase the integration of BSB-LAN into Homematic. Thank you!","title":"Homematic"},{"location":"homeautomation.html#smarthomeng","text":"GitHub user @thensty wrote a plugin for SmartHomeNG . Thank you!","title":"SmartHomeNG"},{"location":"homeautomation.html#volkszaehler","text":"GitHub user @lapixo has contributed a script for the Volkszaehler project . Thank you!","title":"Volkszaehler"},{"location":"homeautomation.html#bash-script","text":"GitHub user @khfm has written Bash scripts to query data and display it using gnuplot. Thank you!","title":"Bash script"},{"location":"homeautomation.html#exchanging-data-via-mqtt","text":"This is the recommended way to connect BSB-LAN to home automation systems because it allows seamless exchange of data. As a prerequisite, a MQTT broker (such as mosquitto ) is needed, either running locally or via making use of a public service. Some home automation systems such as Home Assistant offer the installation of mosquitto as part of their software. Attention: Currently, the mosquitto broker seems to have an issue with handling larger numbers of messages from versions 2.0.16 onwards ( see this bug report ). If you encounter the problem that your BSB-LAN entities become \"unavailable\", especially after using the auto-discovery feature below, please downgrade to mosquitto version 2.0.15. However, be aware that this version has security issues, so make sure that your broker runs at least in a firewalled environment. In BSB-LAN, you need to make or enable at least the following configurations: Set Logging mode (additionally) to Send to MQTT Broker . Set Log Interval to the time (in seconds) you want the log parameters to be published. Select up to 20 Log Parameters you want to be sent to your home automation system. Set MQTT Usage to plain text . Set MQTT Broker Server to the hostname of your MQTT broker (such as the mosquitto server). If your home automation system supports MQTT auto-discovery (as is the case with Home Assistant), you can call URL command /M1!<x> and BSB-LAN will send auto-discovery messages for all available parameters from device ID <x> to the MQTT broker and thus to the home automation system. You may have to clean up afterwards or send a removal message for all these parameters using URL command /M0!<x> if you don't want to use this feature anymore. Otherwise, if you want to set up your own connection details, the topic structure of BSB-LAN is as follows: <BSB-LAN MQTT Topic>/<device ID>/<category no.>/<parameter no.> whereas <BSB-LAN MQTT Topic> is defined in BSB-LAN's settings (defaults to BSB-LAN ), <device ID> is the ID of the heating controller (usually 0 for the main controller), <category no.> is the category number as it is used with URL-command /K , <parameter no.> is the parameter number, such as 501.1 . This structure is followed by one of these topics that determine the action to be performed: /status - contains the value of the parameter in the MQTT payload. /set - used to set a parameter with the value contained in the published MQTT payload using the SET telegram (default way of setting parameters). /inf - same as /set , but uses the INF telegram (used for sending room temperature parameter 10000, for example). /poll - ignores the published value and forces BSB-LAN to immediately update /status of the same parameter with a freshly retrieved parameter value. /poll can also be accessed directly below the main topic (e.g. BSB-LAN/poll ) where it accepts a list of parameters separated by comma. These parameters will then immediately have their respective /status topics updated in one go. Addressing parameters can either be done in topic-style (with leading slash) or similar to the list of logging parameters in BSB-LAN's settings (see examples below). At the same time, the legacy way of sending URL commands via MQTT directly to the main topic (as defined in the settings, defaulting to BSB-LAN ), is still supported for compatibility reasons, but deprecated. Responses will always be written to /status of the above mentioned topic structure. The /status topic is updated in four ways: via logging parameters to MQTT as explained above every time a URL query is made to BSB-LAN (can be disabled by activating Only send log parameters to MQTT in configuration) every time a parameter is changed through the room unit (can be disabled by activating Only send log parameters to MQTT in configuration) every time the parameter is updated via the /poll topic as explained above In these cases, the respective values of the parameters affected will be sent to the MQTT broker, so even changes made outside of BSB-LAN are sent to the home automation system, which is why the MQTT approach is the recommended way to connect to a home automation system. This also means that, as an alternative to the built-in logging feature of BSB-LAN, you can also just periodically call a URL with the parameters you want to see updated. Since these parameters will also be sent to the MQTT broker, your home automation system will receive them as well. For example, if you periodically call the URL http://bsb-lan.local/700/8700 , both the operating mode of heat circuit 1 (parameter 700) as well as the current outside temperature (parameter 8700) will be sent to the MQTT broker.","title":"Exchanging data via MQTT"},{"location":"homeautomation.html#examples-for-querying-or-setting-parameters-via-mqtt-using-mosquitto","text":"Query the outside temperature (device ID 0, category no. 51, parameter 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status Set the comfort temperature setpoint (device ID 0, category no. 16, parameter 710) to 20 degrees: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Force immediate update of outside temperature (device ID 0, category no. 51, parameter 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Force immediate update of parameters 700 and 8700 from default device as well as parameter 8326 from device ID 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll or mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Attention: Take note that the category number differs from system to system and has to be compared with your system first!","title":"Examples for querying or setting parameters via MQTT using mosquitto"},{"location":"homeautomation.html#exchanging-data-via-json","text":"BSB-LAN allows to query and set parameters via JSON structures and also provides numerous information about the parameters and category structures this way. The JSON API is accessd via URL commands and the openapi.yaml file provided in this repository can be used with Swagger to explore its possibilities and functionalitites.","title":"Exchanging data via JSON"},{"location":"homeautomation.html#exchanging-data-via-url-commands-and-screen-scraping","text":"For simpler solutions, using the URL commands to query and set parameters can be used to control BSB-LAN from other systems. Screen scraping is possible since the project tries not to break certain ways of displaying data, so that parsing with regular expressions remains feasible. Nevertheless, for most scenarios one of the other options will probably be preferrable.","title":"Exchanging data via URL commands and screen scraping"},{"location":"install.html","text":"Installation Installing BSB-LAN requires three steps: Installing the Arduino IDE in order to flash the BSB-LAN software onto the microcontroller Assembling the hardware parts Connecting BSB-LAN to the heating system Installing the Arduino IDE and flashing BSB-LAN Download and unpack the current BSB-LAN version from the master repository or use git to clone the repository. Navigate to the BSB_LAN folder and rename the following files: BSB_LAN_custom_defs.h.default to BSB_LAN_custom_defs.h BSB_LAN_config.h.default to BSB_LAN_config.h . Download and install the Arduino IDE for your system. Connect your microcontroller (ESP32 or Arduino Due) to your computer and start the Arduino IDE. Go to Tools/Board/Board Manager and make sure that the framework for your board is installed (\"esp32 by Espressif Systems\" for ESP32 microcontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" for Arduino Due microcontroller) Again, go to Tools/Board and select your microcontroller: ESP32 Dev Module for the Joy-It ESP32 NodeMCU. Olimex ESP32-EVB for the ESP32-based Olimex EVB . Olimex ESP32-POE-ISO for the ESP32-based Olimex POE ISO Arduino Due (Programming Port) for the Arduino Due. Do not use the Native USB Port here ! Again, go to Tools/Board and select the proper upload speed (up to 460800 for ESP32, 115200 for Arduino Due). For ESP32-based microcontrollers, again, go to Tools/Board and select \"Minimal SPIFFS\" for partition scheme ( do not confuse this with the similar \"Minimal\" partition scheme which is different and not working in our case). If you don't set the correct parition scheme, the firmware will not fit into the ESP32! Go to File/Open and navigate to the BSB_LAN folder and double-click on BSB_LAN.ino . The project will open. You may now proceed to configure BSB-LAN. When you are done configuring, go to Sketch/Upload and upload the BSB-LAN software to the microcontroller. The same process has to be done with every future update, including when adding the device-specific parameter list. Subsequent updates on ESP32-based microcontrollers \"over the air\" (OTA) If you are running BSB-LAN on an ESP32-based microcontroller and have enabled Over-the-Air Updates in the settings , you can perform future updates of BSB-LAN using your browser. To do that, instead of using Sketch/Upload , you need to select Sketch/Export Compiled Binary . This will create a build folder in your BSB-LAN folder in which you will find among others the file BSB_LAN.ino.bin . Now open http://bsb-lan.local:8080 and select and upload that file. Do not interrupt the upload process. You may try to access BSB-LAN from a different browser window to see if the process is completed. Please take note that this only applies to ESP32-based microcontrollers. Arduinos do not support this functionality. Assembling the BSB-LAN adapter You can either get a fully assembled adapter from Frederik (bsb(\u00e4t)code-it.de) or build one on your own (see the folder schematics for the schematics). Once you have the BSB-LAN adapter ready, you just need to plug it into the microcontroller. If you are using an Olimex microcontroller, double-check that the adapter really sits in the center of the connector, because it still fits even if it is moved by one pin row to the left or right. Connecting BSB-LAN to the heating system Once the microcontroller and the BSB-LAN adapter are ready, perform the following steps to connect BSB-LAN to the heating system: Unplug the microcontroller from your computer and turn off your heating system. Locate the BSB/LPB/PPS connectors. You may have to open your heating system for that. Have a look at the list of supported heating systems to get an idea where the pins are located. Do all this at your own risk! If you are not careful, you may damage your equipment! Especially take care to prevent electrostatic discharge (ESD) which can destroy both BSB-LAN and the heating controller! Now plug the BSB-LAN adapter onto the microcontroller and connect the + screw connector to the CL+ (BSB), DB (LPB) or A6 (PPS, different connector names are possible) connector, and the - screw connector to the CL- (BSB), MB (LPB) or M (PPS) connector. If there is no empty connector, there is no problem adding the wires for BSB-LAN to an already \"used\" connector, provided the wires are inserted carefully. Regarding the cables, an (ideally screened/shielded) twisted two-core cable is recommended by Siemens . However, a number of users have also been successful with plain bell wire if the distances are not too long. Now you need to power on the microcontroller. Take note that the heating system does not power the microcontroller, even if the BSB-LAN adapter's LED turns on when you connect it to the heating system. You need to supply power to the microcontroller via its USB port (or via PoE on the Olimex POE-ISO). Make sure to use a stable power supply with at least 2 amperes. Once the microcontroller is powered on, turn on the heating system. The red LED of the BSB-LAN adapter should alight. It should flicker occasionally. Now open your webbrowser and open the IP address of BSB-LAN. If MDNS is enabled, you can directly go to http://bsb-lan.local . Otherwise, you can find the IP address of BSB-LAN either in your router, or you connect the microcontroller to your PC and open the Arduino IDE and go to Tools/Serial Monitor and set the serial monitor speed to 115200. Restart the microcontroller, and the IP address will be displayed upon connecting to the network. Generating the device-specific parameter list Once you access BSB-LAN for the first time, you will see that only very few parameters are shown on the device\u2019s web interface. This is because each model of the Siemens controller built into your heating system supports a different set of parameters. Previously, I provided a list of parameters collected from all different kinds of heating systems, but it turned out that this list was ambiguous or even contained errors that we couldn\u2019t fix reliably. This list is still available in release version 2.2.x of BSB-LAN and can be copied from there if needed. However, it is not advisable to do so because the said ambiguities and errors pose too great a risk of misconfiguring the heating system. Instead, it is recommended to click on the \" Device-specific parameter list \" button in BSB-LAN's menu and send the generated list to Frederik (bsb(\u00e4t)code-it.de). From this file, a parameter list can be generated that fits exactly the controller of your heating system. Unfortunately, this process cannot be automated yet, but at least it has to be done just once. These raw data do not contain any settings or other kinds of personal data, just the parameter structure of the heating system. It\u2019s in my own interest to create and return these parameter lists without any delay, but I ask for your understanding if it takes a bit longer due to work or family matters. Once you have received the parameter list (or taken the one from version 2.2.x), you have to replace the existing BSB_LAN_custom_defs.h file with the one sent to you, compile it and flash it again. Now you are ready to access all parameters.","title":"Installation"},{"location":"install.html#installation","text":"Installing BSB-LAN requires three steps: Installing the Arduino IDE in order to flash the BSB-LAN software onto the microcontroller Assembling the hardware parts Connecting BSB-LAN to the heating system","title":"Installation"},{"location":"install.html#installing-the-arduino-ide-and-flashing-bsb-lan","text":"Download and unpack the current BSB-LAN version from the master repository or use git to clone the repository. Navigate to the BSB_LAN folder and rename the following files: BSB_LAN_custom_defs.h.default to BSB_LAN_custom_defs.h BSB_LAN_config.h.default to BSB_LAN_config.h . Download and install the Arduino IDE for your system. Connect your microcontroller (ESP32 or Arduino Due) to your computer and start the Arduino IDE. Go to Tools/Board/Board Manager and make sure that the framework for your board is installed (\"esp32 by Espressif Systems\" for ESP32 microcontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" for Arduino Due microcontroller) Again, go to Tools/Board and select your microcontroller: ESP32 Dev Module for the Joy-It ESP32 NodeMCU. Olimex ESP32-EVB for the ESP32-based Olimex EVB . Olimex ESP32-POE-ISO for the ESP32-based Olimex POE ISO Arduino Due (Programming Port) for the Arduino Due. Do not use the Native USB Port here ! Again, go to Tools/Board and select the proper upload speed (up to 460800 for ESP32, 115200 for Arduino Due). For ESP32-based microcontrollers, again, go to Tools/Board and select \"Minimal SPIFFS\" for partition scheme ( do not confuse this with the similar \"Minimal\" partition scheme which is different and not working in our case). If you don't set the correct parition scheme, the firmware will not fit into the ESP32! Go to File/Open and navigate to the BSB_LAN folder and double-click on BSB_LAN.ino . The project will open. You may now proceed to configure BSB-LAN. When you are done configuring, go to Sketch/Upload and upload the BSB-LAN software to the microcontroller. The same process has to be done with every future update, including when adding the device-specific parameter list.","title":"Installing the Arduino IDE and flashing BSB-LAN"},{"location":"install.html#subsequent-updates-on-esp32-based-microcontrollers-over-the-air-ota","text":"If you are running BSB-LAN on an ESP32-based microcontroller and have enabled Over-the-Air Updates in the settings , you can perform future updates of BSB-LAN using your browser. To do that, instead of using Sketch/Upload , you need to select Sketch/Export Compiled Binary . This will create a build folder in your BSB-LAN folder in which you will find among others the file BSB_LAN.ino.bin . Now open http://bsb-lan.local:8080 and select and upload that file. Do not interrupt the upload process. You may try to access BSB-LAN from a different browser window to see if the process is completed. Please take note that this only applies to ESP32-based microcontrollers. Arduinos do not support this functionality.","title":"Subsequent updates on ESP32-based microcontrollers \"over the air\" (OTA)"},{"location":"install.html#assembling-the-bsb-lan-adapter","text":"You can either get a fully assembled adapter from Frederik (bsb(\u00e4t)code-it.de) or build one on your own (see the folder schematics for the schematics). Once you have the BSB-LAN adapter ready, you just need to plug it into the microcontroller. If you are using an Olimex microcontroller, double-check that the adapter really sits in the center of the connector, because it still fits even if it is moved by one pin row to the left or right.","title":"Assembling the BSB-LAN adapter"},{"location":"install.html#connecting-bsb-lan-to-the-heating-system","text":"Once the microcontroller and the BSB-LAN adapter are ready, perform the following steps to connect BSB-LAN to the heating system: Unplug the microcontroller from your computer and turn off your heating system. Locate the BSB/LPB/PPS connectors. You may have to open your heating system for that. Have a look at the list of supported heating systems to get an idea where the pins are located. Do all this at your own risk! If you are not careful, you may damage your equipment! Especially take care to prevent electrostatic discharge (ESD) which can destroy both BSB-LAN and the heating controller! Now plug the BSB-LAN adapter onto the microcontroller and connect the + screw connector to the CL+ (BSB), DB (LPB) or A6 (PPS, different connector names are possible) connector, and the - screw connector to the CL- (BSB), MB (LPB) or M (PPS) connector. If there is no empty connector, there is no problem adding the wires for BSB-LAN to an already \"used\" connector, provided the wires are inserted carefully. Regarding the cables, an (ideally screened/shielded) twisted two-core cable is recommended by Siemens . However, a number of users have also been successful with plain bell wire if the distances are not too long. Now you need to power on the microcontroller. Take note that the heating system does not power the microcontroller, even if the BSB-LAN adapter's LED turns on when you connect it to the heating system. You need to supply power to the microcontroller via its USB port (or via PoE on the Olimex POE-ISO). Make sure to use a stable power supply with at least 2 amperes. Once the microcontroller is powered on, turn on the heating system. The red LED of the BSB-LAN adapter should alight. It should flicker occasionally. Now open your webbrowser and open the IP address of BSB-LAN. If MDNS is enabled, you can directly go to http://bsb-lan.local . Otherwise, you can find the IP address of BSB-LAN either in your router, or you connect the microcontroller to your PC and open the Arduino IDE and go to Tools/Serial Monitor and set the serial monitor speed to 115200. Restart the microcontroller, and the IP address will be displayed upon connecting to the network.","title":"Connecting BSB-LAN to the heating system"},{"location":"install.html#generating-the-device-specific-parameter-list","text":"Once you access BSB-LAN for the first time, you will see that only very few parameters are shown on the device\u2019s web interface. This is because each model of the Siemens controller built into your heating system supports a different set of parameters. Previously, I provided a list of parameters collected from all different kinds of heating systems, but it turned out that this list was ambiguous or even contained errors that we couldn\u2019t fix reliably. This list is still available in release version 2.2.x of BSB-LAN and can be copied from there if needed. However, it is not advisable to do so because the said ambiguities and errors pose too great a risk of misconfiguring the heating system. Instead, it is recommended to click on the \" Device-specific parameter list \" button in BSB-LAN's menu and send the generated list to Frederik (bsb(\u00e4t)code-it.de). From this file, a parameter list can be generated that fits exactly the controller of your heating system. Unfortunately, this process cannot be automated yet, but at least it has to be done just once. These raw data do not contain any settings or other kinds of personal data, just the parameter structure of the heating system. It\u2019s in my own interest to create and return these parameter lists without any delay, but I ask for your understanding if it takes a bit longer due to work or family matters. Once you have received the parameter list (or taken the one from version 2.2.x), you have to replace the existing BSB_LAN_custom_defs.h file with the one sent to you, compile it and flash it again. Now you are ready to access all parameters.","title":"Generating the device-specific parameter list"},{"location":"list_of_controllers.html","text":"AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"List of controllers"},{"location":"quickstart.html","text":"Quickstart instructions These quickstart instructions are for users who are familiar with installing and configuring software on their computer. If you need more detailed instructions, please head to the install instructions ! Make sure that your heating system is compatible with BSB-LAN! Download and unpack the current BSB-LAN version from the master repository or use git to clone the repository. Navigate to the BSB_LAN folder and rename the following files: BSB_LAN_custom_defs.h.default to BSB_LAN_custom_defs.h BSB_LAN_config.h.default to BSB_LAN_config.h . Download and install the Arduino IDE for your system. Connect your microcontroller (ESP32 or Arduino Due) to your computer and start the Arduino IDE. Go to Tools/Board/Board Manager and make sure that the framework for your board is installed (\"esp32 by Espressif Systems\" for ESP32 microcontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" for Arduino Due microcontroller) Again, go to Tools/Board and select your microcontroller: ESP32 Dev Module for the Joy-It ESP32 NodeMCU. Olimex ESP32-EVB for the ESP32-based Olimex EVB . Olimex ESP32-POE-ISO for the ESP32-based Olimex POE ISO Arduino Due (Programming Port) for the Arduino Due. Do not use the Native USB Port here ! Again, go to Tools/Board and select the proper upload speed (up to 460800 for ESP32, 115200 for Arduino Due). For ESP32-based microcontrollers, again, go to Tools/Partition Scheme and select \"Minimal SPIFFS\" or for partition scheme ( do not confuse this with the similar \"Minimal\" partition scheme which is different and not working in our case). If you don't set the correct parition scheme, the firmware will not fit into the ESP32! Go to File/Open and navigate to the BSB_LAN folder and double-click on BSB_LAN.ino . The project will open. Click on the tab with the filename BSB_LAN_config.h and configure at least the following: Search for #define LANG DE : Change DE to EN for English, FR for French etc. Search for uint8_t network_type : Set this to LAN if you are using Ethernet/LAN connection. Set this to WLAN if you are using WiFi/WLAN. If you are not using DHCP, configure the following options according to your network (make sure to use a comma, not a dot for IP addresses!): byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Now go to Sketch/Upload and upload the BSB-LAN software to the microcontroller. Unplug the microcontroller and turn off your heating system. Locate the BSB/LPB/PPS connectors. You may have to open your heating system for that. Do all this at your own risk! Now plug the BSB-LAN adapter onto the microcontroller and connect the + screw connector to the CL+ (BSB), DB (LPB) or A6 (PPS, different connector names are possible) connector, and the - screw connector to the CL- (BSB), MB (LPB) or M (PPS) connector. Power on the microcontroller via the USB port or via PoE (Olimex POE-ISO only). Then power on the heating system. The red LED of the BSB-LAN adapter should turn on. It should flicker occasionally. Now open your webbrowser and open the IP address of BSB-LAN. If MDNS is enabled, you can directly go to http://bsb-lan.local . You can find the IP address of BSB-LAN either in your router, or you connect the microcontroller to your PC and open the Arduino IDE and go to Tools/Serial Monitor . Restart the microcontroller, and the IP address will be displayed upon connecting to the network. Done :-) It's not working! Please make sure you check every entry in the Troubleshooting-Section first before getting in touch with us! Why do I only see so few parameters? Once you access BSB-LAN for the first time, you will see that only very few parameters are shown on the device\u2019s web interface. This is because each model of the Siemens controller built into your heating system supports a different set of parameters. Previously, I provided a list of parameters collected from all different kinds of heating systems, but it turned out that this list was ambiguous or even contained errors that we couldn\u2019t fix reliably. This list is still available in release version 2.2.x of BSB-LAN and can be copied from there if needed. However, it is not advisable to do so because the said ambiguities and errors pose too great a risk of misconfiguring the heating system. Instead, it is recommended to click on the \" Device-specific parameter list \" button in BSB-LAN's menu and send the generated list to Frederik (bsb(\u00e4t)code-it.de). From this file, a parameter list can be generated that fits exactly the controller of your heating system. Unfortunately, this process cannot be automated yet, but at least it has to be done just once. These raw data do not contain any settings or other kinds of personal data, just the parameter structure of the heating system. It\u2019s in my own interest to create and return these parameter lists without any delay, but I ask for your understanding if it takes a bit longer due to work or family matters.","title":"Quickstart"},{"location":"quickstart.html#quickstart-instructions","text":"These quickstart instructions are for users who are familiar with installing and configuring software on their computer. If you need more detailed instructions, please head to the install instructions ! Make sure that your heating system is compatible with BSB-LAN! Download and unpack the current BSB-LAN version from the master repository or use git to clone the repository. Navigate to the BSB_LAN folder and rename the following files: BSB_LAN_custom_defs.h.default to BSB_LAN_custom_defs.h BSB_LAN_config.h.default to BSB_LAN_config.h . Download and install the Arduino IDE for your system. Connect your microcontroller (ESP32 or Arduino Due) to your computer and start the Arduino IDE. Go to Tools/Board/Board Manager and make sure that the framework for your board is installed (\"esp32 by Espressif Systems\" for ESP32 microcontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" for Arduino Due microcontroller) Again, go to Tools/Board and select your microcontroller: ESP32 Dev Module for the Joy-It ESP32 NodeMCU. Olimex ESP32-EVB for the ESP32-based Olimex EVB . Olimex ESP32-POE-ISO for the ESP32-based Olimex POE ISO Arduino Due (Programming Port) for the Arduino Due. Do not use the Native USB Port here ! Again, go to Tools/Board and select the proper upload speed (up to 460800 for ESP32, 115200 for Arduino Due). For ESP32-based microcontrollers, again, go to Tools/Partition Scheme and select \"Minimal SPIFFS\" or for partition scheme ( do not confuse this with the similar \"Minimal\" partition scheme which is different and not working in our case). If you don't set the correct parition scheme, the firmware will not fit into the ESP32! Go to File/Open and navigate to the BSB_LAN folder and double-click on BSB_LAN.ino . The project will open. Click on the tab with the filename BSB_LAN_config.h and configure at least the following: Search for #define LANG DE : Change DE to EN for English, FR for French etc. Search for uint8_t network_type : Set this to LAN if you are using Ethernet/LAN connection. Set this to WLAN if you are using WiFi/WLAN. If you are not using DHCP, configure the following options according to your network (make sure to use a comma, not a dot for IP addresses!): byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Now go to Sketch/Upload and upload the BSB-LAN software to the microcontroller. Unplug the microcontroller and turn off your heating system. Locate the BSB/LPB/PPS connectors. You may have to open your heating system for that. Do all this at your own risk! Now plug the BSB-LAN adapter onto the microcontroller and connect the + screw connector to the CL+ (BSB), DB (LPB) or A6 (PPS, different connector names are possible) connector, and the - screw connector to the CL- (BSB), MB (LPB) or M (PPS) connector. Power on the microcontroller via the USB port or via PoE (Olimex POE-ISO only). Then power on the heating system. The red LED of the BSB-LAN adapter should turn on. It should flicker occasionally. Now open your webbrowser and open the IP address of BSB-LAN. If MDNS is enabled, you can directly go to http://bsb-lan.local . You can find the IP address of BSB-LAN either in your router, or you connect the microcontroller to your PC and open the Arduino IDE and go to Tools/Serial Monitor . Restart the microcontroller, and the IP address will be displayed upon connecting to the network. Done :-)","title":"Quickstart instructions"},{"location":"quickstart.html#its-not-working","text":"Please make sure you check every entry in the Troubleshooting-Section first before getting in touch with us!","title":"It's not working!"},{"location":"quickstart.html#why-do-i-only-see-so-few-parameters","text":"Once you access BSB-LAN for the first time, you will see that only very few parameters are shown on the device\u2019s web interface. This is because each model of the Siemens controller built into your heating system supports a different set of parameters. Previously, I provided a list of parameters collected from all different kinds of heating systems, but it turned out that this list was ambiguous or even contained errors that we couldn\u2019t fix reliably. This list is still available in release version 2.2.x of BSB-LAN and can be copied from there if needed. However, it is not advisable to do so because the said ambiguities and errors pose too great a risk of misconfiguring the heating system. Instead, it is recommended to click on the \" Device-specific parameter list \" button in BSB-LAN's menu and send the generated list to Frederik (bsb(\u00e4t)code-it.de). From this file, a parameter list can be generated that fits exactly the controller of your heating system. Unfortunately, this process cannot be automated yet, but at least it has to be done just once. These raw data do not contain any settings or other kinds of personal data, just the parameter structure of the heating system. It\u2019s in my own interest to create and return these parameter lists without any delay, but I ask for your understanding if it takes a bit longer due to work or family matters.","title":"Why do I only see so few parameters?"},{"location":"supported_heating_systems.html","text":"Supported heating systems BSB-LAN supports heating systems that communicate using either the BSB (Boiler System Bus) , the LPB (Local Process Bus) or the PPS (Punkt-zu-Punkt-Schnittstelle) . These controllers are usually manufactured by Siemens, older controllers might still bear the company name \"Landis & Stafea\" or \"Landis & Gyr\". We have compiled a list of working models from various heating system manufacturers who have been confirmed working with BSB-LAN, although there is no 100% guarantee that the manufacturers keep the model name but change the controller to a different system. So always make sure to double-check that the right connectors are available. Here are a few examples from heating controllers and the connectors that are used to connect to BSB-LAN. Some connectors have three pins, some have two pins. If there are three pins, make sure you choose the correct two (CL+ and CL-) as the third von (G+) is to provide background lighting for the room unit. It won't harm BSB-LAN, but it might be misleading because BSB-LAN's LED will be on even though it's not connected to the right pin. By the way: If you only have one connector and it is already occupied with a room unit, it's no problem to add BSB-LAN to the same connector. Just be careful when adding the wires for BSB-LAN. Controller Image Remarks LMS14 LMS15 BSB connection: + = Left - = Center LMS14 LMS15 BSB connection: CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista BSB connection: Terminal block M2 Pin 2: CL- Pin 3: CL+ See detailed instructions here for Baxi Luna Platinum . LMU54 LMU64 LPB connection: via additional OCI420 plugin, see details below . LMU74 LMU75 BSB connection: + = Top - = Center LPB connection: via additional OCI420 plugin RVA53 PPS connection: A6/MD RVA63 LPB connection: MB/DB PPS connection: A6/MD RVP54 PPS connection: A6/M RVS13 BSB connection: CL+/CL- RVS21 BSB connection via connector X86 + = rightmost pin - = second pin from right RVS21 with AVS55 AVS55 extension module, sitting on top of RVS21. BSB connection either via connector X86: + = rightmost pin - = second pin from right or via connector X150: + = topmost pin - = second pin from top RVS23 LPB connection: LPB/M RVS41 BSB connection: CL+/CL- LPB connection: MB/DB RVS43 LOGON B BSB connection: CL+/CL- LPB connection: MB/DB RVS46 ISR-ZR1 BSB connection: CL+/CL- LPB connection: MB/DB RVS46 BSB connection: CL+/CL- LPB connection: MB/DB RVS51 BSB connection: CL+/CL- RVS53 BSB connection: CL+/CL- RVS61 BSB connection: CL+/CL- LPB connection: MB/DB RVS63 BSB connection: CL+/CL- LPB connection: MB/DB RVS65 BSB connection: CL+/CL- LPB connection: MB/DB Configuration settings for OCI420 Getting the OCI420 to work properly can be a bit challenging if it is not already part of an existing LPB network. If you connect the OCI420 for the first time to your heater and have no other LPB heating device, you will most likely get \"error 81\" which indicates that there is a bus error. But don't worry, most likely it's just a matter of configuring a few parameters to get it going. For the LMU64, the corresponding parameter is 604 ( LPBKonfig0 ). It needs to be set as follows for using BSB-LAN as the only device connected to the OCI420: 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Then you need to set the LPB address of the OCI420 in parameters 605 (needs to be set to 1) and 606 (needs to be set to 0). Afterwards, there should be no more error message and the red LED of the OCI420 should blink in regular intervals and you are ready to connect and use BSB-LAN. Attention: If the OCI420 is already connected to another LPB device, do not make any changes here and rather connect BSB-LAN to the other LPB device. It should work without any adjustments. List of working controller models There are a many more controllers that are likely to work with BSB-LAN. Look out for these Siemens controller models in your heating system: AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"Supported Heating Systems"},{"location":"supported_heating_systems.html#supported-heating-systems","text":"BSB-LAN supports heating systems that communicate using either the BSB (Boiler System Bus) , the LPB (Local Process Bus) or the PPS (Punkt-zu-Punkt-Schnittstelle) . These controllers are usually manufactured by Siemens, older controllers might still bear the company name \"Landis & Stafea\" or \"Landis & Gyr\". We have compiled a list of working models from various heating system manufacturers who have been confirmed working with BSB-LAN, although there is no 100% guarantee that the manufacturers keep the model name but change the controller to a different system. So always make sure to double-check that the right connectors are available. Here are a few examples from heating controllers and the connectors that are used to connect to BSB-LAN. Some connectors have three pins, some have two pins. If there are three pins, make sure you choose the correct two (CL+ and CL-) as the third von (G+) is to provide background lighting for the room unit. It won't harm BSB-LAN, but it might be misleading because BSB-LAN's LED will be on even though it's not connected to the right pin. By the way: If you only have one connector and it is already occupied with a room unit, it's no problem to add BSB-LAN to the same connector. Just be careful when adding the wires for BSB-LAN. Controller Image Remarks LMS14 LMS15 BSB connection: + = Left - = Center LMS14 LMS15 BSB connection: CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista BSB connection: Terminal block M2 Pin 2: CL- Pin 3: CL+ See detailed instructions here for Baxi Luna Platinum . LMU54 LMU64 LPB connection: via additional OCI420 plugin, see details below . LMU74 LMU75 BSB connection: + = Top - = Center LPB connection: via additional OCI420 plugin RVA53 PPS connection: A6/MD RVA63 LPB connection: MB/DB PPS connection: A6/MD RVP54 PPS connection: A6/M RVS13 BSB connection: CL+/CL- RVS21 BSB connection via connector X86 + = rightmost pin - = second pin from right RVS21 with AVS55 AVS55 extension module, sitting on top of RVS21. BSB connection either via connector X86: + = rightmost pin - = second pin from right or via connector X150: + = topmost pin - = second pin from top RVS23 LPB connection: LPB/M RVS41 BSB connection: CL+/CL- LPB connection: MB/DB RVS43 LOGON B BSB connection: CL+/CL- LPB connection: MB/DB RVS46 ISR-ZR1 BSB connection: CL+/CL- LPB connection: MB/DB RVS46 BSB connection: CL+/CL- LPB connection: MB/DB RVS51 BSB connection: CL+/CL- RVS53 BSB connection: CL+/CL- RVS61 BSB connection: CL+/CL- LPB connection: MB/DB RVS63 BSB connection: CL+/CL- LPB connection: MB/DB RVS65 BSB connection: CL+/CL- LPB connection: MB/DB","title":"Supported heating systems"},{"location":"supported_heating_systems.html#configuration-settings-for-oci420","text":"Getting the OCI420 to work properly can be a bit challenging if it is not already part of an existing LPB network. If you connect the OCI420 for the first time to your heater and have no other LPB heating device, you will most likely get \"error 81\" which indicates that there is a bus error. But don't worry, most likely it's just a matter of configuring a few parameters to get it going. For the LMU64, the corresponding parameter is 604 ( LPBKonfig0 ). It needs to be set as follows for using BSB-LAN as the only device connected to the OCI420: 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Then you need to set the LPB address of the OCI420 in parameters 605 (needs to be set to 1) and 606 (needs to be set to 0). Afterwards, there should be no more error message and the red LED of the OCI420 should blink in regular intervals and you are ready to connect and use BSB-LAN. Attention: If the OCI420 is already connected to another LPB device, do not make any changes here and rather connect BSB-LAN to the other LPB device. It should work without any adjustments.","title":"Configuration settings for OCI420"},{"location":"supported_heating_systems.html#list-of-working-controller-models","text":"There are a many more controllers that are likely to work with BSB-LAN. Look out for these Siemens controller models in your heating system: AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"List of working controller models"},{"location":"supported_models.html","text":"Supported models from various manufacturers This is a list of models from various manufacturers that have in the past been tested with BSB-LAN. Please take note that manufacturers may at any time change the technical specifications, including the controller, without changing the model name (or just a very minor part of it). Where we get to know about such a change, we will list it here, but obviously this list is not complete, in both ways. So in any case, please do a final check yourself if your heating system has the necessary connectors to use BSB-LAN. Br\u00f6tje: BBK, BBS, BGB, BLW ( see exceptions below! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( see exceptions below! ), WMC, WMS, WOB Not working Br\u00f6tje models: BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch: heat pumps with RVS controller type Elco: Aerotop, Aquatop, Rendamax, Straton, Thision ( not Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG: QR Atlantic: Alf\u00e9a, Axeo, Excellia, Extensa, Hynea hybrid duo gaz, Navistem, Perfinox, Varmax Austria Email: LWP, LWPK Baxi: Luna Platinum, Luna Duo, Block Kondens Boesch: SLS Chapp\u00e9e: Luna, Klista CitrinSolar: proClima CTA: Optiheat CTC: 380 IC Deville: 9942, 9981 Eco: AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar: Ecodense WT-S 45 EVI Heat: Combi-7 Fernw\u00e4rme: RVD230 Froeling: Rendagas Plus Fujitsu Waterstage: Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox: Thrs General: (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald: Greenheat GS: UnoTec Hansa: SND Herz: Commotherm 5 DeLuxe Interdomo: Domostar GBK 25H/SH MAN/MHG: Ecostar 200 MHG: ecoWP Xe, Procon E Oilon: SH, SHx Olymp: SHS, WHS Palazzetti: Choro Sistema Calore Sieger: TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC): STC9 Sixmadun: TG11BE SSP: Proburner Sunex: Nexus Termomax: Termo \u00d6V Thermics: Energie Thermital: TBox Clima TOP Tifell: Biofell Viessmann: Vitotwin 300-W Wamak: AiWa, DB Weishaupt: WTU","title":"Supported models from various manufacturers"},{"location":"supported_models.html#supported-models-from-various-manufacturers","text":"This is a list of models from various manufacturers that have in the past been tested with BSB-LAN. Please take note that manufacturers may at any time change the technical specifications, including the controller, without changing the model name (or just a very minor part of it). Where we get to know about such a change, we will list it here, but obviously this list is not complete, in both ways. So in any case, please do a final check yourself if your heating system has the necessary connectors to use BSB-LAN. Br\u00f6tje: BBK, BBS, BGB, BLW ( see exceptions below! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( see exceptions below! ), WMC, WMS, WOB Not working Br\u00f6tje models: BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch: heat pumps with RVS controller type Elco: Aerotop, Aquatop, Rendamax, Straton, Thision ( not Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG: QR Atlantic: Alf\u00e9a, Axeo, Excellia, Extensa, Hynea hybrid duo gaz, Navistem, Perfinox, Varmax Austria Email: LWP, LWPK Baxi: Luna Platinum, Luna Duo, Block Kondens Boesch: SLS Chapp\u00e9e: Luna, Klista CitrinSolar: proClima CTA: Optiheat CTC: 380 IC Deville: 9942, 9981 Eco: AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar: Ecodense WT-S 45 EVI Heat: Combi-7 Fernw\u00e4rme: RVD230 Froeling: Rendagas Plus Fujitsu Waterstage: Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox: Thrs General: (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald: Greenheat GS: UnoTec Hansa: SND Herz: Commotherm 5 DeLuxe Interdomo: Domostar GBK 25H/SH MAN/MHG: Ecostar 200 MHG: ecoWP Xe, Procon E Oilon: SH, SHx Olymp: SHS, WHS Palazzetti: Choro Sistema Calore Sieger: TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC): STC9 Sixmadun: TG11BE SSP: Proburner Sunex: Nexus Termomax: Termo \u00d6V Thermics: Energie Thermital: TBox Clima TOP Tifell: Biofell Viessmann: Vitotwin 300-W Wamak: AiWa, DB Weishaupt: WTU","title":"Supported models from various manufacturers"},{"location":"troubleshooting.html","text":"Troubleshooting BSB-LAN tries to make accessing your heating system as easy as possible, but there are always things that can go wrong. If you still have a problem after reading this document as well as the FAQ , please open up a bug report on the project's GitHub page and make sure that you provide us with all the necessary log files and further required details, especially from the Serial Monitor (or SerMo in short). Before doing so, however, make sure that you install the most recent version of BSB-LAN from the master repository (not the release version), even if yours is \"just\" a few days old. Still, a lot could have happned since then :)! Using the Serial Monitor Access the Serial Monitor by going to Tools/Serial Monitor in the Arduino IDE. Set the transmission speed to 115200 at the top right corner of the serial monitor window. Make sure you copy the messages right from the moment your microcontroller boots (indicated by the READY message) until the moment you encounter the problem. Please do not send screenshots, only plain text files. The Serial Monitor in the Arduino IDE currently has a bug that allows you to only copy those parts of the Serial Monitor messages that you can see on the screen. Although this means that copying larger portions of log messages is tedious, you still have to provide the complete log in order to get support. Increasing the size of the Serial Monitor window helps a little. Compiling fails: \"Sketch too big\" Select the Minimal SPIFFS partition scheme in the Arduino IDE under Tools/Partition Scheme . Attention: This setting is reset to default when updating the ESP32 framework! If you are using over-the-air updates, you have to flash the software once via USB after changing the partition scheme before OTA updates will work again. No access to web-interface anymore If you have changed the settings in such a way that you cannot access the web-interface anymore, there are two ways to restore the system: If you can flash the device: Configure BSB_LAN_config.h with correct, working settings. Set UseEEPROM to 0 . Flash BSB-LAN onto the microcontroller. You can now access BSB-LAN. Go to \"Settings\" and save the settings. This will store the working settings to the EEPROM. Now edit BSB_LAN_config.h again (!) and set UseEEPROM to 1 and flash BSB-LAN again to the microcontroller. Only now will BSB-LAN read and use the settings from the EEPROM, so you can make further changes in the web-interface. If you cannot flash the device: If you cannot flash the device on site, you can reset BSB-LAN to the last BSB_LAN_config.h setting by connecting two pins before and during booting the microcontroller : ESP32-Olimex: Connect pins 34 and 3V3. ESP32-NodeMCU: Connect pins 21 and 3V3. Arduino Due: Connect pins 31 and 33. If the pins were successfully connected, the built-in LED of the microcontroller will flash slowly for four seconds. Afterwards open the configuration in the web-interface, check all settings in the configuration and save them. This will store the working settings to the EEPROM. Temporary access point on an ESP32-based microcontroller On an ESP32-based microcontroller, BSB-LAN will set up its own wireless access point named BSB-LAN if it cannot connect to any network. In this casee, you can connect to this access point with the password BSB-LPB-PPS-LAN and access BSB-LAN via the IP address http://192.168.4.1 and see if you can fix the configuration this way. Keep in mind that if you have set a passkey or HTTP username and password, these are still required if these details are stored in EEPROM or BSB_LAN_config.h . I can only access very few parameters via BSB/LPB! Initially, BSB-LAN only comes with a small set of parameters that work on (almost) every heating system. You need to get a device specific parameter list . Category list suddenly so small BSB-LAN needs to detect the heating system's controller to determine the categories to display. If BSB-LAN is not connected to the controller or the detection otherwise fails, only a few universal categories are displayed. Cannot read any parameters / device family is 0 Wrong bus type (BSB instead of LPB or vice versa). If the red LED of the adapter is not on (and ideally slightly flickering), there is a problem with the wiring between the adapter and the heating system. The red LED will come one once the adapter is connected correctly, even if the BSB-LAN adapter isn't even connected to the microcontroller! No data even though the adapter's red LED is on Make sure the adapter is connected to CL+/CL- and not to the third (G+) pin: G+ will drive the LED, but it's not a data line. Make sure you have powered on the microcontroller . You may think that the heating system powers the microcontroller because the LED on the BSB-LAN adapter is on, but it doesn't. You need to power it separately. With the adapter for the Olimex microcontrollers: Make sure that the BSB-LAN adapter board sits exactly in the center of the UEXT connector. It will still fit in, if it's shifted one pin left or right, but it won't work. Make sure the RX/TX pins are set/detected correctly. The startup sequence in the Serial Monitor will show you what pins have are used or have been auto-detected. No or unreliable network connection Try powering the microcontroller via USB from a laptop. We have had many cases where power supplies were unreliable despite having sufficient ratings. Look at the Serial Monitor log to check if the microcontroller could acquire an IP address. If not, then your network settings or physical connection may be faulty. No connection to hidden WiFi network possible Yes, that is a known restriction. The only way to do that is to set the BSSID explicitly in BSB_LAN_config.h . Room temperature (or any other parameter) cannot be set Check BSB-LAN's settings and make sure that write access is enabled and set to standard or complete . Web-interface freezes when making new connection BSB-LAN is not a multi-tasking system. This means it can attend to one task at a time. So even if a URL command is aborted (by closing the browser window), BSB-LAN might not detect this and only start serving new requests once the previous one is finished. The Serial Monitor is not showing readable data Make sure the speed is set correctly to 115200 bps. Make sure the correct port is selected.","title":"Troubleshooting"},{"location":"troubleshooting.html#troubleshooting","text":"BSB-LAN tries to make accessing your heating system as easy as possible, but there are always things that can go wrong. If you still have a problem after reading this document as well as the FAQ , please open up a bug report on the project's GitHub page and make sure that you provide us with all the necessary log files and further required details, especially from the Serial Monitor (or SerMo in short). Before doing so, however, make sure that you install the most recent version of BSB-LAN from the master repository (not the release version), even if yours is \"just\" a few days old. Still, a lot could have happned since then :)!","title":"Troubleshooting"},{"location":"troubleshooting.html#using-the-serial-monitor","text":"Access the Serial Monitor by going to Tools/Serial Monitor in the Arduino IDE. Set the transmission speed to 115200 at the top right corner of the serial monitor window. Make sure you copy the messages right from the moment your microcontroller boots (indicated by the READY message) until the moment you encounter the problem. Please do not send screenshots, only plain text files. The Serial Monitor in the Arduino IDE currently has a bug that allows you to only copy those parts of the Serial Monitor messages that you can see on the screen. Although this means that copying larger portions of log messages is tedious, you still have to provide the complete log in order to get support. Increasing the size of the Serial Monitor window helps a little.","title":"Using the Serial Monitor"},{"location":"troubleshooting.html#compiling-fails-sketch-too-big","text":"Select the Minimal SPIFFS partition scheme in the Arduino IDE under Tools/Partition Scheme . Attention: This setting is reset to default when updating the ESP32 framework! If you are using over-the-air updates, you have to flash the software once via USB after changing the partition scheme before OTA updates will work again.","title":"Compiling fails: \"Sketch too big\""},{"location":"troubleshooting.html#no-access-to-web-interface-anymore","text":"If you have changed the settings in such a way that you cannot access the web-interface anymore, there are two ways to restore the system: If you can flash the device: Configure BSB_LAN_config.h with correct, working settings. Set UseEEPROM to 0 . Flash BSB-LAN onto the microcontroller. You can now access BSB-LAN. Go to \"Settings\" and save the settings. This will store the working settings to the EEPROM. Now edit BSB_LAN_config.h again (!) and set UseEEPROM to 1 and flash BSB-LAN again to the microcontroller. Only now will BSB-LAN read and use the settings from the EEPROM, so you can make further changes in the web-interface. If you cannot flash the device: If you cannot flash the device on site, you can reset BSB-LAN to the last BSB_LAN_config.h setting by connecting two pins before and during booting the microcontroller : ESP32-Olimex: Connect pins 34 and 3V3. ESP32-NodeMCU: Connect pins 21 and 3V3. Arduino Due: Connect pins 31 and 33. If the pins were successfully connected, the built-in LED of the microcontroller will flash slowly for four seconds. Afterwards open the configuration in the web-interface, check all settings in the configuration and save them. This will store the working settings to the EEPROM. Temporary access point on an ESP32-based microcontroller On an ESP32-based microcontroller, BSB-LAN will set up its own wireless access point named BSB-LAN if it cannot connect to any network. In this casee, you can connect to this access point with the password BSB-LPB-PPS-LAN and access BSB-LAN via the IP address http://192.168.4.1 and see if you can fix the configuration this way. Keep in mind that if you have set a passkey or HTTP username and password, these are still required if these details are stored in EEPROM or BSB_LAN_config.h .","title":"No access to web-interface anymore"},{"location":"troubleshooting.html#i-can-only-access-very-few-parameters-via-bsblpb","text":"Initially, BSB-LAN only comes with a small set of parameters that work on (almost) every heating system. You need to get a device specific parameter list .","title":"I can only access very few parameters via BSB/LPB!"},{"location":"troubleshooting.html#category-list-suddenly-so-small","text":"BSB-LAN needs to detect the heating system's controller to determine the categories to display. If BSB-LAN is not connected to the controller or the detection otherwise fails, only a few universal categories are displayed.","title":"Category list suddenly so small"},{"location":"troubleshooting.html#cannot-read-any-parameters-device-family-is-0","text":"Wrong bus type (BSB instead of LPB or vice versa). If the red LED of the adapter is not on (and ideally slightly flickering), there is a problem with the wiring between the adapter and the heating system. The red LED will come one once the adapter is connected correctly, even if the BSB-LAN adapter isn't even connected to the microcontroller!","title":"Cannot read any parameters / device family is 0"},{"location":"troubleshooting.html#no-data-even-though-the-adapters-red-led-is-on","text":"Make sure the adapter is connected to CL+/CL- and not to the third (G+) pin: G+ will drive the LED, but it's not a data line. Make sure you have powered on the microcontroller . You may think that the heating system powers the microcontroller because the LED on the BSB-LAN adapter is on, but it doesn't. You need to power it separately. With the adapter for the Olimex microcontrollers: Make sure that the BSB-LAN adapter board sits exactly in the center of the UEXT connector. It will still fit in, if it's shifted one pin left or right, but it won't work. Make sure the RX/TX pins are set/detected correctly. The startup sequence in the Serial Monitor will show you what pins have are used or have been auto-detected.","title":"No data even though the adapter's red LED is on"},{"location":"troubleshooting.html#no-or-unreliable-network-connection","text":"Try powering the microcontroller via USB from a laptop. We have had many cases where power supplies were unreliable despite having sufficient ratings. Look at the Serial Monitor log to check if the microcontroller could acquire an IP address. If not, then your network settings or physical connection may be faulty.","title":"No or unreliable network connection"},{"location":"troubleshooting.html#no-connection-to-hidden-wifi-network-possible","text":"Yes, that is a known restriction. The only way to do that is to set the BSSID explicitly in BSB_LAN_config.h .","title":"No connection to hidden WiFi network possible"},{"location":"troubleshooting.html#room-temperature-or-any-other-parameter-cannot-be-set","text":"Check BSB-LAN's settings and make sure that write access is enabled and set to standard or complete .","title":"Room temperature (or any other parameter) cannot be set"},{"location":"troubleshooting.html#web-interface-freezes-when-making-new-connection","text":"BSB-LAN is not a multi-tasking system. This means it can attend to one task at a time. So even if a URL command is aborted (by closing the browser window), BSB-LAN might not detect this and only start serving new requests once the previous one is finished.","title":"Web-interface freezes when making new connection"},{"location":"troubleshooting.html#the-serial-monitor-is-not-showing-readable-data","text":"Make sure the speed is set correctly to 115200 bps. Make sure the correct port is selected.","title":"The Serial Monitor is not showing readable data"},{"location":"using.html","text":"Using BSB-LAN Controlling the heating system via the web-interface As a first step \u2013 or if you just want to turn your heating system on or off \u2013 you can simply open the BSB-LAN web-interface and go to the Settings menu. This will display a list of categories from your heating controller. You can click on each category and will get a list of corresponding parameters. If you see a Set button, it means the parameter can be changed, and clicking on the button will send the new value to the heater. If there is no Set button, the parameter is read-only and there is no way to change the parameter. Using BSB-LAN's URL commands Most of BSB-LAN's functionality can be controlled using URL commands. These are useful or even necessary when connecting BSB-LAN to a home automation system , but also provide access to functions not directly accessible via the web-interface. URL commands are called right after BSB-LAN's hostname and an (optional) passkey. So to get a list of categories, one would have to open the URL http://bsb-lan.local/K (or http://bsb-lan.local/1234/K if the passkey 1234 is in use). Querying and setting parameters table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 80%; } URL command Functionality /<x> Query setting of parameter <x> /<x>!<addr> Query setting of parameter <x> from controller at destination address <addr> /<x>/<y>/<z> Query settings of parameters <x> , <y> and <z> . Parameters can include ! to address different controllers. /<x>-<y> Query settings of parameters <x> to <y> /<x>!<addr>-<y> Query settings of parameters to from controller at destination address <addr> /K List all parameter categories from controller at default destination address /K!<addr> List all parameter categories from controller at destination address <addr> /K<x> Query all parameters of category <x> from controller at default destination address /K<x>!<addr> Query all parameters of category <x> from controller at destination address <addr> /S<x>=<y> Set parameter <x> from controller at default destination address to value . To set a parameter to --- (off/deactivated), just send an empty value: S<x>= /S<x>!<addy>=<y> Set parameter <x> from controller at destination address <addr> to value <y> . /I<x>=<y> Send value y as INF telegram to parameter <x> . So far only required with setting room temperature (parameters 10000 ff.). Configuration URL command Functionality /C Configuration /CO Dump BSB-LAN's configuration /P<x>,<y>,<z> Temporarily set bus type to <x> , own address to <y> and target address to <z> . /V<x> Enable ( 1 ) or disable ( 0 ) verbose output mode. Should remain enabled unless specifically instructed. Logging URL command Functionality /DG Graphical display (graph plot) of an active log file /D or /DD Dumps log file datalog.txt from storage. Contains the logged parameters and values when logging to SD card is active. /D<n> Dumps the most recent <n> calender days of the log file /D<a>,<b> Dumps data from log file between <a> and <b> . <a> and <b> have to be set in the format yyyy-mm-dd (e.g. /D2024-04-01,2024-04-30 ) /D0 Reset both log files datalog.txt and journal.txt and create new headers. Should be executed before first logging. /DK<n> Purges data older than <n> days from the log file /LN Forces logging irrespective of current interval and restarts the configured interval at this point of time /L=<x>,<y>,<z> Set logging interval to <x> seconds and (optionally) reset logging parameters to <y> , <z> etc. until reboot /L=0,0 Deactivate logging to storage until reboot /LB=<x> Log only broadcast telegrams ( 1 ) or all telegrams ( 0 ). Setting active until reboot. /LU=<x> Log only unknown bus telegrams ( 1 ) or all telegrams ( 0 ). Setting active until reboot. /A=0 Disable 24h average calculation until reboot /A=<x>,<y>,<z> Change 24h average value calculation to parameters <x> , <y> and <z> until reboot /B0 Reset stats for accumulated burner-runtime and -cycles /DD0 Remove log file datalog.txt only /DJ Dumps log file journal.txt from storage /DJ0 Remove log file journal.txt only /LD Disable logging of telegrams to journal.txt until reboot /LE Enable logging of telegrams to journal.txt Parameter information URL command Functionality /E<x> Displays parameter options of parameter <x> . Only available for option-type parameters such as data types VT_ENUM , VT_CUSTOM_ENUM , VT_BITS and VT_CUSTOM_BITS . /R<x> Query default setting of parameter <x> GPIO control URL command Functionality /G<x> Displays the actual state of GPIO pin <x> /G<x>=<y> Set GPIO pin <x> to HIGH ( <y> = 1 ) or LOW ( <y> = 0 ) JSON interface For a complete structure of the JSON API, please see here for the OpenAPI documentation . URL command Functionality /JQ=<x>,<y>,<z> Query parameters <x> , <y> and <z> and return a JSON structure /JQ Query parameters based on a received JSON structure via HTTP POST /JS Set parameters based on a received JSON structure via HTTP POST /JR<x> Query default value of parameter <x> and return a JSON structure /JK=ALL Dump parameter ranges for all available categories as JSON structure /JK=<x> Dump the parameter structure for all parameters of category <x> /JC=<x>,<y>,<z> Dump the parameter structure for parameters <x> , <y> and <z> . Same JSON structure as /JK=<x> . `/JC Dump the parameter structure for a parameter list received as a JSON structure via HTTP POST. /JB Backup of all writeable parameters received as a JSON structure that can be used to restore using /JS . /JB!<addr> Backup of all writeable parameters from controller at destination address <addr> in a JSON structure that can be used to write back using /JS . /JL Creates a JSON structure of BSB-LAN's configuration settings` /JW Writes configuration settings based on a JSON structure created by /JL /JI Dump runtime information of BSB-LAN as JSON structure` /JV Return the version of BSB-LAN's JSON-API as a JSON structure Misceallaneous URL command Functionality /M<x>!<y> Send ( <x>=1 ) or revoke ( <x>=0 ) MQTT auto-discovery messages for all parameters from controller at destination address <y> . /N Reset and reboot microcontroller (takes approx. 15 seconds) /NE Erase EEPROM and reboot the microcontroller. All configuration settings will subsequently be read from configuration file until set and saved again in the web-interface to be written to EEPROM. /QD Dump parameter structure from heating system /W With a preceding /W the URL commands C , S and Q return data without HTML header and footer (e.g.: /WC or /WS<x>=<y!z> ). Using the graphical plot functionality If logged data on storage (either SD card or internal flash) is available, the Display log file becomes clickable. By default, it will display the logged data in the browser. To access the logged data itself (in the file datalog.txt ), use the /D URL command mentioned above. By default, \"Display log file\" displays the log data of the most recent n calendar days ( n=DEFAULT_DAYS_TO_PLOT , configurable in BSB_LAN_config.h ). Subsequently, controls on the web page can be used to select a different range, depending on the data contained in the log file. Mouseover, click and mouse wheel actions within the graphical display provide various control options: Better legibility for value numbers with plot lines close to each other (mouseover on plot) Users can interactively highlight plot lines for improved overview (mouseover on legend entries) Users can interactively disable plot lines for improved overview and vertical scaling (click on legend entries) Zoom (mousewheel/pinch on plot) and pan capability (drag zoomed-in plot) For further processing, you can use this Python script that takes BSB-LAN's log output to create pivoted CSV files that can be used for more insightful diagrams.","title":"BSB-LAN's functions"},{"location":"using.html#using-bsb-lan","text":"","title":"Using BSB-LAN"},{"location":"using.html#controlling-the-heating-system-via-the-web-interface","text":"As a first step \u2013 or if you just want to turn your heating system on or off \u2013 you can simply open the BSB-LAN web-interface and go to the Settings menu. This will display a list of categories from your heating controller. You can click on each category and will get a list of corresponding parameters. If you see a Set button, it means the parameter can be changed, and clicking on the button will send the new value to the heater. If there is no Set button, the parameter is read-only and there is no way to change the parameter.","title":"Controlling the heating system via the web-interface"},{"location":"using.html#using-bsb-lans-url-commands","text":"Most of BSB-LAN's functionality can be controlled using URL commands. These are useful or even necessary when connecting BSB-LAN to a home automation system , but also provide access to functions not directly accessible via the web-interface. URL commands are called right after BSB-LAN's hostname and an (optional) passkey. So to get a list of categories, one would have to open the URL http://bsb-lan.local/K (or http://bsb-lan.local/1234/K if the passkey 1234 is in use).","title":"Using BSB-LAN's URL commands"},{"location":"using.html#querying-and-setting-parameters","text":"table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 80%; } URL command Functionality /<x> Query setting of parameter <x> /<x>!<addr> Query setting of parameter <x> from controller at destination address <addr> /<x>/<y>/<z> Query settings of parameters <x> , <y> and <z> . Parameters can include ! to address different controllers. /<x>-<y> Query settings of parameters <x> to <y> /<x>!<addr>-<y> Query settings of parameters to from controller at destination address <addr> /K List all parameter categories from controller at default destination address /K!<addr> List all parameter categories from controller at destination address <addr> /K<x> Query all parameters of category <x> from controller at default destination address /K<x>!<addr> Query all parameters of category <x> from controller at destination address <addr> /S<x>=<y> Set parameter <x> from controller at default destination address to value . To set a parameter to --- (off/deactivated), just send an empty value: S<x>= /S<x>!<addy>=<y> Set parameter <x> from controller at destination address <addr> to value <y> . /I<x>=<y> Send value y as INF telegram to parameter <x> . So far only required with setting room temperature (parameters 10000 ff.).","title":"Querying and setting parameters"},{"location":"using.html#configuration","text":"URL command Functionality /C Configuration /CO Dump BSB-LAN's configuration /P<x>,<y>,<z> Temporarily set bus type to <x> , own address to <y> and target address to <z> . /V<x> Enable ( 1 ) or disable ( 0 ) verbose output mode. Should remain enabled unless specifically instructed.","title":"Configuration"},{"location":"using.html#logging","text":"URL command Functionality /DG Graphical display (graph plot) of an active log file /D or /DD Dumps log file datalog.txt from storage. Contains the logged parameters and values when logging to SD card is active. /D<n> Dumps the most recent <n> calender days of the log file /D<a>,<b> Dumps data from log file between <a> and <b> . <a> and <b> have to be set in the format yyyy-mm-dd (e.g. /D2024-04-01,2024-04-30 ) /D0 Reset both log files datalog.txt and journal.txt and create new headers. Should be executed before first logging. /DK<n> Purges data older than <n> days from the log file /LN Forces logging irrespective of current interval and restarts the configured interval at this point of time /L=<x>,<y>,<z> Set logging interval to <x> seconds and (optionally) reset logging parameters to <y> , <z> etc. until reboot /L=0,0 Deactivate logging to storage until reboot /LB=<x> Log only broadcast telegrams ( 1 ) or all telegrams ( 0 ). Setting active until reboot. /LU=<x> Log only unknown bus telegrams ( 1 ) or all telegrams ( 0 ). Setting active until reboot. /A=0 Disable 24h average calculation until reboot /A=<x>,<y>,<z> Change 24h average value calculation to parameters <x> , <y> and <z> until reboot /B0 Reset stats for accumulated burner-runtime and -cycles /DD0 Remove log file datalog.txt only /DJ Dumps log file journal.txt from storage /DJ0 Remove log file journal.txt only /LD Disable logging of telegrams to journal.txt until reboot /LE Enable logging of telegrams to journal.txt","title":"Logging"},{"location":"using.html#parameter-information","text":"URL command Functionality /E<x> Displays parameter options of parameter <x> . Only available for option-type parameters such as data types VT_ENUM , VT_CUSTOM_ENUM , VT_BITS and VT_CUSTOM_BITS . /R<x> Query default setting of parameter <x>","title":"Parameter information"},{"location":"using.html#gpio-control","text":"URL command Functionality /G<x> Displays the actual state of GPIO pin <x> /G<x>=<y> Set GPIO pin <x> to HIGH ( <y> = 1 ) or LOW ( <y> = 0 )","title":"GPIO control"},{"location":"using.html#json-interface","text":"For a complete structure of the JSON API, please see here for the OpenAPI documentation . URL command Functionality /JQ=<x>,<y>,<z> Query parameters <x> , <y> and <z> and return a JSON structure /JQ Query parameters based on a received JSON structure via HTTP POST /JS Set parameters based on a received JSON structure via HTTP POST /JR<x> Query default value of parameter <x> and return a JSON structure /JK=ALL Dump parameter ranges for all available categories as JSON structure /JK=<x> Dump the parameter structure for all parameters of category <x> /JC=<x>,<y>,<z> Dump the parameter structure for parameters <x> , <y> and <z> . Same JSON structure as /JK=<x> . `/JC Dump the parameter structure for a parameter list received as a JSON structure via HTTP POST. /JB Backup of all writeable parameters received as a JSON structure that can be used to restore using /JS . /JB!<addr> Backup of all writeable parameters from controller at destination address <addr> in a JSON structure that can be used to write back using /JS . /JL Creates a JSON structure of BSB-LAN's configuration settings` /JW Writes configuration settings based on a JSON structure created by /JL /JI Dump runtime information of BSB-LAN as JSON structure` /JV Return the version of BSB-LAN's JSON-API as a JSON structure","title":"JSON interface"},{"location":"using.html#misceallaneous","text":"URL command Functionality /M<x>!<y> Send ( <x>=1 ) or revoke ( <x>=0 ) MQTT auto-discovery messages for all parameters from controller at destination address <y> . /N Reset and reboot microcontroller (takes approx. 15 seconds) /NE Erase EEPROM and reboot the microcontroller. All configuration settings will subsequently be read from configuration file until set and saved again in the web-interface to be written to EEPROM. /QD Dump parameter structure from heating system /W With a preceding /W the URL commands C , S and Q return data without HTML header and footer (e.g.: /WC or /WS<x>=<y!z> ).","title":"Misceallaneous"},{"location":"using.html#using-the-graphical-plot-functionality","text":"If logged data on storage (either SD card or internal flash) is available, the Display log file becomes clickable. By default, it will display the logged data in the browser. To access the logged data itself (in the file datalog.txt ), use the /D URL command mentioned above. By default, \"Display log file\" displays the log data of the most recent n calendar days ( n=DEFAULT_DAYS_TO_PLOT , configurable in BSB_LAN_config.h ). Subsequently, controls on the web page can be used to select a different range, depending on the data contained in the log file. Mouseover, click and mouse wheel actions within the graphical display provide various control options: Better legibility for value numbers with plot lines close to each other (mouseover on plot) Users can interactively highlight plot lines for improved overview (mouseover on legend entries) Users can interactively disable plot lines for improved overview and vertical scaling (click on legend entries) Zoom (mousewheel/pinch on plot) and pan capability (drag zoomed-in plot) For further processing, you can use this Python script that takes BSB-LAN's log output to create pivoted CSV files that can be used for more insightful diagrams.","title":"Using the graphical plot functionality"},{"location":"de/index.html","text":"Was ist BSB-LAN? BSB-LAN ist eine Software / Hardware-L\u00f6sung f\u00fcr den Zugriff auf den \"Boiler-System-Bus\" (BSB) , den \"Local-Process-Bus (LPB)\" und die \"Punkt-zu-Punkt-Schnittstelle\" (PPS) . Die BSB-LAN-Hardware ist f\u00fcr verschiedene ESP32 -basierte Mikrocontroller (ESP32 NodeMCU, Olimex EVB, Olimex POE-ISO) sowie f\u00fcr einen Arduino Due mit Ethernet-Shield erh\u00e4ltlich. Es erm\u00f6glicht den Zugriff auf Heizsysteme von Atlantic, Br\u00f6tje, Elco und vielen anderen Herstellern \u00fcber LAN/WLAN, sofern sie einen der unten aufgef\u00fchrten Siemens-Controller verwenden. BSB-LAN erm\u00f6glicht es dir, das Heizsystem zu \u00fcberwachen und zu steuern und beliebige Werte zu protokollieren. Dieses Projekt unterst\u00fctzt fast alle Parameter, die in Heizsystemen verf\u00fcgbar sind, und kann eine umfassendere und kosteng\u00fcnstigere Alternative zu OZW 672, OCI 700 oder Remocon Net B sein. Eine optionale Integration in bestehende Smart-Home-Systeme wie Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon oder EDOMI ist \u00fcber MQTT , JSON oder HTTP-Zugriff m\u00f6glich. Der Adapter kann auch als eigenst\u00e4ndiger Logger ohne LAN- oder Internetverbindung verwendet werden, wenn du eine microSD-Karte verwendest. Temperatur- und Feuchtigkeitssensoren k\u00f6nnen ebenfalls angeschlossen und deren Daten protokolliert und analysiert werden. Die M\u00f6glichkeit, deinen eigenen Code in die BSB-LAN-Software zu integrieren, bietet au\u00dferdem eine Vielzahl von Erweiterungsm\u00f6glichkeiten. Wo und wie fange ich an? Wenn du ein erfahrener Benutzer bist, kannst du direkt zu den Schnellstartanweisungen gehen. Wenn nicht (oder wenn du auf Probleme st\u00f6\u00dft), lies bitte weiter! Wird mein Heizsystem von BSB-LAN unterst\u00fctzt? Bitte gehe zur Liste der unterst\u00fctzten Heizsysteme . Wenn du bereits wei\u00dft, dass dein System unterst\u00fctzt wird, erfahre mehr \u00fcber den BSB-LAN-Adapter und wo du ihn bekommen kannst. Wenn du den Adapter bereits hast, m\u00f6chtest du vielleicht wissen, wie du den Adapter installierst . Wenn du den Adapter installiert hast, musst du BSB-LAN konfigurieren . Sobald alles eingerichtet ist, findest du heraus, wie du BSB-LAN verwendest oder mehr \u00fcber die M\u00f6glichkeiten erf\u00e4hrst, BSB-LAN in Home-Automation-Systeme zu integrieren . Wenn du BSB-LAN aktualisieren m\u00f6chtest und wissen m\u00f6chtest, was sich seit deiner letzten Installation ge\u00e4ndert hat, solltest du das ChangeLog \u00fcberpr\u00fcfen. Unsere Wiki-Seiten wachsen kontinuierlich und bieten Hintergrundwissen sowie spezielle Themen zu BSB-LAN und Heizsystemen im Allgemeinen. Wenn du auf Probleme st\u00f6\u00dft, wirf einen Blick auf die Seite zur Fehlerbehebung . Und bevor du jemand anderem irgendwelche Fragen stellst, schau dir zuerst unsere H\u00e4ufig gestellten Fragen (FAQ) an!","title":"\u00dcberblick"},{"location":"de/index.html#was-ist-bsb-lan","text":"BSB-LAN ist eine Software / Hardware-L\u00f6sung f\u00fcr den Zugriff auf den \"Boiler-System-Bus\" (BSB) , den \"Local-Process-Bus (LPB)\" und die \"Punkt-zu-Punkt-Schnittstelle\" (PPS) . Die BSB-LAN-Hardware ist f\u00fcr verschiedene ESP32 -basierte Mikrocontroller (ESP32 NodeMCU, Olimex EVB, Olimex POE-ISO) sowie f\u00fcr einen Arduino Due mit Ethernet-Shield erh\u00e4ltlich. Es erm\u00f6glicht den Zugriff auf Heizsysteme von Atlantic, Br\u00f6tje, Elco und vielen anderen Herstellern \u00fcber LAN/WLAN, sofern sie einen der unten aufgef\u00fchrten Siemens-Controller verwenden. BSB-LAN erm\u00f6glicht es dir, das Heizsystem zu \u00fcberwachen und zu steuern und beliebige Werte zu protokollieren. Dieses Projekt unterst\u00fctzt fast alle Parameter, die in Heizsystemen verf\u00fcgbar sind, und kann eine umfassendere und kosteng\u00fcnstigere Alternative zu OZW 672, OCI 700 oder Remocon Net B sein. Eine optionale Integration in bestehende Smart-Home-Systeme wie Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon oder EDOMI ist \u00fcber MQTT , JSON oder HTTP-Zugriff m\u00f6glich. Der Adapter kann auch als eigenst\u00e4ndiger Logger ohne LAN- oder Internetverbindung verwendet werden, wenn du eine microSD-Karte verwendest. Temperatur- und Feuchtigkeitssensoren k\u00f6nnen ebenfalls angeschlossen und deren Daten protokolliert und analysiert werden. Die M\u00f6glichkeit, deinen eigenen Code in die BSB-LAN-Software zu integrieren, bietet au\u00dferdem eine Vielzahl von Erweiterungsm\u00f6glichkeiten.","title":"Was ist BSB-LAN?"},{"location":"de/index.html#wo-und-wie-fange-ich-an","text":"Wenn du ein erfahrener Benutzer bist, kannst du direkt zu den Schnellstartanweisungen gehen. Wenn nicht (oder wenn du auf Probleme st\u00f6\u00dft), lies bitte weiter! Wird mein Heizsystem von BSB-LAN unterst\u00fctzt? Bitte gehe zur Liste der unterst\u00fctzten Heizsysteme . Wenn du bereits wei\u00dft, dass dein System unterst\u00fctzt wird, erfahre mehr \u00fcber den BSB-LAN-Adapter und wo du ihn bekommen kannst. Wenn du den Adapter bereits hast, m\u00f6chtest du vielleicht wissen, wie du den Adapter installierst . Wenn du den Adapter installiert hast, musst du BSB-LAN konfigurieren . Sobald alles eingerichtet ist, findest du heraus, wie du BSB-LAN verwendest oder mehr \u00fcber die M\u00f6glichkeiten erf\u00e4hrst, BSB-LAN in Home-Automation-Systeme zu integrieren . Wenn du BSB-LAN aktualisieren m\u00f6chtest und wissen m\u00f6chtest, was sich seit deiner letzten Installation ge\u00e4ndert hat, solltest du das ChangeLog \u00fcberpr\u00fcfen. Unsere Wiki-Seiten wachsen kontinuierlich und bieten Hintergrundwissen sowie spezielle Themen zu BSB-LAN und Heizsystemen im Allgemeinen. Wenn du auf Probleme st\u00f6\u00dft, wirf einen Blick auf die Seite zur Fehlerbehebung . Und bevor du jemand anderem irgendwelche Fragen stellst, schau dir zuerst unsere H\u00e4ufig gestellten Fragen (FAQ) an!","title":"Wo und wie fange ich an?"},{"location":"de/bsb-lan_adapter.html","text":"Der BSB-LAN-Adapter Adapterplatinen verf\u00fcgbar \u2013 schreib' Frederik einfach eine E-Mail an bsb(\u00e4t)code-it.de (auf Deutsch oder Englisch) f\u00fcr weitere Details. Um dein Heizsystem mit einem Mikrocontroller zu verbinden, ben\u00f6tigst du eine Adapterplatine, die die notwendige Logik-Pegelumwandlung vornimmt: Der Adapter wird dann direkt auf den Mikrocontroller gesteckt, entweder unter die Pins des ESP32-NodeMCU oder auf den UEXT-Anschluss des Olimex: Die beiden verschiedenen Arten von ESP32-Adaptern (Olimex und ESP32-NodeMCU) unterscheiden sich nur in der Position ihrer Anschl\u00fcsse, die anderen Teile der Platine sind identisch. Die Arduino Due-Platine enth\u00e4lt einen EEPROM-Chip, da die Due-Platine keinen integrierten EEPROM hat. Daher kannst du die Arduino Due-Platine auf einem ESP32-Mikrocontroller wiederverwenden (wenn du die richtigen Pins mit Dr\u00e4hten verbindest), aber du kannst keinen Adapter f\u00fcr den ESP32 auf einem Arduino Due verwenden. Geeignete Mikrocontroller BSB-LAN kann auf drei verschiedenen Arten von Mikrocontrollern installiert werden: ESP32-Olimex ESP32-NodeMCU (nur 30-Pin-Version!) Arduino Due Olimex produziert mehrere Arten von Platinen: Wir empfehlen entweder die Olimex ESP32-EVB oder die Olimex ESP32-POE-ISO . Die einfache POE-Version (ohne \"ISO\") wird nicht empfohlen, da sie keine gleichzeitige Verbindung mit PoE-Ethernet und USB zul\u00e4sst. Der Arduino Due ben\u00f6tigt ein Ethernet Shield , um auf das lokale Netzwerk zuzugreifen. Jeder der verschiedenen Controller hat seine Vor- und Nachteile: Funktionalit\u00e4t ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Over-the-air-aktualisierbar X X X - Integrierte microSD-Karte X X - - Zug\u00e4ngliche GPIOs 2 (GPIO13/16) einige einige viele","title":"Der BSB-LAN Adapter"},{"location":"de/bsb-lan_adapter.html#der-bsb-lan-adapter","text":"","title":"Der BSB-LAN-Adapter"},{"location":"de/bsb-lan_adapter.html#adapterplatinen-verfugbar-schreib-frederik-einfach-eine-e-mail-an-bsbatcode-itde-auf-deutsch-oder-englisch-fur-weitere-details","text":"Um dein Heizsystem mit einem Mikrocontroller zu verbinden, ben\u00f6tigst du eine Adapterplatine, die die notwendige Logik-Pegelumwandlung vornimmt: Der Adapter wird dann direkt auf den Mikrocontroller gesteckt, entweder unter die Pins des ESP32-NodeMCU oder auf den UEXT-Anschluss des Olimex: Die beiden verschiedenen Arten von ESP32-Adaptern (Olimex und ESP32-NodeMCU) unterscheiden sich nur in der Position ihrer Anschl\u00fcsse, die anderen Teile der Platine sind identisch.","title":"Adapterplatinen verf\u00fcgbar \u2013 schreib' Frederik einfach eine E-Mail an bsb(\u00e4t)code-it.de (auf Deutsch oder Englisch) f\u00fcr weitere Details."},{"location":"de/bsb-lan_adapter.html#die-arduino-due-platine-enthalt-einen-eeprom-chip-da-die-due-platine-keinen-integrierten-eeprom-hat-daher-kannst-du-die-arduino-due-platine-auf-einem-esp32-mikrocontroller-wiederverwenden-wenn-du-die-richtigen-pins-mit-drahten-verbindest-aber-du-kannst-keinen-adapter-fur-den-esp32-auf-einem-arduino-due-verwenden","text":"","title":"Die Arduino Due-Platine enth\u00e4lt einen EEPROM-Chip, da die Due-Platine keinen integrierten EEPROM hat. Daher kannst du die Arduino Due-Platine auf einem ESP32-Mikrocontroller wiederverwenden (wenn du die richtigen Pins mit Dr\u00e4hten verbindest), aber du kannst keinen Adapter f\u00fcr den ESP32 auf einem Arduino Due verwenden."},{"location":"de/bsb-lan_adapter.html#geeignete-mikrocontroller","text":"BSB-LAN kann auf drei verschiedenen Arten von Mikrocontrollern installiert werden: ESP32-Olimex ESP32-NodeMCU (nur 30-Pin-Version!) Arduino Due Olimex produziert mehrere Arten von Platinen: Wir empfehlen entweder die Olimex ESP32-EVB oder die Olimex ESP32-POE-ISO . Die einfache POE-Version (ohne \"ISO\") wird nicht empfohlen, da sie keine gleichzeitige Verbindung mit PoE-Ethernet und USB zul\u00e4sst. Der Arduino Due ben\u00f6tigt ein Ethernet Shield , um auf das lokale Netzwerk zuzugreifen. Jeder der verschiedenen Controller hat seine Vor- und Nachteile: Funktionalit\u00e4t ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Over-the-air-aktualisierbar X X X - Integrierte microSD-Karte X X - - Zug\u00e4ngliche GPIOs 2 (GPIO13/16) einige einige viele","title":"Geeignete Mikrocontroller"},{"location":"de/bus_systems.html","text":"Der BSB/LPB/PPS-Bus Entwickelt Ende des letzten Jahrtausends auf Basis des BatiBUS (weitere Informationen findest du hier und hier ), verwenden viele Siemens-Heizungssteuerungen immer noch den gleichen physischen Bus, um mit Raumger\u00e4ten und anderen Heizger\u00e4ten zu \"kommunizieren\". Auch wenn eine Busgeschwindigkeit von nur 4800 Bit pro Sekunde heute anachronistisch erscheinen mag, bietet sie immer noch ein stabiles und robustes \u00dcbertragungsprotokoll, das auch heute noch v\u00f6llig ausreichend ist, wenn es darum geht, kurze Nachrichten von einigen Dutzend Bytes \u00fcber Leitungen zu senden, die manchmal bis zu einem Kilometer lang sind. Die Bus-Topologie erm\u00f6glicht es dir au\u00dferdem, BSB-LAN an jedem beliebigen Punkt anzuschlie\u00dfen: Am Raumger\u00e4t, an der Heizungsanlage oder \u00fcberall dort, wo die Busleitungen verf\u00fcgbar sind. Du kannst sogar die beiden Dr\u00e4hte f\u00fcr BSB-LAN in einem bereits \"besetzten\" Steckplatz hinzuf\u00fcgen, ohne das andere Ger\u00e4t zu besch\u00e4digen (vorausgesetzt, die Installation ist ordnungsgem\u00e4\u00df). Auf derselben physischen Ebene bieten drei Bussysteme, BSB, LPB und PPS, L\u00f6sungen f\u00fcr unterschiedliche Aufgaben, wobei BSB und LPB immer vorgezogen werden sollten, wenn sie verf\u00fcgbar sind. PPS bietet jedoch in der Regel eine ausreichende Anzahl an Parametern f\u00fcr den durchschnittlichen Benutzer. BSB-LAN kann auf jedem dieser Busse ausgef\u00fchrt werden und der Wechsel zwischen ihnen ist einfach durch \u00c4ndern einiger Einstellungen m\u00f6glich. Der Heizungsbus (BSB) BSB ist das am h\u00e4ufigsten verwendete Bussystem in Siemens-Steuerungen der letzten 10-15 Jahre. Es ist der Nachfolger des PPS-Systems, mit dem es die gleichen physikalischen Parameter teilt, aber viel vielseitiger ist: Anstatt nur einige Dutzend Parameter kann es auf Hunderte von Parametern zugreifen und diese in verschiedene Kategorien einteilen, um die Navigation zu erleichtern. Es handelt sich um ein transaktionsbasiertes Protokoll, bei dem die meisten Nachrichten von einem Ger\u00e4t an ein anderes gesendet werden und der Empf\u00e4nger eine Art Feedback gibt, z. B. ob die Aufgabe abgeschlossen werden konnte oder ob sie ung\u00fcltige Daten enthielt. Obwohl BSB in der Lage ist, mehrere Ger\u00e4te auf dem Bus anzusprechen, wird es nicht in Systemen mit mehr als einem Heizger\u00e4t verwendet. Das Heizger\u00e4t hat immer die ID 0 , die Anzeigeeinheit an der Heizungsanlage hat die ID 10 (oder 0x0A in hexadezimal) und die Standard-Raumger\u00e4t hat die ID 6 . BSB-LAN hat die ID 66 oder 0x42 in hexadezimal. Raumger\u00e4te, die \"BSB sprechen\", sind zum Beispiel QAA55 und QAA75. Der lokale Prozessbus (LPB) LPB wurde ungef\u00e4hr zur gleichen Zeit wie PPS eingef\u00fchrt, das es in Bezug auf die Kommunikation mit anderen Heizger\u00e4ten erg\u00e4nzte: W\u00e4hrend PPS zur Kommunikation mit dem Raumger\u00e4t verwendet wurde, wurde LPB verwendet, um Befehle von einem Haupt-Heizger\u00e4t an ein oder mehrere Hilf-Heizger\u00e4te zu senden, beispielsweise in einer Kaskaden-Konfiguration. Zu dieser Zeit bezogen sich die meisten \u00fcber LPB \u00fcbertragenen Informationen auf die internen Abl\u00e4ufe der Heizungsanlage (wie Sensordaten oder interne Solltemperaturen), w\u00e4hrend die f\u00fcr den Benutzer relevanten Parameter (wie z. B. die Komfort-Soll-Raumtemperatur) nur \u00fcber PPS verf\u00fcgbar waren. Heutzutage bieten Heizger\u00e4te, die sowohl LPB als auch BSB unterst\u00fctzen, die gleichen Parameter-Daten auf beiden Bussystemen an. LPB verwendet ein spezifisches Adressierungsschema mit Segmenten und Ger\u00e4ten. Jedes Segment von 0 bis 15 kann bis zu 15 Ger\u00e4te (von 1 bis 15) enthalten. Beim Schreiben dieser Adressen werden Segment und Ger\u00e4t durch einen Doppelpunkt getrennt: 00:01 oder 04:03 . Um die segmentbasierte Adresse in die f\u00fcr BSB-LAN erforderliche Ziel-ID umzuwandeln, wird folgende Formel verwendet: SEGMENT mal 16 plus GER\u00c4T minus eins. Beispiel: Ger\u00e4t 3 im Segment 4 entspricht 4 * 16 + 3 - 1 = 66. Die Haupt-Heizungsanlage ist per Definition 00:01 , was einer Ziel-ID 0 entspricht. Um mehr \u00fcber das LPB-System und seine Implementierung zu erfahren, kannst du auf diese beiden Dokumente aus den sp\u00e4ten 1990er Jahren zur\u00fcckgreifen: Eines behandelt die grundlegenden Systemdaten und die Konzeptionierung eines LPB-Netzwerks, das andere befasst sich mit den grundlegenden technischen Daten und enth\u00e4lt Details zu Kabell\u00e4ngen und -durchmessern usw. Mit Ausnahme einiger Weishaut-Heizger\u00e4te sind Raumger\u00e4te nicht \u00fcber LPB mit der Heizungsanlage verbunden. Neuere Modelle verwenden f\u00fcr diese Aufgabe BSB, w\u00e4hrend \u00e4ltere Modelle entweder PPS oder in einigen F\u00e4llen auch OpenTherm verwenden. Die Punkt-zu-Punkt-Schnittstelle (PPS) Die Punkt-zu-Punkt-Schnittstelle (PPS, abgeleitet vom deutschen Begriff \"Punkt-zu-Punkt-Schnittstelle\") ist auf der physischen Ebene mit den anderen Systemen kompatibel, aber nicht in der Art und Weise, wie Nachrichten-Telegramme ausgetauscht werden. W\u00e4hrend BSB und LPB miteinander kommunizieren, indem sie Telegramme senden und deren Empfang best\u00e4tigen, wird PPS vom Heizger\u00e4t dominiert. Das Heizger\u00e4t sendet kontinuierlich seine Daten an das Raumger\u00e4t und teilt diesem mit, wann und welche Art von Informationen es senden soll. Es kann also bis zu einigen Minuten dauern, bis ein in BSB-LAN eingestellter Wert tats\u00e4chlich vom Heizsystem angefordert und dort angezeigt wird. Es handelt sich au\u00dferdem um ein sehr zeitkritisches Protokoll, sodass andere Aufgaben, die BSB-LAN erledigen soll, zu einer vor\u00fcbergehenden Unterbrechung und m\u00f6glicherweise zu einer Fehlermeldung auf der Heizungsanlage f\u00fchren k\u00f6nnen. Allerdings sollte sich dies nach kurzer Zeit von selbst beheben, wenn die beiden Komponenten wieder miteinander \"kommunizieren\". Im Gegensatz zu BSB und LPB werden \u00c4nderungen, die in BSB-LAN vorgenommen werden, nicht sofort wirksam. \u00c4nderungen von Werten, beispielsweise der Komfort-Soll-Raumtemperatur, werden zun\u00e4chst intern in BSB-LAN gespeichert und erst an die Heizungsanlage gesendet, wenn diese das Raumger\u00e4t (d. h. BSB-LAN) dazu auffordert. Dies kann bis zu einer Minute dauern, daher sollte man nicht verwirrt sein, wenn Einstellungen nicht sofort auf dem Heizger\u00e4t erscheinen, wie es bei BSB und LPB der Fall ist. Mit PPS kann BSB-LAN in zwei Modi betrieben werden: entweder passives Abh\u00f6ren oder als Raumger\u00e4t. Im Passivmodus kann BSB-LAN nur den Datenaustausch zwischen dem Raumger\u00e4t und dem Heizger\u00e4t mith\u00f6ren. Es ist nicht m\u00f6glich, eigene Daten zu senden, da diese sofort von den gleichen Daten \u00fcberschrieben w\u00fcrden, die vom Raumger\u00e4t kommen. Um Parameterdaten an die Heizungsanlage zu senden, muss BSB-LAN im \"Raumger\u00e4t\"-Modus ausgef\u00fchrt werden, was bedeutet, dass alle Raumger\u00e4te von der Heizungsanlage entfernt werden m\u00fcssen. In diesem Fall ist es besonders wichtig, regelm\u00e4\u00dfig einen Raumtemperaturwert an BSB-LAN zu senden, der diesen Wert dann an das Heizger\u00e4t weiterleitet. Nur wenn der Heizk\u00f6rper ausschlie\u00dflich auf der Au\u00dfentemperatur basiert, kann dieser Wert ignoriert werden. BSB-LAN speichert einige Werte in seinem nicht-fl\u00fcchtigen EEPROM, aber einige Werte m\u00fcssen nach einem Neustart neu eingestellt werden, wie z. B. die Raumtemperatur-Soll-Einstellung. Dies verhindert, dass ein ung\u00fcltig gewordener Parameterwert gespeichert und gesendet wird, nur weil er im EEPROM gespeichert ist. Raumger\u00e4te, die h\u00e4ufig mit Heizungsanlagen verwendet werden, die PPS unterst\u00fctzen, sind QAA50 und QAA70.","title":"Der BSB/LPB/PPS Bus"},{"location":"de/bus_systems.html#der-bsblpbpps-bus","text":"Entwickelt Ende des letzten Jahrtausends auf Basis des BatiBUS (weitere Informationen findest du hier und hier ), verwenden viele Siemens-Heizungssteuerungen immer noch den gleichen physischen Bus, um mit Raumger\u00e4ten und anderen Heizger\u00e4ten zu \"kommunizieren\". Auch wenn eine Busgeschwindigkeit von nur 4800 Bit pro Sekunde heute anachronistisch erscheinen mag, bietet sie immer noch ein stabiles und robustes \u00dcbertragungsprotokoll, das auch heute noch v\u00f6llig ausreichend ist, wenn es darum geht, kurze Nachrichten von einigen Dutzend Bytes \u00fcber Leitungen zu senden, die manchmal bis zu einem Kilometer lang sind. Die Bus-Topologie erm\u00f6glicht es dir au\u00dferdem, BSB-LAN an jedem beliebigen Punkt anzuschlie\u00dfen: Am Raumger\u00e4t, an der Heizungsanlage oder \u00fcberall dort, wo die Busleitungen verf\u00fcgbar sind. Du kannst sogar die beiden Dr\u00e4hte f\u00fcr BSB-LAN in einem bereits \"besetzten\" Steckplatz hinzuf\u00fcgen, ohne das andere Ger\u00e4t zu besch\u00e4digen (vorausgesetzt, die Installation ist ordnungsgem\u00e4\u00df). Auf derselben physischen Ebene bieten drei Bussysteme, BSB, LPB und PPS, L\u00f6sungen f\u00fcr unterschiedliche Aufgaben, wobei BSB und LPB immer vorgezogen werden sollten, wenn sie verf\u00fcgbar sind. PPS bietet jedoch in der Regel eine ausreichende Anzahl an Parametern f\u00fcr den durchschnittlichen Benutzer. BSB-LAN kann auf jedem dieser Busse ausgef\u00fchrt werden und der Wechsel zwischen ihnen ist einfach durch \u00c4ndern einiger Einstellungen m\u00f6glich.","title":"Der BSB/LPB/PPS-Bus"},{"location":"de/bus_systems.html#der-heizungsbus-bsb","text":"BSB ist das am h\u00e4ufigsten verwendete Bussystem in Siemens-Steuerungen der letzten 10-15 Jahre. Es ist der Nachfolger des PPS-Systems, mit dem es die gleichen physikalischen Parameter teilt, aber viel vielseitiger ist: Anstatt nur einige Dutzend Parameter kann es auf Hunderte von Parametern zugreifen und diese in verschiedene Kategorien einteilen, um die Navigation zu erleichtern. Es handelt sich um ein transaktionsbasiertes Protokoll, bei dem die meisten Nachrichten von einem Ger\u00e4t an ein anderes gesendet werden und der Empf\u00e4nger eine Art Feedback gibt, z. B. ob die Aufgabe abgeschlossen werden konnte oder ob sie ung\u00fcltige Daten enthielt. Obwohl BSB in der Lage ist, mehrere Ger\u00e4te auf dem Bus anzusprechen, wird es nicht in Systemen mit mehr als einem Heizger\u00e4t verwendet. Das Heizger\u00e4t hat immer die ID 0 , die Anzeigeeinheit an der Heizungsanlage hat die ID 10 (oder 0x0A in hexadezimal) und die Standard-Raumger\u00e4t hat die ID 6 . BSB-LAN hat die ID 66 oder 0x42 in hexadezimal. Raumger\u00e4te, die \"BSB sprechen\", sind zum Beispiel QAA55 und QAA75.","title":"Der Heizungsbus (BSB)"},{"location":"de/bus_systems.html#der-lokale-prozessbus-lpb","text":"LPB wurde ungef\u00e4hr zur gleichen Zeit wie PPS eingef\u00fchrt, das es in Bezug auf die Kommunikation mit anderen Heizger\u00e4ten erg\u00e4nzte: W\u00e4hrend PPS zur Kommunikation mit dem Raumger\u00e4t verwendet wurde, wurde LPB verwendet, um Befehle von einem Haupt-Heizger\u00e4t an ein oder mehrere Hilf-Heizger\u00e4te zu senden, beispielsweise in einer Kaskaden-Konfiguration. Zu dieser Zeit bezogen sich die meisten \u00fcber LPB \u00fcbertragenen Informationen auf die internen Abl\u00e4ufe der Heizungsanlage (wie Sensordaten oder interne Solltemperaturen), w\u00e4hrend die f\u00fcr den Benutzer relevanten Parameter (wie z. B. die Komfort-Soll-Raumtemperatur) nur \u00fcber PPS verf\u00fcgbar waren. Heutzutage bieten Heizger\u00e4te, die sowohl LPB als auch BSB unterst\u00fctzen, die gleichen Parameter-Daten auf beiden Bussystemen an. LPB verwendet ein spezifisches Adressierungsschema mit Segmenten und Ger\u00e4ten. Jedes Segment von 0 bis 15 kann bis zu 15 Ger\u00e4te (von 1 bis 15) enthalten. Beim Schreiben dieser Adressen werden Segment und Ger\u00e4t durch einen Doppelpunkt getrennt: 00:01 oder 04:03 . Um die segmentbasierte Adresse in die f\u00fcr BSB-LAN erforderliche Ziel-ID umzuwandeln, wird folgende Formel verwendet: SEGMENT mal 16 plus GER\u00c4T minus eins. Beispiel: Ger\u00e4t 3 im Segment 4 entspricht 4 * 16 + 3 - 1 = 66. Die Haupt-Heizungsanlage ist per Definition 00:01 , was einer Ziel-ID 0 entspricht. Um mehr \u00fcber das LPB-System und seine Implementierung zu erfahren, kannst du auf diese beiden Dokumente aus den sp\u00e4ten 1990er Jahren zur\u00fcckgreifen: Eines behandelt die grundlegenden Systemdaten und die Konzeptionierung eines LPB-Netzwerks, das andere befasst sich mit den grundlegenden technischen Daten und enth\u00e4lt Details zu Kabell\u00e4ngen und -durchmessern usw. Mit Ausnahme einiger Weishaut-Heizger\u00e4te sind Raumger\u00e4te nicht \u00fcber LPB mit der Heizungsanlage verbunden. Neuere Modelle verwenden f\u00fcr diese Aufgabe BSB, w\u00e4hrend \u00e4ltere Modelle entweder PPS oder in einigen F\u00e4llen auch OpenTherm verwenden.","title":"Der lokale Prozessbus (LPB)"},{"location":"de/bus_systems.html#die-punkt-zu-punkt-schnittstelle-pps","text":"Die Punkt-zu-Punkt-Schnittstelle (PPS, abgeleitet vom deutschen Begriff \"Punkt-zu-Punkt-Schnittstelle\") ist auf der physischen Ebene mit den anderen Systemen kompatibel, aber nicht in der Art und Weise, wie Nachrichten-Telegramme ausgetauscht werden. W\u00e4hrend BSB und LPB miteinander kommunizieren, indem sie Telegramme senden und deren Empfang best\u00e4tigen, wird PPS vom Heizger\u00e4t dominiert. Das Heizger\u00e4t sendet kontinuierlich seine Daten an das Raumger\u00e4t und teilt diesem mit, wann und welche Art von Informationen es senden soll. Es kann also bis zu einigen Minuten dauern, bis ein in BSB-LAN eingestellter Wert tats\u00e4chlich vom Heizsystem angefordert und dort angezeigt wird. Es handelt sich au\u00dferdem um ein sehr zeitkritisches Protokoll, sodass andere Aufgaben, die BSB-LAN erledigen soll, zu einer vor\u00fcbergehenden Unterbrechung und m\u00f6glicherweise zu einer Fehlermeldung auf der Heizungsanlage f\u00fchren k\u00f6nnen. Allerdings sollte sich dies nach kurzer Zeit von selbst beheben, wenn die beiden Komponenten wieder miteinander \"kommunizieren\". Im Gegensatz zu BSB und LPB werden \u00c4nderungen, die in BSB-LAN vorgenommen werden, nicht sofort wirksam. \u00c4nderungen von Werten, beispielsweise der Komfort-Soll-Raumtemperatur, werden zun\u00e4chst intern in BSB-LAN gespeichert und erst an die Heizungsanlage gesendet, wenn diese das Raumger\u00e4t (d. h. BSB-LAN) dazu auffordert. Dies kann bis zu einer Minute dauern, daher sollte man nicht verwirrt sein, wenn Einstellungen nicht sofort auf dem Heizger\u00e4t erscheinen, wie es bei BSB und LPB der Fall ist. Mit PPS kann BSB-LAN in zwei Modi betrieben werden: entweder passives Abh\u00f6ren oder als Raumger\u00e4t. Im Passivmodus kann BSB-LAN nur den Datenaustausch zwischen dem Raumger\u00e4t und dem Heizger\u00e4t mith\u00f6ren. Es ist nicht m\u00f6glich, eigene Daten zu senden, da diese sofort von den gleichen Daten \u00fcberschrieben w\u00fcrden, die vom Raumger\u00e4t kommen. Um Parameterdaten an die Heizungsanlage zu senden, muss BSB-LAN im \"Raumger\u00e4t\"-Modus ausgef\u00fchrt werden, was bedeutet, dass alle Raumger\u00e4te von der Heizungsanlage entfernt werden m\u00fcssen. In diesem Fall ist es besonders wichtig, regelm\u00e4\u00dfig einen Raumtemperaturwert an BSB-LAN zu senden, der diesen Wert dann an das Heizger\u00e4t weiterleitet. Nur wenn der Heizk\u00f6rper ausschlie\u00dflich auf der Au\u00dfentemperatur basiert, kann dieser Wert ignoriert werden. BSB-LAN speichert einige Werte in seinem nicht-fl\u00fcchtigen EEPROM, aber einige Werte m\u00fcssen nach einem Neustart neu eingestellt werden, wie z. B. die Raumtemperatur-Soll-Einstellung. Dies verhindert, dass ein ung\u00fcltig gewordener Parameterwert gespeichert und gesendet wird, nur weil er im EEPROM gespeichert ist. Raumger\u00e4te, die h\u00e4ufig mit Heizungsanlagen verwendet werden, die PPS unterst\u00fctzen, sind QAA50 und QAA70.","title":"Die Punkt-zu-Punkt-Schnittstelle (PPS)"},{"location":"de/configure.html","text":"Konfiguration von BSB-LAN Es gibt zwei M\u00f6glichkeiten, BSB-LAN zu konfigurieren: \u00dcber die Konfigurationsdatei BSB_LAN_config.h \u00dcber die Web-Oberfl\u00e4che, indem du http://bsb-lan.local/C (oder die entsprechende IP-Adresse) aufrufst F\u00fcr die initiale Konfiguration m\u00fcssen einige Einstellungen in der Konfigurationsdatei vorgenommen werden, wie z.B. Sprache und Netzwerk-Einstellungen. Alle weiteren \u00c4nderungen k\u00f6nnen auch \u00fcber die Web-Oberfl\u00e4che vorgenommen werden. Es kann aber sinnvoll sein, die Konfiguration (auch) in der Konfigurationsdatei vorzunehmen, falls man den Mikrocontroller austauschen muss. Fast alle Einstellungen sind sowohl in der Web-Oberfl\u00e4che als auch in der Konfigurationsdatei verf\u00fcgbar. Auf einem ESP32-basierten Mikrocontroller richtet BSB-LAN seinen eigenen WLAN-Zugangspunkt mit dem Namen BSB-LAN ein, wenn es keine Verbindung zu einem Netzwerk herstellen kann. So kannst du dich auch ohne weitere Konfiguration mit diesem Zugangspunkt verbinden und das Passwort BSB-LPB-PPS-LAN verwenden, um BSB-LAN \u00fcber die IP-Adresse http://192.168.4.1 zu erreichen und mit der Konfiguration fortzufahren. Bitte beachte, dass ein Passwort oder HTTP-Benutzername und -Passwort weiterhin erforderlich sind, wenn diese Details in der EEPROM oder in BSB_LAN_config.h gespeichert sind. Konfiguration \u00fcber BSB_LAN_config.h Die Konfigurationsdatei besteht aus Variablen, die in anderen Teilen von BSB-LAN verwendet werden. Es ist daher wichtig, nur den Inhalt der Variablen (d.h. die Einstellungen) zu \u00e4ndern und nicht den Typ der Variablen. Wenn es also zum Beispiel die Einstellung byte ip_addr[4] = {192,168,178,88}; gibt, darfst du den Teil byte ip_addr[4] = nicht ver\u00e4ndern, sondern nur den Inhalt, in diesem Fall die durch Kommas getrennte IP-Adresse. Konfiguration \u00fcber die Web-Oberfl\u00e4che Die Konfiguration von BSB-LAN \u00fcber die Web-Oberfl\u00e4che ist ziemlich einfach, da du dich nicht mit Variablennamen besch\u00e4ftigen musst, sondern klare Beschreibungen vorgegeben sind. Anf\u00e4nglich werden nur eine ausgew\u00e4hlte Anzahl von Konfigurationsoptionen in der Web-Oberfl\u00e4che angezeigt. Um Zugang zu allen Optionen zu erhalten, musst du die \"erweiterte Konfiguration\" auf \"ein\" setzen. \u00dcbersicht der Konfigurationsoptionen Allgemeine Einstellungen Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen - #define LANG Sprache festlegen DE , EN , FR und andere ISO-L\u00e4ndercodes Anzeige der erweiterten Konfiguration - Alle Konfigurationsoptionen anzeigen Ein Aus Konfiguration von EEPROM lesen UseEEPROM Konfiguration von EEPROM oder Datei lesen Ein ( 1 ) Aus ( 0 ) Schreibzugriff (Level) - Wenn DEFAULT_FLAG auf FL_SW_CTL_RONLY gesetzt ist, kannst du hier den Level des Schreibzugriffs festlegen. Aus (schreibgesch\u00fctzt) Ein (Standard) Ein (Komplett) Nach Updates suchen enable_version_check BSB-LAN Server nach neuen verf\u00fcgbaren Versionen abfragen Ein ( true ) OTA Update enable_ota_update Over-the-Air (OTA) Update aktivieren Ein ( true ) Energiesparmodus esp32_save_energy Reduziert die Geschwindigkeit und spart Energie. Nicht aktivieren, wenn WLAN verwendet wird. Ein ( true ) Aus ( false ) Webserver-Dateisystem webserver Erm\u00f6glicht das Bereitstellen von Dateien von der SD-Karte Ein ( true ) Aus ( false ) - #define DEFAULT_FLAG Lese-/Schreibzugriff auf das Heizungssystem festlegen. FL_RONLY setzt alle Parameter auf schreibgesch\u00fctzt. FL_SW_CTL_RONLY erm\u00f6glicht die Einstellung des Lese-/Schreibzugriffs \u00fcber die Konfigurationseinstellung der Web-Oberfl\u00e4che. 0 macht alle Parameter, die geschrieben werden k\u00f6nnten, beschreibbar. Verwende diese Option nicht, es sei denn, du wirst angewiesen, dies zu tun! FL_RONLY FL_SW_CTL_RONLY 0 Bus-Einstellungen Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Bustyp bus_type Bustyp (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) PPS: Modus pps_write BSB-LAN kann als PPS-Raumger\u00e4t agieren (nur wenn kein echtes Raumger\u00e4t angeschlossen ist) oder nur passiv zuh\u00f6ren. passiv ( 0 ) als Raumger\u00e4t ( 1 ) PPS: QAA-Modell QAA_TYPE Raumger\u00e4t, das f\u00fcr den PPS-Bus simuliert werden soll QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Eigene Adresse own_address Eigene Bus-Adresse (Standard 66 sollte nicht ge\u00e4ndert werden) 66 ( 66 ) Zieladresse dest_address Ziel-Bus-Adresse. F\u00fcr BSB immer 0 . F\u00fcr LPB 0 , wenn das Zielger\u00e4t im Segment 1, Ger\u00e4teadresse 0 ist. Um von der LPB-Segment- und Ger\u00e4teadress-Notation zur Zieladresse zu wechseln, multipliziere das Segment mit 16, addiere die Ger\u00e4teadresse und ziehe eins ab. Um zum Beispiel ein Ger\u00e4t im Segment 4 mit der Ger\u00e4teadresse 3 anzusprechen, ist die Zieladresse (4 * 16) + 3 - 1 = 66 . F\u00fcr PPS nicht relevant. 0 ( 0 ) RX-Pin-Nummer TX-Pin-Nummer bus_pins Definiere die RX/TX-Pins, um mit dem BSB-LAN-Adapter zu kommunizieren. Bei 0 bleibt die Auto-Detection aktiviert. 0 und 0 ( 0, 0 ) Netzwerk-Einstellungen Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Netzwerkger\u00e4t network_type W\u00e4hle zwischen WLAN und LAN, um BSB-LAN mit dem Netzwerk zu verbinden. LAN ( 0 ) WLAN ( 1 ) WLAN SSID wifi_ssid Setze den WLAN-Netzwerknamen, wenn du WLAN verwendest. Dein_WLAN-Name ( Your_WLAN_name ) WLAN Passwort wifi_pass Setze das WLAN-Passwort, wenn du WLAN verwendest. DeinWLANPasswort ( YourWLANpassword ) DHCP-Nutzung use_dhcp Setze, ob DHCP verwendet werden soll, um eine IP-Adresse vom Router zu beziehen. Ein ( true ) Aus ( false ) IP-Adresse (fest) ip_addr Wenn du kein DHCP verwendest, kannst du hier eine feste IP-Adresse einstellen. Ansonsten lasse es bei 0.0.0.0 . In der Web-Oberfl\u00e4che kannst du die Punkt-Notation verwenden. In der Konfigurationsdatei musst du ein Komma als Trennzeichen verwenden. 192.168.178.88 ( 192,168,178,88 ) Subnetz subnet_addr Subnetz-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 255.255.255.0 ( 255,255,255,0 ) Gateway gateway_addr Gateway-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.1 ( 192,168,178,1 ) DNS-Server dns_addr DNS-Server-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.1 ( 192,168,178,1 ) TCP-Port HTTPPort HTTP-Port-Nummer, um auf die Web-Oberfl\u00e4che zuzugreifen. Standardm\u00e4\u00dfig ist es 80 . 80 ( 80 ) MAC-Adresse mac Setze eine feste MAC-Adresse. Nur relevant f\u00fcr Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) mDNS-Hostname mDNS_hostname Hostname f\u00fcr mDNS-Discovery BSB-LAN ( BSB-LAN ) HTTP-Authentifizierung USER_PASS Wenn nicht leer, enth\u00e4lt diese Einstellung den Benutzernamen und das Passwort f\u00fcr die HTTP-Authentifizierung, getrennt durch einen Doppelpunkt. Benutzername:Passwort ( Username:Password ) URL-Passwort PASSKEY Das Passwort f\u00fcgt eine benutzerdefinierte Sequenz hinzu, die nach dem Hostnamen in die URL eingef\u00fcgt werden muss. Zum Beispiel erfordert ein Passwort von 1234 , dass jede URL wie folgt geschrieben wird: http://bsb-lan.local/1234/ anstatt einfach http://bsb-lan.local/ . Lass es leer, wenn du kein Passwort verwenden m\u00f6chtest. 1234 ( 1234 ) Vertrauensw\u00fcrdige IP-Adresse trusted_ip_addr Der Zugriff auf BSB-LAN ist nur von dieser IP-Adresse aus m\u00f6glich. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.89 ( 192,168,178,89 ) Vertrauensw\u00fcrdige IP-Adresse trusted_ip_addr2 Der Zugriff auf BSB-LAN ist nur von dieser IP-Adresse aus m\u00f6glich. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.90 ( 192,168,178,90 ) - bssid Gib hier eine spezifische BSSID-Adresse ein, um sicherzustellen, dass du dich mit einem bestimmten Zugangspunkt verbindest. Setze es auf alle Nullen, wenn es keine besonderen Umst\u00e4nde gibt. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server Gib hier einen NTP-Server an, um die genaue Zeit f\u00fcr BSB-LAN zu erhalten. Setze es auf eine leere Zeichenkette, wenn du NTP nicht verwenden m\u00f6chtest. Nur f\u00fcr ESP32-basierte Mikrocontroller. ( pool.ntp.org ) - local_timezone Zeitzone, die f\u00fcr NTP verwendet werden soll. Siehe hier f\u00fcr eine komplette Liste. ( CET-1CEST,M3.5.0,M10.5.0/3 ) Logging Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Speicherger\u00e4t LogDestination W\u00e4hle das Ziel f\u00fcr Logging-Aktivit\u00e4ten. Eine SD-Karte wird dringend empfohlen, da die Verwendung des internen Flash-Speichers diesen mit der Zeit abnutzen wird. SD-Karte ( SDCARD ) Interner Flash-Speicher ( FLASH ) Logging-Modus LoggingMode Setze die Logging-Ziele/Aktivit\u00e4ten. Mehrere Auswahlm\u00f6glichkeiten sind m\u00f6glich, f\u00fcr die Konfigurationsdatei m\u00fcssen die Werte addiert werden, zum Beispiel, um sie an einen MQTT-Broker und an UDP zu senden, setze den Wert auf 4 + 16 = 20 Schreibe auf SD-Karte ( 1 ) Berechne 24h-Durchschnitte ( 2 ) Sende an MQTT-Broker ( 4 ) Sende nur Log-Parameter an MQTT ( 8 ) Sende an UDP ( 16 ) Logging-Intervall log_interval Intervall f\u00fcr Logging-Aktivit\u00e4ten (in Sekunden) 60 ( 60 ) Log-Parameter log_parameters Liste der Logging-Parameter. Siehe Anweisungen zur Adressierung unten. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Log-Bus-Telegramme logTelegram Logge rohe Bus-Telegramme, wie z.B. Broadcast-Nachrichten oder unbekannte Telegramme Aus ( LOGTELEGRAM_OFF ) Logge alle Bus-Telegramme ( LOGTELEGRAM_ON ) Logge nur unbekannte Bus-Telegramme ( LOGTELEGRAM_UNKNOWN_ONLY ) Logge nur Broadcast-Bus-Telegramme ( LOGTELEGRAM_BROADCAST_ONLY ) Logge nur unbekannte Broadcast-Bus-Telegramme ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) 24h-Durchschnitte-Parameter avg_parameters Liste der Parameter f\u00fcr die Generierung von 24-Stunden-Durchschnitten. Siehe Anweisungen zur Adressierung unten. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT Definiere die Standardanzahl der Tage, um Logging-Daten zu plotten ( 3 ) MQTT Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen MQTT-Broker-Server mqtt_broker_addr Hostname/IP des MQTT-Brokers my-mqtt-broker.local ( my-mqtt-broker.local ) MQTT-Benutzername MQTTUsername Optionaler Benutzername f\u00fcr den MQTT-Broker MyMQTTusername ( MyMQTTusername ) MQTT-Passwort MQTTPassword Optionales Passwort f\u00fcr den MQTT-Broker MyMQTTpassword ( MyMQTTpassword ) MQTT-Ger\u00e4te-ID MQTTDeviceID Ger\u00e4te-Identifikator f\u00fcr MQTT BSB-LAN ( BSB-LAN ) MQTT-Topic-Pr\u00e4fix `MQTTTopic DHT Pins DHT_Pins Leg die Pins f\u00fcr den DHT22 Sensor fest (verwende -1 in der Konfigurationsdatei, um es zu deaktivieren) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1 ) --- --- --- --- BME280 Sensoren BME_Sensors Leg die Anzahl der BME280 Sensoren auf dem I2C Bus fest. Du musst Zugang zu den I2C Pins haben. Die festen Adressen 0x76 und 0x77 werden verwendet. Verwende 0 zum Deaktivieren 1 ( 1 ) MAX! Verwendung enable_max_cul Aktiviere oder deaktiviere die Verbindung zum CUNO/CUNX/modifizierten MAX!Cube An ( true ) Aus ( false ) IP Adresse Cube max_cul_ip_addr IP Adresse des CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) MAX! Ger\u00e4te max_device_list IDs der MAX! Ger\u00e4te, die abgefragt werden sollen. Diese IDs findest du auf einem Aufkleber auf dem Ger\u00e4t. Nachdem du sie hier eingegeben hast, muss jedes Ger\u00e4t in den Pairing-Modus versetzt werden. Dies muss jedes Mal wiederholt werden, wenn das EEPROM Layout von BSB-LAN ge\u00e4ndert wird (siehe ChangeLog) KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) IPWE Verwendung enable_ipwe Aktiviere die IPWE Erweiterung ( /ipwe.cgi ) An ( true ) Aus ( false ) IPWE Parameter ipwe_parameters Liste der Parameter f\u00fcr die Anzeige in der IPWE Erweiterung. Siehe unten f\u00fcr Anweisungen zur Adressierung 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Aktiviere benutzerdefinierte Funktionen - Debugging Web-Interface Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Debugging Verwendung debug_mode W\u00e4hle die Debug-Ausgabe Aus ( 0 ) Seriell ( 1 ) Telnet ( 2 ) Ausf\u00fchrlichkeit verbose Aktiviere oder deaktiviere ausf\u00fchrliche Debug-Nachrichten (schalte es nicht aus, es sei denn, du wirst dazu angeleitet) An ( 1 ) Aus ( 0 ) Rohdatenmodus monitor Aktiviere oder deaktiviere den Rohdatenmodus (schalte ihn nicht ein, es sei denn, du wirst dazu angeleitet!) An ( 1 ) Aus ( 0 ) Unbekannte Parameter anzeigen show_unknown Versuche auch Parameter anzuzeigen, die vom Zielger\u00e4t nicht unterst\u00fctzt werden An ( true ) Aus ( false ) Adressierung verschiedener Heizungssteuerungen Um Parameter von Ger\u00e4ten abzurufen, die nicht das Standard-Zielger\u00e4t im Web-Interface sind, musst du ein Ausrufezeichen gefolgt von der Ger\u00e4teadresse hinzuf\u00fcgen (siehe oben, wie du die Segment-/Ger\u00e4tenotation in die Ger\u00e4teadresse umwandelst). Zum Beispiel w\u00fcrde der Parameter 8700 vom Ger\u00e4t mit der Adresse 1 als 8700!1 statt einfach 8700 geschrieben werden. F\u00fcr die Konfigurationsdatei werden die Parameter in der Form {Parameternummer, Zieladresse} aufgelistet. Der Parameter 8700 vom Ger\u00e4t mit der Adresse 1 w\u00fcrde also als {8700, 1} geschrieben werden. Um das Standard-Zielger\u00e4t anzusprechen, kannst du -1 verwenden.","title":"Konfiguration"},{"location":"de/configure.html#konfiguration-von-bsb-lan","text":"Es gibt zwei M\u00f6glichkeiten, BSB-LAN zu konfigurieren: \u00dcber die Konfigurationsdatei BSB_LAN_config.h \u00dcber die Web-Oberfl\u00e4che, indem du http://bsb-lan.local/C (oder die entsprechende IP-Adresse) aufrufst F\u00fcr die initiale Konfiguration m\u00fcssen einige Einstellungen in der Konfigurationsdatei vorgenommen werden, wie z.B. Sprache und Netzwerk-Einstellungen. Alle weiteren \u00c4nderungen k\u00f6nnen auch \u00fcber die Web-Oberfl\u00e4che vorgenommen werden. Es kann aber sinnvoll sein, die Konfiguration (auch) in der Konfigurationsdatei vorzunehmen, falls man den Mikrocontroller austauschen muss. Fast alle Einstellungen sind sowohl in der Web-Oberfl\u00e4che als auch in der Konfigurationsdatei verf\u00fcgbar. Auf einem ESP32-basierten Mikrocontroller richtet BSB-LAN seinen eigenen WLAN-Zugangspunkt mit dem Namen BSB-LAN ein, wenn es keine Verbindung zu einem Netzwerk herstellen kann. So kannst du dich auch ohne weitere Konfiguration mit diesem Zugangspunkt verbinden und das Passwort BSB-LPB-PPS-LAN verwenden, um BSB-LAN \u00fcber die IP-Adresse http://192.168.4.1 zu erreichen und mit der Konfiguration fortzufahren. Bitte beachte, dass ein Passwort oder HTTP-Benutzername und -Passwort weiterhin erforderlich sind, wenn diese Details in der EEPROM oder in BSB_LAN_config.h gespeichert sind.","title":"Konfiguration von BSB-LAN"},{"location":"de/configure.html#konfiguration-uber-bsb_lan_configh","text":"Die Konfigurationsdatei besteht aus Variablen, die in anderen Teilen von BSB-LAN verwendet werden. Es ist daher wichtig, nur den Inhalt der Variablen (d.h. die Einstellungen) zu \u00e4ndern und nicht den Typ der Variablen. Wenn es also zum Beispiel die Einstellung byte ip_addr[4] = {192,168,178,88}; gibt, darfst du den Teil byte ip_addr[4] = nicht ver\u00e4ndern, sondern nur den Inhalt, in diesem Fall die durch Kommas getrennte IP-Adresse.","title":"Konfiguration \u00fcber BSB_LAN_config.h"},{"location":"de/configure.html#konfiguration-uber-die-web-oberflache","text":"Die Konfiguration von BSB-LAN \u00fcber die Web-Oberfl\u00e4che ist ziemlich einfach, da du dich nicht mit Variablennamen besch\u00e4ftigen musst, sondern klare Beschreibungen vorgegeben sind. Anf\u00e4nglich werden nur eine ausgew\u00e4hlte Anzahl von Konfigurationsoptionen in der Web-Oberfl\u00e4che angezeigt. Um Zugang zu allen Optionen zu erhalten, musst du die \"erweiterte Konfiguration\" auf \"ein\" setzen.","title":"Konfiguration \u00fcber die Web-Oberfl\u00e4che"},{"location":"de/configure.html#ubersicht-der-konfigurationsoptionen","text":"","title":"\u00dcbersicht der Konfigurationsoptionen"},{"location":"de/configure.html#allgemeine-einstellungen","text":"Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen - #define LANG Sprache festlegen DE , EN , FR und andere ISO-L\u00e4ndercodes Anzeige der erweiterten Konfiguration - Alle Konfigurationsoptionen anzeigen Ein Aus Konfiguration von EEPROM lesen UseEEPROM Konfiguration von EEPROM oder Datei lesen Ein ( 1 ) Aus ( 0 ) Schreibzugriff (Level) - Wenn DEFAULT_FLAG auf FL_SW_CTL_RONLY gesetzt ist, kannst du hier den Level des Schreibzugriffs festlegen. Aus (schreibgesch\u00fctzt) Ein (Standard) Ein (Komplett) Nach Updates suchen enable_version_check BSB-LAN Server nach neuen verf\u00fcgbaren Versionen abfragen Ein ( true ) OTA Update enable_ota_update Over-the-Air (OTA) Update aktivieren Ein ( true ) Energiesparmodus esp32_save_energy Reduziert die Geschwindigkeit und spart Energie. Nicht aktivieren, wenn WLAN verwendet wird. Ein ( true ) Aus ( false ) Webserver-Dateisystem webserver Erm\u00f6glicht das Bereitstellen von Dateien von der SD-Karte Ein ( true ) Aus ( false ) - #define DEFAULT_FLAG Lese-/Schreibzugriff auf das Heizungssystem festlegen. FL_RONLY setzt alle Parameter auf schreibgesch\u00fctzt. FL_SW_CTL_RONLY erm\u00f6glicht die Einstellung des Lese-/Schreibzugriffs \u00fcber die Konfigurationseinstellung der Web-Oberfl\u00e4che. 0 macht alle Parameter, die geschrieben werden k\u00f6nnten, beschreibbar. Verwende diese Option nicht, es sei denn, du wirst angewiesen, dies zu tun! FL_RONLY FL_SW_CTL_RONLY 0","title":"Allgemeine Einstellungen"},{"location":"de/configure.html#bus-einstellungen","text":"Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Bustyp bus_type Bustyp (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) PPS: Modus pps_write BSB-LAN kann als PPS-Raumger\u00e4t agieren (nur wenn kein echtes Raumger\u00e4t angeschlossen ist) oder nur passiv zuh\u00f6ren. passiv ( 0 ) als Raumger\u00e4t ( 1 ) PPS: QAA-Modell QAA_TYPE Raumger\u00e4t, das f\u00fcr den PPS-Bus simuliert werden soll QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Eigene Adresse own_address Eigene Bus-Adresse (Standard 66 sollte nicht ge\u00e4ndert werden) 66 ( 66 ) Zieladresse dest_address Ziel-Bus-Adresse. F\u00fcr BSB immer 0 . F\u00fcr LPB 0 , wenn das Zielger\u00e4t im Segment 1, Ger\u00e4teadresse 0 ist. Um von der LPB-Segment- und Ger\u00e4teadress-Notation zur Zieladresse zu wechseln, multipliziere das Segment mit 16, addiere die Ger\u00e4teadresse und ziehe eins ab. Um zum Beispiel ein Ger\u00e4t im Segment 4 mit der Ger\u00e4teadresse 3 anzusprechen, ist die Zieladresse (4 * 16) + 3 - 1 = 66 . F\u00fcr PPS nicht relevant. 0 ( 0 ) RX-Pin-Nummer TX-Pin-Nummer bus_pins Definiere die RX/TX-Pins, um mit dem BSB-LAN-Adapter zu kommunizieren. Bei 0 bleibt die Auto-Detection aktiviert. 0 und 0 ( 0, 0 )","title":"Bus-Einstellungen"},{"location":"de/configure.html#netzwerk-einstellungen","text":"Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Netzwerkger\u00e4t network_type W\u00e4hle zwischen WLAN und LAN, um BSB-LAN mit dem Netzwerk zu verbinden. LAN ( 0 ) WLAN ( 1 ) WLAN SSID wifi_ssid Setze den WLAN-Netzwerknamen, wenn du WLAN verwendest. Dein_WLAN-Name ( Your_WLAN_name ) WLAN Passwort wifi_pass Setze das WLAN-Passwort, wenn du WLAN verwendest. DeinWLANPasswort ( YourWLANpassword ) DHCP-Nutzung use_dhcp Setze, ob DHCP verwendet werden soll, um eine IP-Adresse vom Router zu beziehen. Ein ( true ) Aus ( false ) IP-Adresse (fest) ip_addr Wenn du kein DHCP verwendest, kannst du hier eine feste IP-Adresse einstellen. Ansonsten lasse es bei 0.0.0.0 . In der Web-Oberfl\u00e4che kannst du die Punkt-Notation verwenden. In der Konfigurationsdatei musst du ein Komma als Trennzeichen verwenden. 192.168.178.88 ( 192,168,178,88 ) Subnetz subnet_addr Subnetz-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 255.255.255.0 ( 255,255,255,0 ) Gateway gateway_addr Gateway-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.1 ( 192,168,178,1 ) DNS-Server dns_addr DNS-Server-Adresse, wenn eine feste IP-Adresse verwendet wird. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.1 ( 192,168,178,1 ) TCP-Port HTTPPort HTTP-Port-Nummer, um auf die Web-Oberfl\u00e4che zuzugreifen. Standardm\u00e4\u00dfig ist es 80 . 80 ( 80 ) MAC-Adresse mac Setze eine feste MAC-Adresse. Nur relevant f\u00fcr Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) mDNS-Hostname mDNS_hostname Hostname f\u00fcr mDNS-Discovery BSB-LAN ( BSB-LAN ) HTTP-Authentifizierung USER_PASS Wenn nicht leer, enth\u00e4lt diese Einstellung den Benutzernamen und das Passwort f\u00fcr die HTTP-Authentifizierung, getrennt durch einen Doppelpunkt. Benutzername:Passwort ( Username:Password ) URL-Passwort PASSKEY Das Passwort f\u00fcgt eine benutzerdefinierte Sequenz hinzu, die nach dem Hostnamen in die URL eingef\u00fcgt werden muss. Zum Beispiel erfordert ein Passwort von 1234 , dass jede URL wie folgt geschrieben wird: http://bsb-lan.local/1234/ anstatt einfach http://bsb-lan.local/ . Lass es leer, wenn du kein Passwort verwenden m\u00f6chtest. 1234 ( 1234 ) Vertrauensw\u00fcrdige IP-Adresse trusted_ip_addr Der Zugriff auf BSB-LAN ist nur von dieser IP-Adresse aus m\u00f6glich. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.89 ( 192,168,178,89 ) Vertrauensw\u00fcrdige IP-Adresse trusted_ip_addr2 Der Zugriff auf BSB-LAN ist nur von dieser IP-Adresse aus m\u00f6glich. Verwende die gleiche Notation wie bei der IP-Adresse. 192.168.178.90 ( 192,168,178,90 ) - bssid Gib hier eine spezifische BSSID-Adresse ein, um sicherzustellen, dass du dich mit einem bestimmten Zugangspunkt verbindest. Setze es auf alle Nullen, wenn es keine besonderen Umst\u00e4nde gibt. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server Gib hier einen NTP-Server an, um die genaue Zeit f\u00fcr BSB-LAN zu erhalten. Setze es auf eine leere Zeichenkette, wenn du NTP nicht verwenden m\u00f6chtest. Nur f\u00fcr ESP32-basierte Mikrocontroller. ( pool.ntp.org ) - local_timezone Zeitzone, die f\u00fcr NTP verwendet werden soll. Siehe hier f\u00fcr eine komplette Liste. ( CET-1CEST,M3.5.0,M10.5.0/3 )","title":"Netzwerk-Einstellungen"},{"location":"de/configure.html#logging","text":"Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Speicherger\u00e4t LogDestination W\u00e4hle das Ziel f\u00fcr Logging-Aktivit\u00e4ten. Eine SD-Karte wird dringend empfohlen, da die Verwendung des internen Flash-Speichers diesen mit der Zeit abnutzen wird. SD-Karte ( SDCARD ) Interner Flash-Speicher ( FLASH ) Logging-Modus LoggingMode Setze die Logging-Ziele/Aktivit\u00e4ten. Mehrere Auswahlm\u00f6glichkeiten sind m\u00f6glich, f\u00fcr die Konfigurationsdatei m\u00fcssen die Werte addiert werden, zum Beispiel, um sie an einen MQTT-Broker und an UDP zu senden, setze den Wert auf 4 + 16 = 20 Schreibe auf SD-Karte ( 1 ) Berechne 24h-Durchschnitte ( 2 ) Sende an MQTT-Broker ( 4 ) Sende nur Log-Parameter an MQTT ( 8 ) Sende an UDP ( 16 ) Logging-Intervall log_interval Intervall f\u00fcr Logging-Aktivit\u00e4ten (in Sekunden) 60 ( 60 ) Log-Parameter log_parameters Liste der Logging-Parameter. Siehe Anweisungen zur Adressierung unten. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Log-Bus-Telegramme logTelegram Logge rohe Bus-Telegramme, wie z.B. Broadcast-Nachrichten oder unbekannte Telegramme Aus ( LOGTELEGRAM_OFF ) Logge alle Bus-Telegramme ( LOGTELEGRAM_ON ) Logge nur unbekannte Bus-Telegramme ( LOGTELEGRAM_UNKNOWN_ONLY ) Logge nur Broadcast-Bus-Telegramme ( LOGTELEGRAM_BROADCAST_ONLY ) Logge nur unbekannte Broadcast-Bus-Telegramme ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) 24h-Durchschnitte-Parameter avg_parameters Liste der Parameter f\u00fcr die Generierung von 24-Stunden-Durchschnitten. Siehe Anweisungen zur Adressierung unten. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT Definiere die Standardanzahl der Tage, um Logging-Daten zu plotten ( 3 )","title":"Logging"},{"location":"de/configure.html#mqtt","text":"Web-Oberfl\u00e4che Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen MQTT-Broker-Server mqtt_broker_addr Hostname/IP des MQTT-Brokers my-mqtt-broker.local ( my-mqtt-broker.local ) MQTT-Benutzername MQTTUsername Optionaler Benutzername f\u00fcr den MQTT-Broker MyMQTTusername ( MyMQTTusername ) MQTT-Passwort MQTTPassword Optionales Passwort f\u00fcr den MQTT-Broker MyMQTTpassword ( MyMQTTpassword ) MQTT-Ger\u00e4te-ID MQTTDeviceID Ger\u00e4te-Identifikator f\u00fcr MQTT BSB-LAN ( BSB-LAN ) MQTT-Topic-Pr\u00e4fix `MQTTTopic DHT Pins DHT_Pins Leg die Pins f\u00fcr den DHT22 Sensor fest (verwende -1 in der Konfigurationsdatei, um es zu deaktivieren) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1 ) --- --- --- --- BME280 Sensoren BME_Sensors Leg die Anzahl der BME280 Sensoren auf dem I2C Bus fest. Du musst Zugang zu den I2C Pins haben. Die festen Adressen 0x76 und 0x77 werden verwendet. Verwende 0 zum Deaktivieren 1 ( 1 ) MAX! Verwendung enable_max_cul Aktiviere oder deaktiviere die Verbindung zum CUNO/CUNX/modifizierten MAX!Cube An ( true ) Aus ( false ) IP Adresse Cube max_cul_ip_addr IP Adresse des CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) MAX! Ger\u00e4te max_device_list IDs der MAX! Ger\u00e4te, die abgefragt werden sollen. Diese IDs findest du auf einem Aufkleber auf dem Ger\u00e4t. Nachdem du sie hier eingegeben hast, muss jedes Ger\u00e4t in den Pairing-Modus versetzt werden. Dies muss jedes Mal wiederholt werden, wenn das EEPROM Layout von BSB-LAN ge\u00e4ndert wird (siehe ChangeLog) KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) IPWE Verwendung enable_ipwe Aktiviere die IPWE Erweiterung ( /ipwe.cgi ) An ( true ) Aus ( false ) IPWE Parameter ipwe_parameters Liste der Parameter f\u00fcr die Anzeige in der IPWE Erweiterung. Siehe unten f\u00fcr Anweisungen zur Adressierung 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Aktiviere benutzerdefinierte Funktionen -","title":"MQTT"},{"location":"de/configure.html#debugging","text":"Web-Interface Konfigurationsdatei Funktionalit\u00e4t M\u00f6gliche Einstellungen Debugging Verwendung debug_mode W\u00e4hle die Debug-Ausgabe Aus ( 0 ) Seriell ( 1 ) Telnet ( 2 ) Ausf\u00fchrlichkeit verbose Aktiviere oder deaktiviere ausf\u00fchrliche Debug-Nachrichten (schalte es nicht aus, es sei denn, du wirst dazu angeleitet) An ( 1 ) Aus ( 0 ) Rohdatenmodus monitor Aktiviere oder deaktiviere den Rohdatenmodus (schalte ihn nicht ein, es sei denn, du wirst dazu angeleitet!) An ( 1 ) Aus ( 0 ) Unbekannte Parameter anzeigen show_unknown Versuche auch Parameter anzuzeigen, die vom Zielger\u00e4t nicht unterst\u00fctzt werden An ( true ) Aus ( false )","title":"Debugging"},{"location":"de/configure.html#adressierung-verschiedener-heizungssteuerungen","text":"Um Parameter von Ger\u00e4ten abzurufen, die nicht das Standard-Zielger\u00e4t im Web-Interface sind, musst du ein Ausrufezeichen gefolgt von der Ger\u00e4teadresse hinzuf\u00fcgen (siehe oben, wie du die Segment-/Ger\u00e4tenotation in die Ger\u00e4teadresse umwandelst). Zum Beispiel w\u00fcrde der Parameter 8700 vom Ger\u00e4t mit der Adresse 1 als 8700!1 statt einfach 8700 geschrieben werden. F\u00fcr die Konfigurationsdatei werden die Parameter in der Form {Parameternummer, Zieladresse} aufgelistet. Der Parameter 8700 vom Ger\u00e4t mit der Adresse 1 w\u00fcrde also als {8700, 1} geschrieben werden. Um das Standard-Zielger\u00e4t anzusprechen, kannst du -1 verwenden.","title":"Adressierung verschiedener Heizungssteuerungen"},{"location":"de/faq.html","text":"H\u00e4ufig gestellte Fragen (FAQ) Hat ein Update Auswirkungen auf die Einstellungen von BSB-LAN? Das kommt darauf an. Kleinere Updates haben keine Auswirkungen auf die Einstellungen, aber manchmal l\u00e4sst es sich nicht verhindern, dass \u00c4nderungen im Code Auswirkungen auf die Einstellungen haben. Dies ist dann in der Datei CHANGELOG.md erw\u00e4hnt. In diesem Fall schreibt BSB-LAN die Einstellungen neu ins EEPROM, basierend auf den Einstellungen in BSB_LAN_config.h . Deshalb ist es am besten, gr\u00f6\u00dfere \u00c4nderungen an den Einstellungen immer auch in dieser Datei vorzunehmen. Updates haben niemals Auswirkungen auf Parameter im Heizsystem. Meine Heizung hat einen OpenTherm/eBus/L-Bus/R-Bus Anschluss, kann ich damit BSB-LAN benutzen? Nein, diese Regler sind nicht mit BSB-LAN kompatibel. Bitte auf keinen Fall versuchen, den Adapter mit diesen Systemen zu verbinden! Ich vermisse die Funktion XYZ BSB-LAN erm\u00f6glicht es, eigene Funktionen hinzuzuf\u00fcgen, daf\u00fcr gibt es die Dateien BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h und BSB_LAN_custom.h . Bitte schau' Dir das Verzeichnis custom_functions im Repository an, um weitere Details und Beispiele zu bekommen. Wir freuen uns \u00fcber weitere Beitr\u00e4ge!","title":"FAQ"},{"location":"de/faq.html#haufig-gestellte-fragen-faq","text":"","title":"H\u00e4ufig gestellte Fragen (FAQ)"},{"location":"de/faq.html#hat-ein-update-auswirkungen-auf-die-einstellungen-von-bsb-lan","text":"Das kommt darauf an. Kleinere Updates haben keine Auswirkungen auf die Einstellungen, aber manchmal l\u00e4sst es sich nicht verhindern, dass \u00c4nderungen im Code Auswirkungen auf die Einstellungen haben. Dies ist dann in der Datei CHANGELOG.md erw\u00e4hnt. In diesem Fall schreibt BSB-LAN die Einstellungen neu ins EEPROM, basierend auf den Einstellungen in BSB_LAN_config.h . Deshalb ist es am besten, gr\u00f6\u00dfere \u00c4nderungen an den Einstellungen immer auch in dieser Datei vorzunehmen. Updates haben niemals Auswirkungen auf Parameter im Heizsystem.","title":"Hat ein Update Auswirkungen auf die Einstellungen von BSB-LAN?"},{"location":"de/faq.html#meine-heizung-hat-einen-openthermebusl-busr-bus-anschluss-kann-ich-damit-bsb-lan-benutzen","text":"Nein, diese Regler sind nicht mit BSB-LAN kompatibel. Bitte auf keinen Fall versuchen, den Adapter mit diesen Systemen zu verbinden!","title":"Meine Heizung hat einen OpenTherm/eBus/L-Bus/R-Bus Anschluss, kann ich damit BSB-LAN benutzen?"},{"location":"de/faq.html#ich-vermisse-die-funktion-xyz","text":"BSB-LAN erm\u00f6glicht es, eigene Funktionen hinzuzuf\u00fcgen, daf\u00fcr gibt es die Dateien BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h und BSB_LAN_custom.h . Bitte schau' Dir das Verzeichnis custom_functions im Repository an, um weitere Details und Beispiele zu bekommen. Wir freuen uns \u00fcber weitere Beitr\u00e4ge!","title":"Ich vermisse die Funktion XYZ"},{"location":"de/homeautomation.html","text":"Verbindung von BSB-LAN mit Heimautomatisierungssystemen BSB-LAN bietet vier M\u00f6glichkeiten, eine Verbindung zu Heimautomatisierungssystemen herzustellen: Verwendung unterst\u00fctzter Module f\u00fcr spezifische Heimautomatisierungssysteme Austausch von Daten \u00fcber MQTT Austausch von Daten \u00fcber JSON Austausch von Daten \u00fcber URL-Befehle und Screen Scraping Verwendung unterst\u00fctzter Module f\u00fcr spezifische Heimautomatisierungssysteme F\u00fcr einige Systeme gibt es spezifische Module, die verwendet werden k\u00f6nnen, um nahtlos auf BSB-LAN zuzugreifen: Home Assistant W\u00e4hrend das offizielle Plugin nicht mehr funktioniert, funktioniert der MQTT-Ansatz (siehe unten) gut mit Home Assistant, einschlie\u00dflich der Auto-Discovery-Funktion. Hier ist ein Link zu einem Video im BSB-LAN YouTube-Kanal , das zeigt, wie man BSB-LAN in Home Assistant mithilfe der Auto-Discovery-Funktion von Home Assistant einrichtet. F\u00fcr weitere Details zur Implementierung kannst du auch auf diese Tutorials verweisen: GitHub-User @ryann72 hat detaillierte Anweisungen f\u00fcr BSB-LAN und HomeAssistant/Mosquitto geschrieben. Es ist auch auf Franz\u00f6sisch verf\u00fcgbar. YouTuber @StoneTime hat zwei Videos (in Deutsch) erstellt, in denen er die Installation von BSB-LAN sowie die Einrichtung in Home Assistant zeigt. Vielen Dank! YouTuber @ArminasTV hat zwei Videos (in Franz\u00f6sisch) erstellt, in denen er die Installation von BSB-LAN sowie die Einrichtung mit Home Assistant und MQTT zeigt. Merci beaucoup! Homebridge BSB-LAN-User Michael hat ein Plugin f\u00fcr Homebridge geschrieben. Vielen Dank! ioBroker GitHub-User @hacki11 hat einen Adapter f\u00fcr ioBroker entwickelt. Vielen Dank! Jeedom GitHub-User @bernard-dandrea hat ein Plugin f\u00fcr Jeedom (mit einer franz\u00f6sischen Beschreibung) geschrieben. Vielen Dank! Node-RED GitHub-User @konne hat ein Modul f\u00fcr Node-RED geschrieben. Vielen Dank! FHEM FHEM-Forum-User Luposoft hat eine kompakte Erkl\u00e4rung der Konfiguration f\u00fcr die Verwendung von FHEM \u00fcber MQTT geschrieben. Vielen Dank! openHAB Seit Version 2.5.4 gibt es ein Binding , das offiziell Teil von OpenHAB ist. Homematic FHEM-Forum-User PaulM hat einige Skripte geschrieben, um die Integration von BSB-LAN in Homematic zu demonstrieren. Vielen Dank! SmartHomeNG GitHub-User @thensty hat ein Plugin f\u00fcr SmartHomeNG geschrieben. Vielen Dank! Volkszaehler GitHub-User @lapixo hat ein Skript f\u00fcr das Volkszaehler-Projekt beigetragen. Vielen Dank! Bash-Skript GitHub-User @khfm hat Bash-Skripte geschrieben, um Daten abzufragen und sie mithilfe von gnuplot anzuzeigen. Vielen Dank! Austausch von Daten \u00fcber MQTT Dies ist die empfohlene Methode, um BSB-LAN mit Heimautomatisierungssystemen zu verbinden, da sie einen nahtlosen Datenaustausch erm\u00f6glicht. Als Voraussetzung wird ein MQTT-Broker (wie z.B. Mosquitto ) ben\u00f6tigt, der entweder lokal ausgef\u00fchrt wird oder \u00fcber einen \u00f6ffentlichen Dienst genutzt werden kann. Einige Heimautomatisierungssysteme wie Home Assistant bieten die Installation von Mosquitto als Teil ihrer Software an. Achtung: Derzeit scheint der Mosquitto-Broker ab Version 2.0.16 ein Problem mit der Verarbeitung einer gro\u00dfen Anzahl von Nachrichten zu haben ( siehe diesen Bug-Report ). Wenn du das Problem hast, dass deine BSB-LAN-Entit\u00e4ten als \"nicht verf\u00fcgbar\" angezeigt werden, insbesondere nach der Verwendung der Auto-Discovery-Funktion unten, solltest du auf Mosquitto Version 2.0.15 herunterstufen. Beachte jedoch, dass diese Version Sicherheitsl\u00fccken aufweist, daher solltest du sicherstellen, dass dein Broker mindestens in einer Firewall-Umgebung ausgef\u00fchrt wird. In BSB-LAN musst du mindestens die folgenden Konfigurationen vornehmen oder aktivieren: Setze den Logging-Modus (zus\u00e4tzlich) auf Senden an MQTT-Broker . Setze das Log-Intervall auf die Zeit (in Sekunden), in der du die Log-Parameter ver\u00f6ffentlichen m\u00f6chtest. W\u00e4hle bis zu 20 Log-Parameter aus, die du an dein Heimautomatisierungssystem senden m\u00f6chtest. Setze die MQTT-Nutzung auf Plain Text . Setze den MQTT-Broker-Server auf den Hostnamen deines MQTT-Brokers (z.B. den Mosquitto-Server). Wenn dein Heimautomatisierungssystem MQTT Auto-Discovery unterst\u00fctzt (wie bei Home Assistant), kannst du den URL-Befehl /M1!<x> aufrufen und BSB-LAN wird Auto-Discovery-Nachrichten f\u00fcr alle verf\u00fcgbaren Parameter vom Ger\u00e4t mit der ID <x> an den MQTT-Broker und damit an das Heimautomatisierungssystem senden. M\u00f6glicherweise musst du danach aufr\u00e4umen oder eine L\u00f6schnachricht f\u00fcr alle diese Parameter mit dem URL-Befehl /M0!<x> senden, wenn du diese Funktion nicht mehr verwenden m\u00f6chtest. Wenn du deine eigenen Verbindungsdetails einrichten m\u00f6chtest, ist die Topic-Struktur von BSB-LAN wie folgt: <BSB-LAN MQTT Topic>/<Ger\u00e4te-ID>/<Kategorie-Nr.>/<Parameter-Nr.> wobei <BSB-LAN MQTT Topic> in den Einstellungen von BSB-LAN definiert ist (Standardwert ist BSB-LAN ), <Ger\u00e4te-ID> die ID des Heizungsreglers ist (in der Regel 0 f\u00fcr den Hauptregler), <Kategorie-Nr.> die Kategorienummer ist, wie sie mit dem URL-Befehl /K verwendet wird, <Parameter-Nr.> die Parameternummer ist, wie z.B. 501.1 . Diese Struktur wird von einem der folgenden Topics gefolgt, die die auszuf\u00fchrende Aktion bestimmen: /status - enth\u00e4lt den Wert des Parameters in der MQTT-Payload. /set - wird verwendet, um einen Parameter mit dem Wert in der ver\u00f6ffentlichten MQTT-Payload mithilfe des SET-Telegramms (Standardmethode zum Festlegen von Parametern) zu setzen. /inf - \u00e4hnlich wie /set , verwendet aber das INF-Telegramm (wird z.B. zum Senden des Raumtemperaturparameters 10000 verwendet). /poll - ignoriert den ver\u00f6ffentlichten Wert und erzwingt, dass BSB-LAN den /status des gleichen Parameters sofort mit einem neu abgerufenen Parameterwert aktualisiert. /poll kann auch direkt unterhalb des Hauptthemas aufgerufen werden (z.B. BSB-LAN/poll ), wo es eine Liste von Parametern akzeptiert, die durch Kommas getrennt sind. Die /status -Topics dieser Parameter werden dann in einem Schritt aktualisiert. Parameter k\u00f6nnen entweder im Topic-Stil (mit f\u00fchrendem Schr\u00e4gstrich) oder \u00e4hnlich wie die Liste der Logging-Parameter in den BSB-LAN-Einstellungen adressiert werden (siehe Beispiele unten). Gleichzeitig wird die Legacy-Methode zum Senden von URL-Befehlen \u00fcber MQTT direkt an das Hauptthema (wie in den Einstellungen definiert, Standardwert ist BSB-LAN ) aus Kompatibilit\u00e4tsgr\u00fcnden weiterhin unterst\u00fctzt, ist aber veraltet. Antworten werden immer an /status des oben genannten Topic-Struktur geschrieben. Das /status -Topic wird auf vier Arten aktualisiert: \u00fcber Logging-Parameter an MQTT, wie oben erkl\u00e4rt jedes Mal, wenn eine URL-Abfrage an BSB-LAN gesendet wird (kann deaktiviert werden, indem Nur Logging-Parameter an MQTT senden in der Konfiguration aktiviert wird) jedes Mal, wenn ein Parameter \u00fcber die Raumsteuerung ge\u00e4ndert wird (kann deaktiviert werden, indem Nur Logging-Parameter an MQTT senden in der Konfiguration aktiviert wird) jedes Mal, wenn der Parameter \u00fcber das /poll -Topic aktualisiert wird, wie oben erkl\u00e4rt In diesen F\u00e4llen werden die jeweiligen Werte der betroffenen Parameter an den MQTT-Broker gesendet, so dass auch \u00c4nderungen, die au\u00dferhalb von BSB-LAN vorgenommen wurden, an das Heimautomatisierungssystem gesendet werden. Aus diesem Grund ist der MQTT-Ansatz die empfohlene Methode, um eine Verbindung zu einem Heimautomatisierungssystem herzustellen. Dies bedeutet auch, dass du als Alternative zur integrierten Logging-Funktion von BSB-LAN einfach periodisch eine URL mit den Parametern aufrufen kannst, die du aktualisiert sehen m\u00f6chtest. Da diese Parameter auch an den MQTT-Broker gesendet werden, erh\u00e4lt dein Heimautomatisierungssystem sie ebenfalls. Beispielsweise werden, wenn du die URL http://bsb-lan.local/700/8700 periodisch aufrufst, sowohl der Betriebsmodus der Heizkreislauf 1 (Parameter 700) als auch die aktuelle Au\u00dfentemperatur (Parameter 8700) an den MQTT-Broker gesendet. Beispiele f\u00fcr das Abfragen oder Setzen von Parametern \u00fcber MQTT mit Mosquitto Abfrage der Au\u00dfentemperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 51, Parameter 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status Setze die Komfort-Soll-Temperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 16, Parameter 710) auf 20 Grad: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Erzwinge eine sofortige Aktualisierung der Au\u00dfentemperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 51, Parameter 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Erzwinge eine sofortige Aktualisierung der Parameter 700 und 8700 vom Standardger\u00e4t sowie des Parameters 8326 von Ger\u00e4t mit der ID 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll oder mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Achtung: Bitte beachte, dass die Kategorienummer von System zu System unterschiedlich ist und zuerst mit deinem System verglichen werden muss! Austausch von Daten \u00fcber JSON BSB-LAN erm\u00f6glicht das Abfragen und Setzen von Parametern \u00fcber JSON-Strukturen und stellt auf diese Weise auch zahlreiche Informationen \u00fcber die Parameter und Kategoriestrukturen bereit. Die JSON-API wird \u00fcber URL-Befehle aufgerufen und die openapi.yaml -Datei in diesem Repository kann mit Swagger verwendet werden, um ihre M\u00f6glichkeiten und Funktionalit\u00e4ten zu erkunden. Austausch von Daten \u00fcber URL-Befehle und Screen Scraping F\u00fcr einfachere L\u00f6sungen k\u00f6nnen die URL-Befehle zum Abfragen und Setzen von Parametern verwendet werden, um BSB-LAN von anderen Systemen aus zu steuern. Screen Scraping ist m\u00f6glich, da das Projekt versucht, bestimmte Arten der Datendarstellung nicht zu ver\u00e4ndern, so dass das Parsing mit regul\u00e4ren Ausdr\u00fccken weiterhin funktioniert. Dennoch ist f\u00fcr die meisten Szenarien wahrscheinlich eine der anderen Optionen vorzuziehen.","title":"Mit dem Smart Home verbinden"},{"location":"de/homeautomation.html#verbindung-von-bsb-lan-mit-heimautomatisierungssystemen","text":"BSB-LAN bietet vier M\u00f6glichkeiten, eine Verbindung zu Heimautomatisierungssystemen herzustellen: Verwendung unterst\u00fctzter Module f\u00fcr spezifische Heimautomatisierungssysteme Austausch von Daten \u00fcber MQTT Austausch von Daten \u00fcber JSON Austausch von Daten \u00fcber URL-Befehle und Screen Scraping","title":"Verbindung von BSB-LAN mit Heimautomatisierungssystemen"},{"location":"de/homeautomation.html#verwendung-unterstutzter-module-fur-spezifische-heimautomatisierungssysteme","text":"F\u00fcr einige Systeme gibt es spezifische Module, die verwendet werden k\u00f6nnen, um nahtlos auf BSB-LAN zuzugreifen:","title":"Verwendung unterst\u00fctzter Module f\u00fcr spezifische Heimautomatisierungssysteme"},{"location":"de/homeautomation.html#home-assistant","text":"W\u00e4hrend das offizielle Plugin nicht mehr funktioniert, funktioniert der MQTT-Ansatz (siehe unten) gut mit Home Assistant, einschlie\u00dflich der Auto-Discovery-Funktion. Hier ist ein Link zu einem Video im BSB-LAN YouTube-Kanal , das zeigt, wie man BSB-LAN in Home Assistant mithilfe der Auto-Discovery-Funktion von Home Assistant einrichtet. F\u00fcr weitere Details zur Implementierung kannst du auch auf diese Tutorials verweisen: GitHub-User @ryann72 hat detaillierte Anweisungen f\u00fcr BSB-LAN und HomeAssistant/Mosquitto geschrieben. Es ist auch auf Franz\u00f6sisch verf\u00fcgbar. YouTuber @StoneTime hat zwei Videos (in Deutsch) erstellt, in denen er die Installation von BSB-LAN sowie die Einrichtung in Home Assistant zeigt. Vielen Dank! YouTuber @ArminasTV hat zwei Videos (in Franz\u00f6sisch) erstellt, in denen er die Installation von BSB-LAN sowie die Einrichtung mit Home Assistant und MQTT zeigt. Merci beaucoup!","title":"Home Assistant"},{"location":"de/homeautomation.html#homebridge","text":"BSB-LAN-User Michael hat ein Plugin f\u00fcr Homebridge geschrieben. Vielen Dank!","title":"Homebridge"},{"location":"de/homeautomation.html#iobroker","text":"GitHub-User @hacki11 hat einen Adapter f\u00fcr ioBroker entwickelt. Vielen Dank!","title":"ioBroker"},{"location":"de/homeautomation.html#jeedom","text":"GitHub-User @bernard-dandrea hat ein Plugin f\u00fcr Jeedom (mit einer franz\u00f6sischen Beschreibung) geschrieben. Vielen Dank!","title":"Jeedom"},{"location":"de/homeautomation.html#node-red","text":"GitHub-User @konne hat ein Modul f\u00fcr Node-RED geschrieben. Vielen Dank!","title":"Node-RED"},{"location":"de/homeautomation.html#fhem","text":"FHEM-Forum-User Luposoft hat eine kompakte Erkl\u00e4rung der Konfiguration f\u00fcr die Verwendung von FHEM \u00fcber MQTT geschrieben. Vielen Dank!","title":"FHEM"},{"location":"de/homeautomation.html#openhab","text":"Seit Version 2.5.4 gibt es ein Binding , das offiziell Teil von OpenHAB ist.","title":"openHAB"},{"location":"de/homeautomation.html#homematic","text":"FHEM-Forum-User PaulM hat einige Skripte geschrieben, um die Integration von BSB-LAN in Homematic zu demonstrieren. Vielen Dank!","title":"Homematic"},{"location":"de/homeautomation.html#smarthomeng","text":"GitHub-User @thensty hat ein Plugin f\u00fcr SmartHomeNG geschrieben. Vielen Dank!","title":"SmartHomeNG"},{"location":"de/homeautomation.html#volkszaehler","text":"GitHub-User @lapixo hat ein Skript f\u00fcr das Volkszaehler-Projekt beigetragen. Vielen Dank!","title":"Volkszaehler"},{"location":"de/homeautomation.html#bash-skript","text":"GitHub-User @khfm hat Bash-Skripte geschrieben, um Daten abzufragen und sie mithilfe von gnuplot anzuzeigen. Vielen Dank!","title":"Bash-Skript"},{"location":"de/homeautomation.html#austausch-von-daten-uber-mqtt","text":"Dies ist die empfohlene Methode, um BSB-LAN mit Heimautomatisierungssystemen zu verbinden, da sie einen nahtlosen Datenaustausch erm\u00f6glicht. Als Voraussetzung wird ein MQTT-Broker (wie z.B. Mosquitto ) ben\u00f6tigt, der entweder lokal ausgef\u00fchrt wird oder \u00fcber einen \u00f6ffentlichen Dienst genutzt werden kann. Einige Heimautomatisierungssysteme wie Home Assistant bieten die Installation von Mosquitto als Teil ihrer Software an. Achtung: Derzeit scheint der Mosquitto-Broker ab Version 2.0.16 ein Problem mit der Verarbeitung einer gro\u00dfen Anzahl von Nachrichten zu haben ( siehe diesen Bug-Report ). Wenn du das Problem hast, dass deine BSB-LAN-Entit\u00e4ten als \"nicht verf\u00fcgbar\" angezeigt werden, insbesondere nach der Verwendung der Auto-Discovery-Funktion unten, solltest du auf Mosquitto Version 2.0.15 herunterstufen. Beachte jedoch, dass diese Version Sicherheitsl\u00fccken aufweist, daher solltest du sicherstellen, dass dein Broker mindestens in einer Firewall-Umgebung ausgef\u00fchrt wird. In BSB-LAN musst du mindestens die folgenden Konfigurationen vornehmen oder aktivieren: Setze den Logging-Modus (zus\u00e4tzlich) auf Senden an MQTT-Broker . Setze das Log-Intervall auf die Zeit (in Sekunden), in der du die Log-Parameter ver\u00f6ffentlichen m\u00f6chtest. W\u00e4hle bis zu 20 Log-Parameter aus, die du an dein Heimautomatisierungssystem senden m\u00f6chtest. Setze die MQTT-Nutzung auf Plain Text . Setze den MQTT-Broker-Server auf den Hostnamen deines MQTT-Brokers (z.B. den Mosquitto-Server). Wenn dein Heimautomatisierungssystem MQTT Auto-Discovery unterst\u00fctzt (wie bei Home Assistant), kannst du den URL-Befehl /M1!<x> aufrufen und BSB-LAN wird Auto-Discovery-Nachrichten f\u00fcr alle verf\u00fcgbaren Parameter vom Ger\u00e4t mit der ID <x> an den MQTT-Broker und damit an das Heimautomatisierungssystem senden. M\u00f6glicherweise musst du danach aufr\u00e4umen oder eine L\u00f6schnachricht f\u00fcr alle diese Parameter mit dem URL-Befehl /M0!<x> senden, wenn du diese Funktion nicht mehr verwenden m\u00f6chtest. Wenn du deine eigenen Verbindungsdetails einrichten m\u00f6chtest, ist die Topic-Struktur von BSB-LAN wie folgt: <BSB-LAN MQTT Topic>/<Ger\u00e4te-ID>/<Kategorie-Nr.>/<Parameter-Nr.> wobei <BSB-LAN MQTT Topic> in den Einstellungen von BSB-LAN definiert ist (Standardwert ist BSB-LAN ), <Ger\u00e4te-ID> die ID des Heizungsreglers ist (in der Regel 0 f\u00fcr den Hauptregler), <Kategorie-Nr.> die Kategorienummer ist, wie sie mit dem URL-Befehl /K verwendet wird, <Parameter-Nr.> die Parameternummer ist, wie z.B. 501.1 . Diese Struktur wird von einem der folgenden Topics gefolgt, die die auszuf\u00fchrende Aktion bestimmen: /status - enth\u00e4lt den Wert des Parameters in der MQTT-Payload. /set - wird verwendet, um einen Parameter mit dem Wert in der ver\u00f6ffentlichten MQTT-Payload mithilfe des SET-Telegramms (Standardmethode zum Festlegen von Parametern) zu setzen. /inf - \u00e4hnlich wie /set , verwendet aber das INF-Telegramm (wird z.B. zum Senden des Raumtemperaturparameters 10000 verwendet). /poll - ignoriert den ver\u00f6ffentlichten Wert und erzwingt, dass BSB-LAN den /status des gleichen Parameters sofort mit einem neu abgerufenen Parameterwert aktualisiert. /poll kann auch direkt unterhalb des Hauptthemas aufgerufen werden (z.B. BSB-LAN/poll ), wo es eine Liste von Parametern akzeptiert, die durch Kommas getrennt sind. Die /status -Topics dieser Parameter werden dann in einem Schritt aktualisiert. Parameter k\u00f6nnen entweder im Topic-Stil (mit f\u00fchrendem Schr\u00e4gstrich) oder \u00e4hnlich wie die Liste der Logging-Parameter in den BSB-LAN-Einstellungen adressiert werden (siehe Beispiele unten). Gleichzeitig wird die Legacy-Methode zum Senden von URL-Befehlen \u00fcber MQTT direkt an das Hauptthema (wie in den Einstellungen definiert, Standardwert ist BSB-LAN ) aus Kompatibilit\u00e4tsgr\u00fcnden weiterhin unterst\u00fctzt, ist aber veraltet. Antworten werden immer an /status des oben genannten Topic-Struktur geschrieben. Das /status -Topic wird auf vier Arten aktualisiert: \u00fcber Logging-Parameter an MQTT, wie oben erkl\u00e4rt jedes Mal, wenn eine URL-Abfrage an BSB-LAN gesendet wird (kann deaktiviert werden, indem Nur Logging-Parameter an MQTT senden in der Konfiguration aktiviert wird) jedes Mal, wenn ein Parameter \u00fcber die Raumsteuerung ge\u00e4ndert wird (kann deaktiviert werden, indem Nur Logging-Parameter an MQTT senden in der Konfiguration aktiviert wird) jedes Mal, wenn der Parameter \u00fcber das /poll -Topic aktualisiert wird, wie oben erkl\u00e4rt In diesen F\u00e4llen werden die jeweiligen Werte der betroffenen Parameter an den MQTT-Broker gesendet, so dass auch \u00c4nderungen, die au\u00dferhalb von BSB-LAN vorgenommen wurden, an das Heimautomatisierungssystem gesendet werden. Aus diesem Grund ist der MQTT-Ansatz die empfohlene Methode, um eine Verbindung zu einem Heimautomatisierungssystem herzustellen. Dies bedeutet auch, dass du als Alternative zur integrierten Logging-Funktion von BSB-LAN einfach periodisch eine URL mit den Parametern aufrufen kannst, die du aktualisiert sehen m\u00f6chtest. Da diese Parameter auch an den MQTT-Broker gesendet werden, erh\u00e4lt dein Heimautomatisierungssystem sie ebenfalls. Beispielsweise werden, wenn du die URL http://bsb-lan.local/700/8700 periodisch aufrufst, sowohl der Betriebsmodus der Heizkreislauf 1 (Parameter 700) als auch die aktuelle Au\u00dfentemperatur (Parameter 8700) an den MQTT-Broker gesendet.","title":"Austausch von Daten \u00fcber MQTT"},{"location":"de/homeautomation.html#beispiele-fur-das-abfragen-oder-setzen-von-parametern-uber-mqtt-mit-mosquitto","text":"Abfrage der Au\u00dfentemperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 51, Parameter 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status Setze die Komfort-Soll-Temperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 16, Parameter 710) auf 20 Grad: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Erzwinge eine sofortige Aktualisierung der Au\u00dfentemperatur (Ger\u00e4te-ID 0, Kategorie-Nr. 51, Parameter 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Erzwinge eine sofortige Aktualisierung der Parameter 700 und 8700 vom Standardger\u00e4t sowie des Parameters 8326 von Ger\u00e4t mit der ID 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll oder mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Achtung: Bitte beachte, dass die Kategorienummer von System zu System unterschiedlich ist und zuerst mit deinem System verglichen werden muss!","title":"Beispiele f\u00fcr das Abfragen oder Setzen von Parametern \u00fcber MQTT mit Mosquitto"},{"location":"de/homeautomation.html#austausch-von-daten-uber-json","text":"BSB-LAN erm\u00f6glicht das Abfragen und Setzen von Parametern \u00fcber JSON-Strukturen und stellt auf diese Weise auch zahlreiche Informationen \u00fcber die Parameter und Kategoriestrukturen bereit. Die JSON-API wird \u00fcber URL-Befehle aufgerufen und die openapi.yaml -Datei in diesem Repository kann mit Swagger verwendet werden, um ihre M\u00f6glichkeiten und Funktionalit\u00e4ten zu erkunden.","title":"Austausch von Daten \u00fcber JSON"},{"location":"de/homeautomation.html#austausch-von-daten-uber-url-befehle-und-screen-scraping","text":"F\u00fcr einfachere L\u00f6sungen k\u00f6nnen die URL-Befehle zum Abfragen und Setzen von Parametern verwendet werden, um BSB-LAN von anderen Systemen aus zu steuern. Screen Scraping ist m\u00f6glich, da das Projekt versucht, bestimmte Arten der Datendarstellung nicht zu ver\u00e4ndern, so dass das Parsing mit regul\u00e4ren Ausdr\u00fccken weiterhin funktioniert. Dennoch ist f\u00fcr die meisten Szenarien wahrscheinlich eine der anderen Optionen vorzuziehen.","title":"Austausch von Daten \u00fcber URL-Befehle und Screen Scraping"},{"location":"de/install.html","text":"Installation Die Installation von BSB-LAN besteht aus drei Schritten: Installation der Arduino IDE, um die BSB-LAN-Software auf den Mikrocontroller zu flashen Zusammenbau der Hardware-Komponenten Anschluss von BSB-LAN an die Heizung Installation der Arduino IDE und Flashen von BSB-LAN Lade die aktuelle Version von BSB-LAN aus dem Master-Repository herunter Download und entpacke sie, oder verwende git , um das Repository zu klonen clone . Navigiere zum BSB_LAN-Ordner und benenne die folgenden Dateien um: BSB_LAN_custom_defs.h.default in BSB_LAN_custom_defs.h BSB_LAN_config.h.default in BSB_LAN_config.h Lade die Arduino IDE f\u00fcr dein System herunter Download und installiere sie. Verbinde deinen Mikrocontroller (ESP32 oder Arduino Due) mit deinem Computer und starte die Arduino IDE. Gehe zu Tools/Board/Board Manager und stelle sicher, dass das Framework f\u00fcr deine Platine installiert ist (\"esp32 by Espressif Systems\" f\u00fcr ESP32-Mikrocontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" f\u00fcr Arduino Due-Mikrocontroller) Gehe wieder zu Tools/Board und w\u00e4hle deinen Mikrocontroller aus: ESP32 Dev Module f\u00fcr den Joy-It ESP32 NodeMCU. Olimex ESP32-EVB f\u00fcr den ESP32-basierten Olimex EVB. OlimeMultiplier-ESP32-POE-ISO f\u00fcr den ESP32-basierten Olimex POE ISO Arduino Due (Programming Port) f\u00fcr den Arduino Due. Verwende hier nicht den nativen USB-Port! Gehe wieder zu Tools/Board und w\u00e4hle die richtige Upload-Geschwindigkeit aus (bis zu 460800 f\u00fcr ESP32, 115200 f\u00fcr Arduino Due). F\u00fcr ESP32-basierte Mikrocontroller, gehe wieder zu Tools/Board und w\u00e4hle \"Minimal SPIFFS\" als Partitionsschema aus ( verwechsle dies nicht mit dem \u00e4hnlichen \"Minimal\"-Partitionsschema , das anders ist und in unserem Fall nicht funktioniert). Wenn du das falsche Partitionsschema ausw\u00e4hlst, passt die Firmware nicht auf den ESP32! Gehe zu File/Open , navigiere zum BSB_LAN-Ordner und doppelklicke auf BSB_LAN.ino . Das Projekt wird ge\u00f6ffnet. Du kannst jetzt mit der Konfiguration von BSB-LAN fortfahren. Wenn du mit der Konfiguration fertig bist, gehe zu Sketch/Upload und lade die BSB-LAN-Software auf den Mikrocontroller. Der gleiche Prozess ist bei jedem Update zu wiederholen, einschlie\u00dflich des Einspielens der ger\u00e4tespezifischen Parameterliste. Nachfolgende Updates auf ESP32-basierten Mikrocontrollern \"over the air\" (OTA) Wenn du BSB-LAN auf einem ESP32-basierten Mikrocontroller ausf\u00fchrst und Over-the-Air-Updates in den Einstellungen aktiviert hast, kannst du zuk\u00fcnftige Updates von BSB-LAN mit deinem Browser durchf\u00fchren. W\u00e4hle statt Sketch/Upload Sketch/Export Compiled Binary aus. Dadurch wird ein build -Ordner in deinem BSB-LAN-Ordner erstellt, in dem du unter anderem die Datei BSB_LAN.ino.bin findest. \u00d6ffne jetzt http://bsb-lan.local:8080 und w\u00e4hle die Datei zum Hochladen aus. Unterbreche den Upload-Prozess nicht. Du kannst versuchen, BSB-LAN in einem anderen Browser-Fenster zu \u00f6ffnen, um zu sehen, ob der Prozess abgeschlossen ist. Bitte beachte, dass dies nur f\u00fcr ESP32-basierte Mikrocontroller gilt. Arduinos unterst\u00fctzen diese Funktion nicht. Zusammenbau des BSB-LAN-Adapters Du kannst einen fertig montierten Adapter von Frederik (bsb(\u00e4t)code-it.de) beziehen oder ihn selbst bauen (siehe Ordner schematics f\u00fcr die Schaltpl\u00e4ne). Sobald du den BSB-LAN-Adapter hast, musst du ihn nur noch in den Mikrocontroller stecken. Wenn du einen Olimex-Mikrocontroller verwendest, \u00fcberpr\u00fcfe doppelt, ob der Adapter wirklich mittig auf dem Connector sitzt, da er auch dann noch passt, wenn er um eine Pin-Reihe nach links oder rechts versetzt ist. Anschluss von BSB-LAN an die Heizung Sobald der Mikrocontroller und der BSB-LAN-Adapter fertig sind, f\u00fchre die folgenden Schritte aus, um BSB-LAN mit der Heizung zu verbinden: Trenne den Mikrocontroller von deinem Computer und schalte deine Heizung aus. Suche die BSB/LPB/PPS-Anschl\u00fcsse. M\u00f6glicherweise musst du dazu deine Heizung \u00f6ffnen. Schaue in der Liste der unterst\u00fctzten Heizungssysteme nach, um eine Vorstellung davon zu bekommen, wo sich die Pins befinden. All dies geschieht auf eigene Gefahr! Wenn du nicht vorsichtig bist, k\u00f6nntest du deine Ausr\u00fcstung besch\u00e4digen! Achte besonders darauf, elektrostatische Entladungen (ESD) zu verhindern, die sowohl BSB-LAN als auch den Heizungsregler zerst\u00f6ren k\u00f6nnen! Stecke jetzt den BSB-LAN-Adapter auf den Mikrocontroller und verbinde den + Schraubanschluss mit dem CL+ (BSB), DB (LPB) oder A6 (PPS, andere Connector-Namen sind m\u00f6glich) Connector, und den - Schraubanschluss mit dem CL- (BSB), MB (LPB) oder M (PPS) Connector. Wenn es keinen leeren Connector gibt, ist es kein Problem, die Dr\u00e4hte f\u00fcr BSB-LAN an einen bereits \"verwendeten\" Connector anzuschlie\u00dfen, solange die Dr\u00e4hte vorsichtig eingesteckt werden. Bei den Kabeln wird ein (idealerweise abgeschirmtes) verdrilltes Zweileiterkabel empfohlen von Siemens . Allerdings haben auch einige Benutzer gute Erfahrungen mit einfachem Klingeldraht gemacht, solange die Distanzen nicht zu lang sind. Jetzt musst du den Mikrocontroller einschalten. Beachte, dass die Heizung den Mikrocontroller nicht mit Strom versorgt, auch wenn die LED des BSB-LAN-Adapters leuchtet, wenn du ihn mit der Heizung verbindest. Du musst den Mikrocontroller \u00fcber seinen USB-Port (oder \u00fcber PoE auf dem Olimex POE-ISO) mit Strom versorgen. Verwende eine stabile Stromversorgung mit mindestens 2 Ampere. Sobald der Mikrocontroller eingeschaltet ist, schalte die Heizung ein. Die rote LED des BSB-LAN-Adapters sollte leuchten. Sie sollte gelegentlich blinken. \u00d6ffne jetzt deinen Webbrowser und gib die IP-Adresse von BSB-LAN ein. Wenn MDNS aktiviert ist, kannst du direkt zu http://bsb-lan.local gehen. Andernfalls kannst du die IP-Adresse von BSB-LAN entweder in deinem Router finden, oder du verbindest den Mikrocontroller mit deinem PC, \u00f6ffnest die Arduino IDE, gehst zu Tools/Serial Monitor und setzt die Geschwindigkeit des seriellen Monitors auf 115200. Starte den Mikrocontroller neu, und die IP-Adresse wird angezeigt, sobald er mit dem Netzwerk verbunden ist. Generieren der ger\u00e4tespezifischen Parameterliste Wenn du BSB-LAN zum ersten Mal \u00f6ffnest, wirst du feststellen, dass auf der Weboberfl\u00e4che des Ger\u00e4ts nur sehr wenige Parameter angezeigt werden. Dies liegt daran, dass jedes Modell des Siemens-Reglers, der in deine Heizung eingebaut ist, eine andere Gruppe von Parametern unterst\u00fctzt. Fr\u00fcher habe ich eine Liste von Parametern bereitgestellt, die aus allen m\u00f6glichen Heizungssystemen gesammelt wurden, aber es stellte sich heraus, dass diese Liste mehrdeutig war oder sogar Fehler enthielt, die wir nicht zuverl\u00e4ssig beheben konnten. Diese Liste ist immer noch in der Release-Version 2.2.x von BSB-LAN verf\u00fcgbar und kann bei Bedarf von dort kopiert werden. Es wird jedoch davon abgeraten, dies zu tun, da die genannten Mehrdeutigkeiten und Fehler das Risiko bergen, die Heizung falsch zu konfigurieren. Stattdessen wird empfohlen, auf den Button \" Ger\u00e4tespezifische Parameterliste \" im Men\u00fc von BSB-LAN zu klicken und die generierte Liste an Frederik (bsb(\u00e4t)code-it.de) zu senden. Aus dieser Datei kann eine Parameterliste erstellt werden, die genau zu dem Regler deiner Heizung passt. Leider kann dieser Prozess noch nicht automatisiert werden, aber immerhin muss er nur einmal durchgef\u00fchrt werden. Diese Rohdaten enthalten keine Einstellungen oder andere pers\u00f6nliche Daten, sondern nur die Parameterstruktur der Heizung. Es liegt in meinem eigenen Interesse, diese Parameterlisten schnell zu erstellen und zur\u00fcckzusenden, aber ich bitte um Verst\u00e4ndnis, wenn es aufgrund von Arbeits- oder Familienverpflichtungen etwas l\u00e4nger dauert. Sobald du die Parameterliste erhalten hast (oder die aus Version 2.2.x genommen hast), musst du die vorhandene BSB_LAN_custom_defs.h Datei durch die gesendete ersetzen, sie kompilieren und wieder flashen. Jetzt kannst du auf alle Parameter zugreifen.","title":"Zusammenbauen"},{"location":"de/install.html#installation","text":"Die Installation von BSB-LAN besteht aus drei Schritten: Installation der Arduino IDE, um die BSB-LAN-Software auf den Mikrocontroller zu flashen Zusammenbau der Hardware-Komponenten Anschluss von BSB-LAN an die Heizung","title":"Installation"},{"location":"de/install.html#installation-der-arduino-ide-und-flashen-von-bsb-lan","text":"Lade die aktuelle Version von BSB-LAN aus dem Master-Repository herunter Download und entpacke sie, oder verwende git , um das Repository zu klonen clone . Navigiere zum BSB_LAN-Ordner und benenne die folgenden Dateien um: BSB_LAN_custom_defs.h.default in BSB_LAN_custom_defs.h BSB_LAN_config.h.default in BSB_LAN_config.h Lade die Arduino IDE f\u00fcr dein System herunter Download und installiere sie. Verbinde deinen Mikrocontroller (ESP32 oder Arduino Due) mit deinem Computer und starte die Arduino IDE. Gehe zu Tools/Board/Board Manager und stelle sicher, dass das Framework f\u00fcr deine Platine installiert ist (\"esp32 by Espressif Systems\" f\u00fcr ESP32-Mikrocontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" f\u00fcr Arduino Due-Mikrocontroller) Gehe wieder zu Tools/Board und w\u00e4hle deinen Mikrocontroller aus: ESP32 Dev Module f\u00fcr den Joy-It ESP32 NodeMCU. Olimex ESP32-EVB f\u00fcr den ESP32-basierten Olimex EVB. OlimeMultiplier-ESP32-POE-ISO f\u00fcr den ESP32-basierten Olimex POE ISO Arduino Due (Programming Port) f\u00fcr den Arduino Due. Verwende hier nicht den nativen USB-Port! Gehe wieder zu Tools/Board und w\u00e4hle die richtige Upload-Geschwindigkeit aus (bis zu 460800 f\u00fcr ESP32, 115200 f\u00fcr Arduino Due). F\u00fcr ESP32-basierte Mikrocontroller, gehe wieder zu Tools/Board und w\u00e4hle \"Minimal SPIFFS\" als Partitionsschema aus ( verwechsle dies nicht mit dem \u00e4hnlichen \"Minimal\"-Partitionsschema , das anders ist und in unserem Fall nicht funktioniert). Wenn du das falsche Partitionsschema ausw\u00e4hlst, passt die Firmware nicht auf den ESP32! Gehe zu File/Open , navigiere zum BSB_LAN-Ordner und doppelklicke auf BSB_LAN.ino . Das Projekt wird ge\u00f6ffnet. Du kannst jetzt mit der Konfiguration von BSB-LAN fortfahren. Wenn du mit der Konfiguration fertig bist, gehe zu Sketch/Upload und lade die BSB-LAN-Software auf den Mikrocontroller. Der gleiche Prozess ist bei jedem Update zu wiederholen, einschlie\u00dflich des Einspielens der ger\u00e4tespezifischen Parameterliste.","title":"Installation der Arduino IDE und Flashen von BSB-LAN"},{"location":"de/install.html#nachfolgende-updates-auf-esp32-basierten-mikrocontrollern-over-the-air-ota","text":"Wenn du BSB-LAN auf einem ESP32-basierten Mikrocontroller ausf\u00fchrst und Over-the-Air-Updates in den Einstellungen aktiviert hast, kannst du zuk\u00fcnftige Updates von BSB-LAN mit deinem Browser durchf\u00fchren. W\u00e4hle statt Sketch/Upload Sketch/Export Compiled Binary aus. Dadurch wird ein build -Ordner in deinem BSB-LAN-Ordner erstellt, in dem du unter anderem die Datei BSB_LAN.ino.bin findest. \u00d6ffne jetzt http://bsb-lan.local:8080 und w\u00e4hle die Datei zum Hochladen aus. Unterbreche den Upload-Prozess nicht. Du kannst versuchen, BSB-LAN in einem anderen Browser-Fenster zu \u00f6ffnen, um zu sehen, ob der Prozess abgeschlossen ist. Bitte beachte, dass dies nur f\u00fcr ESP32-basierte Mikrocontroller gilt. Arduinos unterst\u00fctzen diese Funktion nicht.","title":"Nachfolgende Updates auf ESP32-basierten Mikrocontrollern \"over the air\" (OTA)"},{"location":"de/install.html#zusammenbau-des-bsb-lan-adapters","text":"Du kannst einen fertig montierten Adapter von Frederik (bsb(\u00e4t)code-it.de) beziehen oder ihn selbst bauen (siehe Ordner schematics f\u00fcr die Schaltpl\u00e4ne). Sobald du den BSB-LAN-Adapter hast, musst du ihn nur noch in den Mikrocontroller stecken. Wenn du einen Olimex-Mikrocontroller verwendest, \u00fcberpr\u00fcfe doppelt, ob der Adapter wirklich mittig auf dem Connector sitzt, da er auch dann noch passt, wenn er um eine Pin-Reihe nach links oder rechts versetzt ist.","title":"Zusammenbau des BSB-LAN-Adapters"},{"location":"de/install.html#anschluss-von-bsb-lan-an-die-heizung","text":"Sobald der Mikrocontroller und der BSB-LAN-Adapter fertig sind, f\u00fchre die folgenden Schritte aus, um BSB-LAN mit der Heizung zu verbinden: Trenne den Mikrocontroller von deinem Computer und schalte deine Heizung aus. Suche die BSB/LPB/PPS-Anschl\u00fcsse. M\u00f6glicherweise musst du dazu deine Heizung \u00f6ffnen. Schaue in der Liste der unterst\u00fctzten Heizungssysteme nach, um eine Vorstellung davon zu bekommen, wo sich die Pins befinden. All dies geschieht auf eigene Gefahr! Wenn du nicht vorsichtig bist, k\u00f6nntest du deine Ausr\u00fcstung besch\u00e4digen! Achte besonders darauf, elektrostatische Entladungen (ESD) zu verhindern, die sowohl BSB-LAN als auch den Heizungsregler zerst\u00f6ren k\u00f6nnen! Stecke jetzt den BSB-LAN-Adapter auf den Mikrocontroller und verbinde den + Schraubanschluss mit dem CL+ (BSB), DB (LPB) oder A6 (PPS, andere Connector-Namen sind m\u00f6glich) Connector, und den - Schraubanschluss mit dem CL- (BSB), MB (LPB) oder M (PPS) Connector. Wenn es keinen leeren Connector gibt, ist es kein Problem, die Dr\u00e4hte f\u00fcr BSB-LAN an einen bereits \"verwendeten\" Connector anzuschlie\u00dfen, solange die Dr\u00e4hte vorsichtig eingesteckt werden. Bei den Kabeln wird ein (idealerweise abgeschirmtes) verdrilltes Zweileiterkabel empfohlen von Siemens . Allerdings haben auch einige Benutzer gute Erfahrungen mit einfachem Klingeldraht gemacht, solange die Distanzen nicht zu lang sind. Jetzt musst du den Mikrocontroller einschalten. Beachte, dass die Heizung den Mikrocontroller nicht mit Strom versorgt, auch wenn die LED des BSB-LAN-Adapters leuchtet, wenn du ihn mit der Heizung verbindest. Du musst den Mikrocontroller \u00fcber seinen USB-Port (oder \u00fcber PoE auf dem Olimex POE-ISO) mit Strom versorgen. Verwende eine stabile Stromversorgung mit mindestens 2 Ampere. Sobald der Mikrocontroller eingeschaltet ist, schalte die Heizung ein. Die rote LED des BSB-LAN-Adapters sollte leuchten. Sie sollte gelegentlich blinken. \u00d6ffne jetzt deinen Webbrowser und gib die IP-Adresse von BSB-LAN ein. Wenn MDNS aktiviert ist, kannst du direkt zu http://bsb-lan.local gehen. Andernfalls kannst du die IP-Adresse von BSB-LAN entweder in deinem Router finden, oder du verbindest den Mikrocontroller mit deinem PC, \u00f6ffnest die Arduino IDE, gehst zu Tools/Serial Monitor und setzt die Geschwindigkeit des seriellen Monitors auf 115200. Starte den Mikrocontroller neu, und die IP-Adresse wird angezeigt, sobald er mit dem Netzwerk verbunden ist.","title":"Anschluss von BSB-LAN an die Heizung"},{"location":"de/install.html#generieren-der-geratespezifischen-parameterliste","text":"Wenn du BSB-LAN zum ersten Mal \u00f6ffnest, wirst du feststellen, dass auf der Weboberfl\u00e4che des Ger\u00e4ts nur sehr wenige Parameter angezeigt werden. Dies liegt daran, dass jedes Modell des Siemens-Reglers, der in deine Heizung eingebaut ist, eine andere Gruppe von Parametern unterst\u00fctzt. Fr\u00fcher habe ich eine Liste von Parametern bereitgestellt, die aus allen m\u00f6glichen Heizungssystemen gesammelt wurden, aber es stellte sich heraus, dass diese Liste mehrdeutig war oder sogar Fehler enthielt, die wir nicht zuverl\u00e4ssig beheben konnten. Diese Liste ist immer noch in der Release-Version 2.2.x von BSB-LAN verf\u00fcgbar und kann bei Bedarf von dort kopiert werden. Es wird jedoch davon abgeraten, dies zu tun, da die genannten Mehrdeutigkeiten und Fehler das Risiko bergen, die Heizung falsch zu konfigurieren. Stattdessen wird empfohlen, auf den Button \" Ger\u00e4tespezifische Parameterliste \" im Men\u00fc von BSB-LAN zu klicken und die generierte Liste an Frederik (bsb(\u00e4t)code-it.de) zu senden. Aus dieser Datei kann eine Parameterliste erstellt werden, die genau zu dem Regler deiner Heizung passt. Leider kann dieser Prozess noch nicht automatisiert werden, aber immerhin muss er nur einmal durchgef\u00fchrt werden. Diese Rohdaten enthalten keine Einstellungen oder andere pers\u00f6nliche Daten, sondern nur die Parameterstruktur der Heizung. Es liegt in meinem eigenen Interesse, diese Parameterlisten schnell zu erstellen und zur\u00fcckzusenden, aber ich bitte um Verst\u00e4ndnis, wenn es aufgrund von Arbeits- oder Familienverpflichtungen etwas l\u00e4nger dauert. Sobald du die Parameterliste erhalten hast (oder die aus Version 2.2.x genommen hast), musst du die vorhandene BSB_LAN_custom_defs.h Datei durch die gesendete ersetzen, sie kompilieren und wieder flashen. Jetzt kannst du auf alle Parameter zugreifen.","title":"Generieren der ger\u00e4tespezifischen Parameterliste"},{"location":"de/list_of_controllers.html","text":"AVS37, [AVS55 zusammen mit RVS21-AVS55], AVS71, AVS74, AVS75, AVS77, AVS79, [LMS14 doppelt], [LMS15 zusammen mit LMS14], [LMU54 zusammen mit LMU64], [LMU64 doppelt], [LMU74 doppelt], [LMU75 zusammen mit LMU74], RVA33, RVA36, RVA43, RVA46, RVA47, [RVA53 doppelt], RVA60, RVA61, [RVA63 doppelt], RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, [RVP54 doppelt], RVP5xx, [RVS13 doppelt], [RVS21 doppelt], [RVS23 doppelt], RVS26, [RVS41 doppelt], [RVS43 doppelt], [RVS46 doppelt], RVS47, [RVS51 doppelt], [RVS53 doppelt], [RVS61 doppelt], [RVS63 doppelt], [RVS65 doppelt], RVS68, RWI65, WRI80. Ich hoffe, das hilft dir weiter! Lass es mich wissen, wenn du noch etwas anderes brauchst.","title":"List of controllers"},{"location":"de/quickstart.html","text":"Kurzanleitung Diese Kurzanleitung ist f\u00fcr Nutzer gedacht, die Erfahrung mit der Installation und Konfiguration von Software auf ihrem Computer haben. Wenn du detailliertere Anweisungen ben\u00f6tigst, wirf bitte einen Blick in die Installationsanweisungen ! Stelle sicher, dass deine Heizung mit BSB-LAN kompatibel ist! Lade die aktuelle BSB-LAN Version aus dem Master Repository herunter und entpacke sie, oder verwende git um das Repository zu klonen . Navigiere zum BSB_LAN Ordner und benenne die folgenden Dateien um: BSB_LAN_custom_defs.h.default in BSB_LAN_custom_defs.h BSB_LAN_config.h.default in BSB_LAN_config.h Lade die Arduino IDE f\u00fcr dein System herunter und installiere sie. Verbinde deinen Mikrocontroller (ESP32 oder Arduino Due) mit deinem Computer und starte die Arduino IDE. Gehe zu Tools/Board/Board Manager und stelle sicher, dass das Framework f\u00fcr deine Platine installiert ist (\"esp32 by Espressif Systems\" f\u00fcr ESP32 Mikrocontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" f\u00fcr Arduino Due Mikrocontroller) Gehe wieder zu Tools/Board und w\u00e4hle deinen Mikrocontroller aus: ESP32 Dev Module f\u00fcr den Joy-It ESP32 NodeMCU. Olimex ESP32-EVB f\u00fcr den ESP32-basierten Olimex EVB. Olimex ESP32-POE-ISO f\u00fcr den ESP32-basierten Olimex POE ISO Arduino Due (Programming Port) f\u00fcr den Arduino Due. Verwende hier nicht den nativen USB Port! Gehe wieder zu Tools/Board und w\u00e4hle die richtige Upload-Geschwindigkeit aus (bis zu 460800 f\u00fcr ESP32, 115200 f\u00fcr Arduino Due). F\u00fcr ESP32-basierte Mikrocontroller, gehe wieder zu Tools/Partition Scheme und w\u00e4hle \"Minimal SPIFFS\" als Partitionsschema aus ( verwechsele dies nicht mit dem \u00e4hnlichen \"Minimal\" Partitionsschema , welches anders ist und in unserem Fall nicht funktioniert). Wenn du das falsche Partitionsschema ausw\u00e4hlst, passt die Firmware nicht auf den ESP32! Gehe zu File/Open und navigiere zum BSB_LAN Ordner, doppelklicke dann auf BSB_LAN.ino . Das Projekt wird ge\u00f6ffnet. Klicke auf die Registerkarte mit dem Dateinamen BSB_LAN_config.h und konfiguriere mindestens Folgendes: Suche nach #define LANG DE : \u00c4ndere DE zu EN f\u00fcr Englisch, FR f\u00fcr Franz\u00f6sisch usw. Suche nach uint8_t network_type : Setze dies auf LAN , wenn du eine Ethernet/LAN Verbindung verwendest. Setze es auf WLAN , wenn du eine WiFi/WLAN Verbindung verwendest. Wenn du DHCP nicht verwendest, konfiguriere die folgenden Optionen entsprechend deinem Netzwerk (stelle sicher, dass du ein Komma anstelle eines Punkts f\u00fcr IP-Adressen verwendest!): byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Klicke jetzt auf Sketch/Upload , um die BSB-LAN Software auf den Mikrocontroller zu laden. Trenne den Mikrocontroller und schalte deine Heizung aus. Suche die BSB/LPB/PPS Anschl\u00fcsse. M\u00f6glicherweise musst du dazu deine Heizung \u00f6ffnen. Du machst all dies auf eigene Gefahr! Verbinde jetzt den BSB-LAN Adapter mit dem Mikrocontroller und verbinde den + Schraubanschluss mit dem CL+ (BSB), DB (LPB) oder A6 (PPS, andere Bezeichnungen sind m\u00f6glich) Anschluss, und den - Schraubanschluss mit dem CL- (BSB), MB (LPB) oder M (PPS) Anschluss. Schalte den Mikrocontroller \u00fcber den USB-Port oder PoE (nur Olimex POE-ISO) ein. Schalte dann die Heizung ein. Die rote LED des BSB-LAN Adapters sollte leuchten. Sie sollte gelegentlich blinken. \u00d6ffne jetzt deinen Webbrowser und gib die IP-Adresse von BSB-LAN ein. Wenn MDNS aktiviert ist, kannst du direkt zu http://bsb-lan.local gehen. Du findest die IP-Adresse von BSB-LAN entweder in deinem Router oder du verbindest den Mikrocontroller mit deinem PC, \u00f6ffnest die Arduino IDE und gehst zu Tools/Serial Monitor . Starte den Mikrocontroller neu, und die IP-Adresse wird angezeigt, sobald er mit dem Netzwerk verbunden ist. Fertig :-) Es funktioniert nicht! Bitte stelle sicher, dass du jeden Eintrag in der Troubleshooting-Sektion \u00fcberpr\u00fcft hast, bevor du dich an uns wendest! Warum sehe ich nur so wenige Parameter? Wenn du BSB-LAN zum ersten Mal verwendest, wirst du feststellen, dass auf der Weboberfl\u00e4che des Ger\u00e4ts nur sehr wenige Parameter angezeigt werden. Das liegt daran, dass jeder Modelltyp des Siemens-Controllers, der in deine Heizung eingebaut ist, eine andere Gruppe von Parametern unterst\u00fctzt. Fr\u00fcher habe ich eine Liste von Parametern bereitgestellt, die aus allen m\u00f6glichen Heizungssystemen gesammelt wurden, aber es stellte sich heraus, dass diese Liste mehrdeutig war oder sogar Fehler enthielt, die wir nicht zuverl\u00e4ssig beheben konnten. Diese Liste ist immer noch in der Release-Version 2.2.x von BSB-LAN verf\u00fcgbar und kann bei Bedarf von dort kopiert werden. Es wird jedoch davon abgeraten, dies zu tun, da die genannten Mehrdeutigkeiten und Fehler das Risiko bergen, die Heizung falsch zu konfigurieren. Stattdessen wird empfohlen, auf den Knopf \" Ger\u00e4tespezifische Parameterliste \" in BSB-LANs Men\u00fc zu klicken und die generierte Liste an Frederik (bsb(\u00e4t)code-it.de) zu senden. Aus dieser Datei kann eine Parameterliste erstellt werden, die genau zu dem Controller deiner Heizung passt. Leider kann dieser Prozess noch nicht automatisiert werden, aber immerhin muss er nur einmal durchgef\u00fchrt werden. Diese Rohdaten enthalten keine Einstellungen oder andere pers\u00f6nliche Daten, sondern nur die Parameterstruktur deiner Heizung. Es liegt in meinem eigenen Interesse, diese Parameterlisten schnell zu erstellen und zur\u00fcckzusenden, aber ich bitte um Verst\u00e4ndnis, wenn es aufgrund von Arbeit oder famili\u00e4ren Verpflichtungen etwas l\u00e4nger dauert.","title":"Schnellstart"},{"location":"de/quickstart.html#kurzanleitung","text":"Diese Kurzanleitung ist f\u00fcr Nutzer gedacht, die Erfahrung mit der Installation und Konfiguration von Software auf ihrem Computer haben. Wenn du detailliertere Anweisungen ben\u00f6tigst, wirf bitte einen Blick in die Installationsanweisungen ! Stelle sicher, dass deine Heizung mit BSB-LAN kompatibel ist! Lade die aktuelle BSB-LAN Version aus dem Master Repository herunter und entpacke sie, oder verwende git um das Repository zu klonen . Navigiere zum BSB_LAN Ordner und benenne die folgenden Dateien um: BSB_LAN_custom_defs.h.default in BSB_LAN_custom_defs.h BSB_LAN_config.h.default in BSB_LAN_config.h Lade die Arduino IDE f\u00fcr dein System herunter und installiere sie. Verbinde deinen Mikrocontroller (ESP32 oder Arduino Due) mit deinem Computer und starte die Arduino IDE. Gehe zu Tools/Board/Board Manager und stelle sicher, dass das Framework f\u00fcr deine Platine installiert ist (\"esp32 by Espressif Systems\" f\u00fcr ESP32 Mikrocontroller, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" f\u00fcr Arduino Due Mikrocontroller) Gehe wieder zu Tools/Board und w\u00e4hle deinen Mikrocontroller aus: ESP32 Dev Module f\u00fcr den Joy-It ESP32 NodeMCU. Olimex ESP32-EVB f\u00fcr den ESP32-basierten Olimex EVB. Olimex ESP32-POE-ISO f\u00fcr den ESP32-basierten Olimex POE ISO Arduino Due (Programming Port) f\u00fcr den Arduino Due. Verwende hier nicht den nativen USB Port! Gehe wieder zu Tools/Board und w\u00e4hle die richtige Upload-Geschwindigkeit aus (bis zu 460800 f\u00fcr ESP32, 115200 f\u00fcr Arduino Due). F\u00fcr ESP32-basierte Mikrocontroller, gehe wieder zu Tools/Partition Scheme und w\u00e4hle \"Minimal SPIFFS\" als Partitionsschema aus ( verwechsele dies nicht mit dem \u00e4hnlichen \"Minimal\" Partitionsschema , welches anders ist und in unserem Fall nicht funktioniert). Wenn du das falsche Partitionsschema ausw\u00e4hlst, passt die Firmware nicht auf den ESP32! Gehe zu File/Open und navigiere zum BSB_LAN Ordner, doppelklicke dann auf BSB_LAN.ino . Das Projekt wird ge\u00f6ffnet. Klicke auf die Registerkarte mit dem Dateinamen BSB_LAN_config.h und konfiguriere mindestens Folgendes: Suche nach #define LANG DE : \u00c4ndere DE zu EN f\u00fcr Englisch, FR f\u00fcr Franz\u00f6sisch usw. Suche nach uint8_t network_type : Setze dies auf LAN , wenn du eine Ethernet/LAN Verbindung verwendest. Setze es auf WLAN , wenn du eine WiFi/WLAN Verbindung verwendest. Wenn du DHCP nicht verwendest, konfiguriere die folgenden Optionen entsprechend deinem Netzwerk (stelle sicher, dass du ein Komma anstelle eines Punkts f\u00fcr IP-Adressen verwendest!): byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Klicke jetzt auf Sketch/Upload , um die BSB-LAN Software auf den Mikrocontroller zu laden. Trenne den Mikrocontroller und schalte deine Heizung aus. Suche die BSB/LPB/PPS Anschl\u00fcsse. M\u00f6glicherweise musst du dazu deine Heizung \u00f6ffnen. Du machst all dies auf eigene Gefahr! Verbinde jetzt den BSB-LAN Adapter mit dem Mikrocontroller und verbinde den + Schraubanschluss mit dem CL+ (BSB), DB (LPB) oder A6 (PPS, andere Bezeichnungen sind m\u00f6glich) Anschluss, und den - Schraubanschluss mit dem CL- (BSB), MB (LPB) oder M (PPS) Anschluss. Schalte den Mikrocontroller \u00fcber den USB-Port oder PoE (nur Olimex POE-ISO) ein. Schalte dann die Heizung ein. Die rote LED des BSB-LAN Adapters sollte leuchten. Sie sollte gelegentlich blinken. \u00d6ffne jetzt deinen Webbrowser und gib die IP-Adresse von BSB-LAN ein. Wenn MDNS aktiviert ist, kannst du direkt zu http://bsb-lan.local gehen. Du findest die IP-Adresse von BSB-LAN entweder in deinem Router oder du verbindest den Mikrocontroller mit deinem PC, \u00f6ffnest die Arduino IDE und gehst zu Tools/Serial Monitor . Starte den Mikrocontroller neu, und die IP-Adresse wird angezeigt, sobald er mit dem Netzwerk verbunden ist. Fertig :-)","title":"Kurzanleitung"},{"location":"de/quickstart.html#es-funktioniert-nicht","text":"Bitte stelle sicher, dass du jeden Eintrag in der Troubleshooting-Sektion \u00fcberpr\u00fcft hast, bevor du dich an uns wendest!","title":"Es funktioniert nicht!"},{"location":"de/quickstart.html#warum-sehe-ich-nur-so-wenige-parameter","text":"Wenn du BSB-LAN zum ersten Mal verwendest, wirst du feststellen, dass auf der Weboberfl\u00e4che des Ger\u00e4ts nur sehr wenige Parameter angezeigt werden. Das liegt daran, dass jeder Modelltyp des Siemens-Controllers, der in deine Heizung eingebaut ist, eine andere Gruppe von Parametern unterst\u00fctzt. Fr\u00fcher habe ich eine Liste von Parametern bereitgestellt, die aus allen m\u00f6glichen Heizungssystemen gesammelt wurden, aber es stellte sich heraus, dass diese Liste mehrdeutig war oder sogar Fehler enthielt, die wir nicht zuverl\u00e4ssig beheben konnten. Diese Liste ist immer noch in der Release-Version 2.2.x von BSB-LAN verf\u00fcgbar und kann bei Bedarf von dort kopiert werden. Es wird jedoch davon abgeraten, dies zu tun, da die genannten Mehrdeutigkeiten und Fehler das Risiko bergen, die Heizung falsch zu konfigurieren. Stattdessen wird empfohlen, auf den Knopf \" Ger\u00e4tespezifische Parameterliste \" in BSB-LANs Men\u00fc zu klicken und die generierte Liste an Frederik (bsb(\u00e4t)code-it.de) zu senden. Aus dieser Datei kann eine Parameterliste erstellt werden, die genau zu dem Controller deiner Heizung passt. Leider kann dieser Prozess noch nicht automatisiert werden, aber immerhin muss er nur einmal durchgef\u00fchrt werden. Diese Rohdaten enthalten keine Einstellungen oder andere pers\u00f6nliche Daten, sondern nur die Parameterstruktur deiner Heizung. Es liegt in meinem eigenen Interesse, diese Parameterlisten schnell zu erstellen und zur\u00fcckzusenden, aber ich bitte um Verst\u00e4ndnis, wenn es aufgrund von Arbeit oder famili\u00e4ren Verpflichtungen etwas l\u00e4nger dauert.","title":"Warum sehe ich nur so wenige Parameter?"},{"location":"de/supported_heating_systems.html","text":"Unterst\u00fctzte Heizungssysteme BSB-LAN unterst\u00fctzt Heizungssysteme, die entweder mit dem BSB (Boiler System Bus) , dem LPB (Local Process Bus) oder der PPS (Punkt-zu-Punkt-Schnittstelle) kommunizieren. Diese Steuerger\u00e4te werden normalerweise von Siemens hergestellt, bei \u00e4lteren Ger\u00e4ten kann aber auch noch der Firmenname \"Landis & Stafea\" oder \"Landis & Gyr\" auftauchen. Wir haben eine Liste mit funktionierenden Modellen von verschiedenen Herstellern von Heizungssystemen zusammengestellt, die mit BSB-LAN getestet wurden. Allerdings kann es vorkommen, dass die Hersteller den Modellnamen beibehalten, aber die Steuerung auf ein anderes System umstellen, daher solltest du immer doppelt \u00fcberpr\u00fcfen, ob die richtigen Anschl\u00fcsse vorhanden sind. Hier sind ein paar Beispiele von Heizungssteuerungen und den entsprechenden Anschl\u00fcssen, die f\u00fcr die Verbindung mit BSB-LAN verwendet werden. Einige Anschl\u00fcsse haben drei Pins, andere nur zwei. Wenn drei Pins vorhanden sind, stelle bitte sicher, dass du die richtigen zwei ausw\u00e4hlst (CL+ und CL-) , da der dritte Pin (G+) f\u00fcr die Hintergrundbeleuchtung der Raumeinheit zust\u00e4ndig ist. Er wird BSB-LAN nicht besch\u00e4digen, kann aber verwirrend sein, da die LED von BSB-LAN leuchtet, obwohl es nicht richtig angeschlossen ist. \u00dcbrigens: Wenn du nur einen Anschluss hast und dieser bereits von einer Raumeinheit belegt ist, kannst du BSB-LAN ohne Probleme an den gleichen Anschluss anschlie\u00dfen. Sei nur vorsichtig, wenn du die Dr\u00e4hte f\u00fcr BSB-LAN hinzuf\u00fcgst. Steuerger\u00e4t Bild Bemerkungen LMS14 LMS15 BSB-Anschluss: + = Links - = Mitte LMS14 LMS15 BSB-Anschluss: CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista BSB-Anschluss: Anschlussklemme M2 Pin 2: CL- Pin 3: CL+ Ausf\u00fchrliche Anweisungen findest du hier f\u00fcr Baxi Luna Platinum . LMU54 LMU64 LPB-Anschluss: \u00fcber zus\u00e4tzliches OCI420-Plugin, siehe Details unten . LMU74 LMU75 BSB-Anschluss: + = Oben - = Mitte LPB-Anschluss: \u00fcber zus\u00e4tzliches OCI420-Plugin RVA53 PPS-Anschluss: A6/MD RVA63 LPB-Anschluss: MB/DB PPS-Anschluss: A6/MD RVP54 PPS-Anschluss: A6/M RVS13 BSB-Anschluss: CL+/CL- RVS21 BSB-Anschluss \u00fcber Stecker X86 + = rechtester Pin - = zweiter Pin von rechts RVS21 mit AVS55 AVS55-Erweiterungsmodul, auf RVS21 aufgesetzt. BSB-Anschluss entweder \u00fcber Stecker X86: + = rechtester Pin - = zweiter Pin von rechts oder \u00fcber Stecker X150: + = oberster Pin - = zweiter Pin von oben RVS23 LPB-Anschluss: LPB/M RVS41 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS43 LOGON B BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS46 ISR-ZR1 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS46 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS51 BSB-Anschluss: CL+/CL- RVS53 BSB-Anschluss: CL+/CL- RVS61 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS63 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS65 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB Konfigurationseinstellungen f\u00fcr OCI420 Es kann etwas knifflig sein, das OCI420 zum Laufen zu bringen, wenn es nicht bereits Teil eines bestehenden LPB-Netzwerks ist. Wenn du das OCI420 zum ersten Mal an deine Heizung anschlie\u00dft und kein anderes LPB-Heizger\u00e4t hast, wirst du wahrscheinlich \"Fehler 81\" erhalten, was auf einen Busfehler hinweist. Mach dir aber keine Sorgen, es ist wahrscheinlich nur eine Frage der Konfiguration einiger Parameter. F\u00fcr den LMU64 ist der entsprechende Parameter 604 ( LPBKonfig0 ). Er muss wie folgt eingestellt werden, um BSB-LAN als einziges an das OCI420 angeschlossenes Ger\u00e4t zu verwenden: 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Dann musst du die LPB-Adresse des OCI420 in den Parametern 605 (muss auf 1 gesetzt werden) und 606 (muss auf 0 gesetzt werden) einstellen. Danach sollte keine Fehlermeldung mehr erscheinen und die rote LED des OCI420 sollte in regelm\u00e4\u00dfigen Abst\u00e4nden blinken, und du bist bereit, BSB-LAN anzuschlie\u00dfen und zu verwenden. Achtung: Wenn das OCI420 bereits mit einem anderen LPB-Ger\u00e4t verbunden ist, nimm hier keine \u00c4nderungen vor und verbinde BSB-LAN stattdessen mit dem anderen LPB-Ger\u00e4t. Es sollte ohne Anpassungen funktionieren. Liste der funktionierenden Steuerger\u00e4temodelle Es gibt noch viele weitere Steuerger\u00e4te, die wahrscheinlich mit BSB-LAN funktionieren. Achte auf diese Siemens-Steuerger\u00e4temodelle in deinem Heizungssystem: AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"Unterst\u00fctzte Heizungssysteme"},{"location":"de/supported_heating_systems.html#unterstutzte-heizungssysteme","text":"BSB-LAN unterst\u00fctzt Heizungssysteme, die entweder mit dem BSB (Boiler System Bus) , dem LPB (Local Process Bus) oder der PPS (Punkt-zu-Punkt-Schnittstelle) kommunizieren. Diese Steuerger\u00e4te werden normalerweise von Siemens hergestellt, bei \u00e4lteren Ger\u00e4ten kann aber auch noch der Firmenname \"Landis & Stafea\" oder \"Landis & Gyr\" auftauchen. Wir haben eine Liste mit funktionierenden Modellen von verschiedenen Herstellern von Heizungssystemen zusammengestellt, die mit BSB-LAN getestet wurden. Allerdings kann es vorkommen, dass die Hersteller den Modellnamen beibehalten, aber die Steuerung auf ein anderes System umstellen, daher solltest du immer doppelt \u00fcberpr\u00fcfen, ob die richtigen Anschl\u00fcsse vorhanden sind. Hier sind ein paar Beispiele von Heizungssteuerungen und den entsprechenden Anschl\u00fcssen, die f\u00fcr die Verbindung mit BSB-LAN verwendet werden. Einige Anschl\u00fcsse haben drei Pins, andere nur zwei. Wenn drei Pins vorhanden sind, stelle bitte sicher, dass du die richtigen zwei ausw\u00e4hlst (CL+ und CL-) , da der dritte Pin (G+) f\u00fcr die Hintergrundbeleuchtung der Raumeinheit zust\u00e4ndig ist. Er wird BSB-LAN nicht besch\u00e4digen, kann aber verwirrend sein, da die LED von BSB-LAN leuchtet, obwohl es nicht richtig angeschlossen ist. \u00dcbrigens: Wenn du nur einen Anschluss hast und dieser bereits von einer Raumeinheit belegt ist, kannst du BSB-LAN ohne Probleme an den gleichen Anschluss anschlie\u00dfen. Sei nur vorsichtig, wenn du die Dr\u00e4hte f\u00fcr BSB-LAN hinzuf\u00fcgst. Steuerger\u00e4t Bild Bemerkungen LMS14 LMS15 BSB-Anschluss: + = Links - = Mitte LMS14 LMS15 BSB-Anschluss: CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista BSB-Anschluss: Anschlussklemme M2 Pin 2: CL- Pin 3: CL+ Ausf\u00fchrliche Anweisungen findest du hier f\u00fcr Baxi Luna Platinum . LMU54 LMU64 LPB-Anschluss: \u00fcber zus\u00e4tzliches OCI420-Plugin, siehe Details unten . LMU74 LMU75 BSB-Anschluss: + = Oben - = Mitte LPB-Anschluss: \u00fcber zus\u00e4tzliches OCI420-Plugin RVA53 PPS-Anschluss: A6/MD RVA63 LPB-Anschluss: MB/DB PPS-Anschluss: A6/MD RVP54 PPS-Anschluss: A6/M RVS13 BSB-Anschluss: CL+/CL- RVS21 BSB-Anschluss \u00fcber Stecker X86 + = rechtester Pin - = zweiter Pin von rechts RVS21 mit AVS55 AVS55-Erweiterungsmodul, auf RVS21 aufgesetzt. BSB-Anschluss entweder \u00fcber Stecker X86: + = rechtester Pin - = zweiter Pin von rechts oder \u00fcber Stecker X150: + = oberster Pin - = zweiter Pin von oben RVS23 LPB-Anschluss: LPB/M RVS41 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS43 LOGON B BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS46 ISR-ZR1 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS46 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS51 BSB-Anschluss: CL+/CL- RVS53 BSB-Anschluss: CL+/CL- RVS61 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS63 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB RVS65 BSB-Anschluss: CL+/CL- LPB-Anschluss: MB/DB","title":"Unterst\u00fctzte Heizungssysteme"},{"location":"de/supported_heating_systems.html#konfigurationseinstellungen-fur-oci420","text":"Es kann etwas knifflig sein, das OCI420 zum Laufen zu bringen, wenn es nicht bereits Teil eines bestehenden LPB-Netzwerks ist. Wenn du das OCI420 zum ersten Mal an deine Heizung anschlie\u00dft und kein anderes LPB-Heizger\u00e4t hast, wirst du wahrscheinlich \"Fehler 81\" erhalten, was auf einen Busfehler hinweist. Mach dir aber keine Sorgen, es ist wahrscheinlich nur eine Frage der Konfiguration einiger Parameter. F\u00fcr den LMU64 ist der entsprechende Parameter 604 ( LPBKonfig0 ). Er muss wie folgt eingestellt werden, um BSB-LAN als einziges an das OCI420 angeschlossenes Ger\u00e4t zu verwenden: 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Dann musst du die LPB-Adresse des OCI420 in den Parametern 605 (muss auf 1 gesetzt werden) und 606 (muss auf 0 gesetzt werden) einstellen. Danach sollte keine Fehlermeldung mehr erscheinen und die rote LED des OCI420 sollte in regelm\u00e4\u00dfigen Abst\u00e4nden blinken, und du bist bereit, BSB-LAN anzuschlie\u00dfen und zu verwenden. Achtung: Wenn das OCI420 bereits mit einem anderen LPB-Ger\u00e4t verbunden ist, nimm hier keine \u00c4nderungen vor und verbinde BSB-LAN stattdessen mit dem anderen LPB-Ger\u00e4t. Es sollte ohne Anpassungen funktionieren.","title":"Konfigurationseinstellungen f\u00fcr OCI420"},{"location":"de/supported_heating_systems.html#liste-der-funktionierenden-steuergeratemodelle","text":"Es gibt noch viele weitere Steuerger\u00e4te, die wahrscheinlich mit BSB-LAN funktionieren. Achte auf diese Siemens-Steuerger\u00e4temodelle in deinem Heizungssystem: AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"Liste der funktionierenden Steuerger\u00e4temodelle"},{"location":"de/supported_models.html","text":"Unterst\u00fctzte Modelle verschiedener Hersteller Dies ist eine Liste von Modellen verschiedener Hersteller, die in der Vergangenheit mit BSB-LAN getestet wurden. Bitte beachte, dass die Hersteller jederzeit die technischen Spezifikationen, einschlie\u00dflich des Controllers, \u00e4ndern k\u00f6nnen, ohne den Modellnamen (oder nur einen sehr kleinen Teil davon) zu \u00e4ndern. Wenn wir von solchen \u00c4nderungen erfahren, werden wir sie hier auflisten, aber offensichtlich ist diese Liste in beide Richtungen nicht vollst\u00e4ndig. Also \u00fcberpr\u00fcfe in jedem Fall selbst, ob deine Heizung die notwendigen Anschl\u00fcsse f\u00fcr die Verwendung von BSB-LAN hat. Br\u00f6tje: BBK, BBS, BGB, BLW ( siehe Ausnahmen unten! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( siehe Ausnahmen unten! ), WMC, WMS, WOB Nicht funktionierende Br\u00f6tje-Modelle: BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch: W\u00e4rmepumpen mit RVS-Controllertyp Elco: Aerotop, Aquatop, Rendamax, Straton, Thision ( nicht Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG: QR Atlantic: Alf\u00e9a, Axeo, Excellia, Extensa, Hynea Hybrid Duo Gaz, Navistem, Perfinox, Varmax Austria Email: LWP, LWPK Baxi: Luna Platinum, Luna Duo, Block Kondens Boesch: SLS Chapp\u00e9e: Luna, Klista CitrinSolar: proClima CTA: Optiheat CTC: 380 IC Deville: 9942, 9981 Eco: AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar: Ecodense WT-S 45 EVI Heat: Combi-7 Fernw\u00e4rme: RVD230 Fr\u00f6ling: Rendagas Plus Fujitsu Waterstage: Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox: Thrs General: (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald: Greenheat GS: UnoTec Hansa: SND Herz: Commotherm 5 DeLuxe Interdomo: Domostar GBK 25H/SH MAN/MHG: Ecostar 200 MHG: ecoWP Xe, Procon E Oilon: SH, SHx Olymp: SHS, WHS Palazzetti: Choro Sistema Calore Sieger: TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC): STC9 Sixmadun: TG11BE SSP: Proburner Sunex: Nexus Termomax: Termo \u00d6V Thermics: Energie Thermital: TBox Clima TOP Tifell: Biofell Viessmann: Vitotwin 300-W Wamak: AiWa, DB Weishaupt: WTU","title":"Unterst\u00fctzte Modelle verschiedener Hersteller"},{"location":"de/supported_models.html#unterstutzte-modelle-verschiedener-hersteller","text":"Dies ist eine Liste von Modellen verschiedener Hersteller, die in der Vergangenheit mit BSB-LAN getestet wurden. Bitte beachte, dass die Hersteller jederzeit die technischen Spezifikationen, einschlie\u00dflich des Controllers, \u00e4ndern k\u00f6nnen, ohne den Modellnamen (oder nur einen sehr kleinen Teil davon) zu \u00e4ndern. Wenn wir von solchen \u00c4nderungen erfahren, werden wir sie hier auflisten, aber offensichtlich ist diese Liste in beide Richtungen nicht vollst\u00e4ndig. Also \u00fcberpr\u00fcfe in jedem Fall selbst, ob deine Heizung die notwendigen Anschl\u00fcsse f\u00fcr die Verwendung von BSB-LAN hat. Br\u00f6tje: BBK, BBS, BGB, BLW ( siehe Ausnahmen unten! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( siehe Ausnahmen unten! ), WMC, WMS, WOB Nicht funktionierende Br\u00f6tje-Modelle: BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch: W\u00e4rmepumpen mit RVS-Controllertyp Elco: Aerotop, Aquatop, Rendamax, Straton, Thision ( nicht Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG: QR Atlantic: Alf\u00e9a, Axeo, Excellia, Extensa, Hynea Hybrid Duo Gaz, Navistem, Perfinox, Varmax Austria Email: LWP, LWPK Baxi: Luna Platinum, Luna Duo, Block Kondens Boesch: SLS Chapp\u00e9e: Luna, Klista CitrinSolar: proClima CTA: Optiheat CTC: 380 IC Deville: 9942, 9981 Eco: AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar: Ecodense WT-S 45 EVI Heat: Combi-7 Fernw\u00e4rme: RVD230 Fr\u00f6ling: Rendagas Plus Fujitsu Waterstage: Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox: Thrs General: (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald: Greenheat GS: UnoTec Hansa: SND Herz: Commotherm 5 DeLuxe Interdomo: Domostar GBK 25H/SH MAN/MHG: Ecostar 200 MHG: ecoWP Xe, Procon E Oilon: SH, SHx Olymp: SHS, WHS Palazzetti: Choro Sistema Calore Sieger: TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC): STC9 Sixmadun: TG11BE SSP: Proburner Sunex: Nexus Termomax: Termo \u00d6V Thermics: Energie Thermital: TBox Clima TOP Tifell: Biofell Viessmann: Vitotwin 300-W Wamak: AiWa, DB Weishaupt: WTU","title":"Unterst\u00fctzte Modelle verschiedener Hersteller"},{"location":"de/troubleshooting.html","text":"Fehlerbehebung BSB-LAN versucht, den Zugriff auf dein Heizsystem so einfach wie m\u00f6glich zu gestalten, aber es kann immer etwas schiefgehen. Wenn du nach dem Lesen dieses Dokuments und der FAQ immer noch ein Problem hast, \u00f6ffne bitte einen Bug-Report auf der GitHub-Seite des Projekts und stelle sicher, dass du uns alle notwendigen Log-Dateien und weitere erforderliche Details, insbesondere vom Serial Monitor (oder kurz SerMo ), zur Verf\u00fcgung stellst. Bevor du das tust, stelle jedoch sicher, dass du die neueste Version von BSB-LAN aus dem Master-Repository (nicht die Release-Version) installierst, auch wenn deine Version nur ein paar Tage alt ist. Trotzdem k\u00f6nnte seitdem eine Menge passiert sein :)! Verwendung des Serial Monitors \u00d6ffne den Serial Monitor, indem du in der Arduino IDE zu Tools/Serial Monitor gehst. Setze die \u00dcbertragungsgeschwindigkeit auf 115200 in der rechten oberen Ecke des Serial Monitor-Fensters. Stelle sicher, dass du die Nachrichten direkt ab dem Moment kopierst, in dem dein Mikrocontroller bootet (angezeigt durch die Nachricht READY ), bis zu dem Moment, in dem das Problem auftritt. Sende bitte keine Screenshots, sondern nur Textdateien. Der Serial Monitor in der Arduino IDE hat derzeit einen Bug, der es dir nur erm\u00f6glicht, die Teile der Serial Monitor-Nachrichten zu kopieren, die auf dem Bildschirm sichtbar sind. Auch wenn das bedeutet, dass das Kopieren gr\u00f6\u00dferer Teile der Log-Nachrichten m\u00fchsam ist, musst du trotzdem den kompletten Log bereitstellen, um Unterst\u00fctzung zu erhalten. Es hilft ein wenig, die Gr\u00f6\u00dfe des Serial Monitor-Fensters zu vergr\u00f6\u00dfern. Kompilierung fehlgeschlagen: \"Sketch zu gro\u00df\" W\u00e4hle das Partitionsschema Minimal SPIFFS in der Arduino IDE unter Tools/Partition Scheme . Achtung: Diese Einstellung wird auf den Standardwert zur\u00fcckgesetzt, wenn das ESP32-Framework aktualisiert wird! Wenn du Over-the-Air-Updates verwendest, musst du die Software einmal per USB flashen, nachdem du das Partitionsschema ge\u00e4ndert hast, bevor OTA-Updates wieder funktionieren. Kein Zugriff mehr auf die Web-Oberfl\u00e4che Wenn du die Einstellungen so ge\u00e4ndert hast, dass du nicht mehr auf die Web-Oberfl\u00e4che zugreifen kannst, gibt es zwei M\u00f6glichkeiten, das System wiederherzustellen: Wenn du das Ger\u00e4t flashen kannst: Konfiguriere BSB_LAN_config.h mit korrekten, funktionierenden Einstellungen. Setze UseEEPROM auf 0 . Spiele BSB-LAN auf den Mikrocontroller auf. Du kannst jetzt auf BSB-LAN zugreifen. Gehe zu \"Einstellungen\" und speichere die Einstellungen. Dadurch werden die funktionierenden Einstellungen im EEPROM gespeichert. Bearbeite BSB_LAN_config.h erneut (!) und setze UseEEPROM auf 1 und spiele BSB-LAN erneut auf den Mikrocontroller auf. Erst jetzt wird BSB-LAN die Einstellungen aus dem EEPROM lesen und verwenden, so dass du weitere \u00c4nderungen \u00fcber die Web-Oberfl\u00e4che vornehmen kannst. Wenn du das Ger\u00e4t nicht flashen kannst: Wenn du das Ger\u00e4t vor Ort nicht flashen kannst, kannst du BSB-LAN auf die letzten BSB_LAN_config.h -Einstellungen zur\u00fccksetzen, indem du zwei Pins vor und w\u00e4hrend des Bootens des Mikrocontrollers verbindest: ESP32-Olimex: Verbinde die Pins 34 und 3V3. ESP32-NodeMCU: Verbinde die Pins 21 und 3V3. Arduino Due: Verbinde die Pins 31 und 33. Wenn die Pins erfolgreich verbunden wurden, blinkt die integrierte LED des Mikrocontrollers vier Sekunden lang langsam. \u00d6ffne anschlie\u00dfend die Konfiguration in der Web-Oberfl\u00e4che, \u00fcberpr\u00fcfe alle Einstellungen in der Konfiguration und speichere sie. Dadurch werden die funktionierenden Einstellungen im EEPROM gespeichert. Tempor\u00e4rer Zugangspunkt auf einem ESP32-basierten Mikrocontroller Auf einem ESP32-basierten Mikrocontroller richtet BSB-LAN seinen eigenen WLAN-Zugangspunkt mit dem Namen BSB-LAN ein, wenn er keine Verbindung zu einem Netzwerk herstellen kann. In diesem Fall kannst du dich mit diesem Zugangspunkt mit dem Passwort BSB-LPB-PPS-LAN verbinden und BSB-LAN \u00fcber die IP-Adresse http://192.168.4.1 erreichen und versuchen, die Konfiguration auf diese Weise zu korrigieren. Bitte beachte, dass du weiterhin einen Passkey oder HTTP-Benutzernamen und Passwort ben\u00f6tigst, wenn diese Details im EEPROM oder in BSB_LAN_config.h gespeichert sind. Ich kann nur auf sehr wenige Parameter \u00fcber BSB/LPB zugreifen! BSB-LAN kommt zun\u00e4chst nur mit einer kleinen Menge an Parametern, die auf (fast) jedem Heizsystem funktionieren. Du musst eine ger\u00e4tespezifische Parameterliste erstellen . Kategorienliste pl\u00f6tzlich sehr klein BSB-LAN muss den Controller des Heizsystems erkennen, um die anzuzeigenden Kategorien zu bestimmen. Wenn BSB-LAN nicht mit dem Controller verbunden ist oder die Erkennung fehlschl\u00e4gt, werden nur wenige universelle Kategorien angezeigt. Kann keine Parameter lesen / Ger\u00e4tefamilie ist 0 Falscher Bustyp (BSB statt LPB oder umgekehrt). Wenn die rote LED des Adapters nicht leuchtet (und idealerweise leicht flackert), gibt es ein Problem mit der Verkabelung zwischen dem Adapter und dem Heizsystem. Die rote LED leuchtet, sobald der Adapter korrekt angeschlossen ist, auch wenn der BSB-LAN-Adapter noch nicht mit dem Mikrocontroller verbunden ist! Keine Daten, obwohl die rote LED des Adapters leuchtet Stelle sicher, dass der Adapter mit CL+/CL- und nicht mit dem dritten Pin (G+) verbunden ist: G+ versorgt die LED mit Strom, ist aber keine Datenleitung. Stelle sicher, dass du den Mikrocontroller eingeschaltet hast . Du k\u00f6nntest denken, dass das Heizsystem den Mikrocontroller mit Strom versorgt, weil die LED am BSB-LAN-Adapter leuchtet, aber das tut es nicht. Du musst ihn separat mit Strom versorgen. Bei Verwendung des Adapters f\u00fcr die Olimex-Mikrocontroller: Stelle sicher, dass die BSB-LAN-Adapterplatine genau in der Mitte des UEXT-Anschlusses sitzt. Sie passt auch, wenn sie um eine Pin-Reihe nach links oder rechts verschoben ist, aber sie wird nicht funktionieren. Stelle sicher, dass die RX/TX-Pins korrekt gesetzt/erkannt werden. Die Startsequenz im Serial Monitor zeigt dir, welche Pins verwendet oder automatisch erkannt wurden. Keine oder unzuverl\u00e4ssige Netzwerkverbindung Versuche, den Mikrocontroller \u00fcber USB von einem Laptop aus mit Strom zu versorgen. Wir hatten viele F\u00e4lle, in denen die Netzteile trotz ausreichender Leistung unzuverl\u00e4ssig waren. Schaue dir den Log im Serial Monitor an, um zu \u00fcberpr\u00fcfen, ob der Mikrocontroller eine IP-Adresse erhalten hat. Wenn nicht, sind deine Netzwerk-Einstellungen oder die physische Verbindung m\u00f6glicherweise fehlerhaft. Keine Verbindung zu verstecktem WLAN-Netzwerk m\u00f6glich Ja, das ist eine bekannte Einschr\u00e4nkung. Die einzige M\u00f6glichkeit, das zu tun, ist, die BSSID explizit in BSB_LAN_config.h zu setzen. Raumtemperatur (oder ein anderer Parameter) kann nicht eingestellt werden \u00dcberpr\u00fcfe die Einstellungen von BSB-LAN und stelle sicher, dass der Schreibzugriff aktiviert ist und auf standard oder komplett gesetzt ist. Web-Oberfl\u00e4che h\u00e4ngt sich beim Herstellen einer neuen Verbindung auf BSB-LAN ist kein Multitasking-System. Das bedeutet, dass es sich um eine Aufgabe gleichzeitig k\u00fcmmern kann. Also auch wenn ein URL-Befehl abgebrochen wird (indem das Browser-Fenster geschlossen wird), k\u00f6nnte BSB-LAN das nicht erkennen und erst neue Anfragen bearbeiten, wenn die vorherige Aufgabe abgeschlossen ist. Der Serial Monitor zeigt keine lesbaren Daten an Stelle sicher, dass die Geschwindigkeit korrekt auf 115200 bps gesetzt ist. Stelle sicher, dass der richtige Port ausgew\u00e4hlt ist.","title":"Fehlersuche"},{"location":"de/troubleshooting.html#fehlerbehebung","text":"BSB-LAN versucht, den Zugriff auf dein Heizsystem so einfach wie m\u00f6glich zu gestalten, aber es kann immer etwas schiefgehen. Wenn du nach dem Lesen dieses Dokuments und der FAQ immer noch ein Problem hast, \u00f6ffne bitte einen Bug-Report auf der GitHub-Seite des Projekts und stelle sicher, dass du uns alle notwendigen Log-Dateien und weitere erforderliche Details, insbesondere vom Serial Monitor (oder kurz SerMo ), zur Verf\u00fcgung stellst. Bevor du das tust, stelle jedoch sicher, dass du die neueste Version von BSB-LAN aus dem Master-Repository (nicht die Release-Version) installierst, auch wenn deine Version nur ein paar Tage alt ist. Trotzdem k\u00f6nnte seitdem eine Menge passiert sein :)!","title":"Fehlerbehebung"},{"location":"de/troubleshooting.html#verwendung-des-serial-monitors","text":"\u00d6ffne den Serial Monitor, indem du in der Arduino IDE zu Tools/Serial Monitor gehst. Setze die \u00dcbertragungsgeschwindigkeit auf 115200 in der rechten oberen Ecke des Serial Monitor-Fensters. Stelle sicher, dass du die Nachrichten direkt ab dem Moment kopierst, in dem dein Mikrocontroller bootet (angezeigt durch die Nachricht READY ), bis zu dem Moment, in dem das Problem auftritt. Sende bitte keine Screenshots, sondern nur Textdateien. Der Serial Monitor in der Arduino IDE hat derzeit einen Bug, der es dir nur erm\u00f6glicht, die Teile der Serial Monitor-Nachrichten zu kopieren, die auf dem Bildschirm sichtbar sind. Auch wenn das bedeutet, dass das Kopieren gr\u00f6\u00dferer Teile der Log-Nachrichten m\u00fchsam ist, musst du trotzdem den kompletten Log bereitstellen, um Unterst\u00fctzung zu erhalten. Es hilft ein wenig, die Gr\u00f6\u00dfe des Serial Monitor-Fensters zu vergr\u00f6\u00dfern.","title":"Verwendung des Serial Monitors"},{"location":"de/troubleshooting.html#kompilierung-fehlgeschlagen-sketch-zu-gro","text":"W\u00e4hle das Partitionsschema Minimal SPIFFS in der Arduino IDE unter Tools/Partition Scheme . Achtung: Diese Einstellung wird auf den Standardwert zur\u00fcckgesetzt, wenn das ESP32-Framework aktualisiert wird! Wenn du Over-the-Air-Updates verwendest, musst du die Software einmal per USB flashen, nachdem du das Partitionsschema ge\u00e4ndert hast, bevor OTA-Updates wieder funktionieren.","title":"Kompilierung fehlgeschlagen: \"Sketch zu gro\u00df\""},{"location":"de/troubleshooting.html#kein-zugriff-mehr-auf-die-web-oberflache","text":"Wenn du die Einstellungen so ge\u00e4ndert hast, dass du nicht mehr auf die Web-Oberfl\u00e4che zugreifen kannst, gibt es zwei M\u00f6glichkeiten, das System wiederherzustellen: Wenn du das Ger\u00e4t flashen kannst: Konfiguriere BSB_LAN_config.h mit korrekten, funktionierenden Einstellungen. Setze UseEEPROM auf 0 . Spiele BSB-LAN auf den Mikrocontroller auf. Du kannst jetzt auf BSB-LAN zugreifen. Gehe zu \"Einstellungen\" und speichere die Einstellungen. Dadurch werden die funktionierenden Einstellungen im EEPROM gespeichert. Bearbeite BSB_LAN_config.h erneut (!) und setze UseEEPROM auf 1 und spiele BSB-LAN erneut auf den Mikrocontroller auf. Erst jetzt wird BSB-LAN die Einstellungen aus dem EEPROM lesen und verwenden, so dass du weitere \u00c4nderungen \u00fcber die Web-Oberfl\u00e4che vornehmen kannst. Wenn du das Ger\u00e4t nicht flashen kannst: Wenn du das Ger\u00e4t vor Ort nicht flashen kannst, kannst du BSB-LAN auf die letzten BSB_LAN_config.h -Einstellungen zur\u00fccksetzen, indem du zwei Pins vor und w\u00e4hrend des Bootens des Mikrocontrollers verbindest: ESP32-Olimex: Verbinde die Pins 34 und 3V3. ESP32-NodeMCU: Verbinde die Pins 21 und 3V3. Arduino Due: Verbinde die Pins 31 und 33. Wenn die Pins erfolgreich verbunden wurden, blinkt die integrierte LED des Mikrocontrollers vier Sekunden lang langsam. \u00d6ffne anschlie\u00dfend die Konfiguration in der Web-Oberfl\u00e4che, \u00fcberpr\u00fcfe alle Einstellungen in der Konfiguration und speichere sie. Dadurch werden die funktionierenden Einstellungen im EEPROM gespeichert. Tempor\u00e4rer Zugangspunkt auf einem ESP32-basierten Mikrocontroller Auf einem ESP32-basierten Mikrocontroller richtet BSB-LAN seinen eigenen WLAN-Zugangspunkt mit dem Namen BSB-LAN ein, wenn er keine Verbindung zu einem Netzwerk herstellen kann. In diesem Fall kannst du dich mit diesem Zugangspunkt mit dem Passwort BSB-LPB-PPS-LAN verbinden und BSB-LAN \u00fcber die IP-Adresse http://192.168.4.1 erreichen und versuchen, die Konfiguration auf diese Weise zu korrigieren. Bitte beachte, dass du weiterhin einen Passkey oder HTTP-Benutzernamen und Passwort ben\u00f6tigst, wenn diese Details im EEPROM oder in BSB_LAN_config.h gespeichert sind.","title":"Kein Zugriff mehr auf die Web-Oberfl\u00e4che"},{"location":"de/troubleshooting.html#ich-kann-nur-auf-sehr-wenige-parameter-uber-bsblpb-zugreifen","text":"BSB-LAN kommt zun\u00e4chst nur mit einer kleinen Menge an Parametern, die auf (fast) jedem Heizsystem funktionieren. Du musst eine ger\u00e4tespezifische Parameterliste erstellen .","title":"Ich kann nur auf sehr wenige Parameter \u00fcber BSB/LPB zugreifen!"},{"location":"de/troubleshooting.html#kategorienliste-plotzlich-sehr-klein","text":"BSB-LAN muss den Controller des Heizsystems erkennen, um die anzuzeigenden Kategorien zu bestimmen. Wenn BSB-LAN nicht mit dem Controller verbunden ist oder die Erkennung fehlschl\u00e4gt, werden nur wenige universelle Kategorien angezeigt.","title":"Kategorienliste pl\u00f6tzlich sehr klein"},{"location":"de/troubleshooting.html#kann-keine-parameter-lesen-geratefamilie-ist-0","text":"Falscher Bustyp (BSB statt LPB oder umgekehrt). Wenn die rote LED des Adapters nicht leuchtet (und idealerweise leicht flackert), gibt es ein Problem mit der Verkabelung zwischen dem Adapter und dem Heizsystem. Die rote LED leuchtet, sobald der Adapter korrekt angeschlossen ist, auch wenn der BSB-LAN-Adapter noch nicht mit dem Mikrocontroller verbunden ist!","title":"Kann keine Parameter lesen / Ger\u00e4tefamilie ist 0"},{"location":"de/troubleshooting.html#keine-daten-obwohl-die-rote-led-des-adapters-leuchtet","text":"Stelle sicher, dass der Adapter mit CL+/CL- und nicht mit dem dritten Pin (G+) verbunden ist: G+ versorgt die LED mit Strom, ist aber keine Datenleitung. Stelle sicher, dass du den Mikrocontroller eingeschaltet hast . Du k\u00f6nntest denken, dass das Heizsystem den Mikrocontroller mit Strom versorgt, weil die LED am BSB-LAN-Adapter leuchtet, aber das tut es nicht. Du musst ihn separat mit Strom versorgen. Bei Verwendung des Adapters f\u00fcr die Olimex-Mikrocontroller: Stelle sicher, dass die BSB-LAN-Adapterplatine genau in der Mitte des UEXT-Anschlusses sitzt. Sie passt auch, wenn sie um eine Pin-Reihe nach links oder rechts verschoben ist, aber sie wird nicht funktionieren. Stelle sicher, dass die RX/TX-Pins korrekt gesetzt/erkannt werden. Die Startsequenz im Serial Monitor zeigt dir, welche Pins verwendet oder automatisch erkannt wurden.","title":"Keine Daten, obwohl die rote LED des Adapters leuchtet"},{"location":"de/troubleshooting.html#keine-oder-unzuverlassige-netzwerkverbindung","text":"Versuche, den Mikrocontroller \u00fcber USB von einem Laptop aus mit Strom zu versorgen. Wir hatten viele F\u00e4lle, in denen die Netzteile trotz ausreichender Leistung unzuverl\u00e4ssig waren. Schaue dir den Log im Serial Monitor an, um zu \u00fcberpr\u00fcfen, ob der Mikrocontroller eine IP-Adresse erhalten hat. Wenn nicht, sind deine Netzwerk-Einstellungen oder die physische Verbindung m\u00f6glicherweise fehlerhaft.","title":"Keine oder unzuverl\u00e4ssige Netzwerkverbindung"},{"location":"de/troubleshooting.html#keine-verbindung-zu-verstecktem-wlan-netzwerk-moglich","text":"Ja, das ist eine bekannte Einschr\u00e4nkung. Die einzige M\u00f6glichkeit, das zu tun, ist, die BSSID explizit in BSB_LAN_config.h zu setzen.","title":"Keine Verbindung zu verstecktem WLAN-Netzwerk m\u00f6glich"},{"location":"de/troubleshooting.html#raumtemperatur-oder-ein-anderer-parameter-kann-nicht-eingestellt-werden","text":"\u00dcberpr\u00fcfe die Einstellungen von BSB-LAN und stelle sicher, dass der Schreibzugriff aktiviert ist und auf standard oder komplett gesetzt ist.","title":"Raumtemperatur (oder ein anderer Parameter) kann nicht eingestellt werden"},{"location":"de/troubleshooting.html#web-oberflache-hangt-sich-beim-herstellen-einer-neuen-verbindung-auf","text":"BSB-LAN ist kein Multitasking-System. Das bedeutet, dass es sich um eine Aufgabe gleichzeitig k\u00fcmmern kann. Also auch wenn ein URL-Befehl abgebrochen wird (indem das Browser-Fenster geschlossen wird), k\u00f6nnte BSB-LAN das nicht erkennen und erst neue Anfragen bearbeiten, wenn die vorherige Aufgabe abgeschlossen ist.","title":"Web-Oberfl\u00e4che h\u00e4ngt sich beim Herstellen einer neuen Verbindung auf"},{"location":"de/troubleshooting.html#der-serial-monitor-zeigt-keine-lesbaren-daten-an","text":"Stelle sicher, dass die Geschwindigkeit korrekt auf 115200 bps gesetzt ist. Stelle sicher, dass der richtige Port ausgew\u00e4hlt ist.","title":"Der Serial Monitor zeigt keine lesbaren Daten an"},{"location":"de/using.html","text":"Verwendung von BSB-LAN Steuerung der Heizung \u00fcber die Web-Oberfl\u00e4che Als erster Schritt \u2013 oder wenn du deine Heizung einfach nur ein- oder ausschalten willst \u2013 kannst du einfach die BSB-LAN Web-Oberfl\u00e4che \u00f6ffnen und zum Einstellungen -Men\u00fc gehen. Dort wird eine Liste von Kategorien deines Heizungsreglers angezeigt. Du kannst auf jede Kategorie klicken und erh\u00e4ltst eine Liste der entsprechenden Parameter. Wenn du eine Set -Schaltfl\u00e4che siehst, bedeutet das, dass der Parameter ge\u00e4ndert werden kann, und wenn du darauf klickst, wird der neue Wert an die Heizung gesendet. Wenn keine Set -Schaltfl\u00e4che vorhanden ist, ist der Parameter schreibgesch\u00fctzt und kann nicht ge\u00e4ndert werden. Verwendung der URL-Befehle von BSB-LAN Die meisten Funktionen von BSB-LAN k\u00f6nnen mithilfe von URL-Befehlen gesteuert werden. Diese sind n\u00fctzlich oder sogar notwendig, wenn du BSB-LAN mit einem Hausautomatisierungssystem verbindest, aber sie bieten auch Zugang zu Funktionen, die nicht direkt \u00fcber die Web-Oberfl\u00e4che zug\u00e4nglich sind. URL-Befehle werden direkt nach dem Hostnamen von BSB-LAN und einem (optionalen) Passwort aufgerufen. Um also eine Liste von Kategorien zu erhalten, m\u00fcsstest du die URL http://bsb-lan.local/K (oder http://bsb-lan.local/1234/K , wenn das Passwort 1234 verwendet wird) \u00f6ffnen. Abfragen und Einstellen von Parametern URL-Befehl Funktionalit\u00e4t /<x> Abfragen der Einstellung des Parameters <x> /<x>!<addr> Abfragen der Einstellung des Parameters <x> vom Regler an der Zieladresse <addr> /<x>/<y>/<z> Abfragen der Einstellungen der Parameter <x> , <y> und <z> . Parameter k\u00f6nnen ! enthalten, um verschiedene Regler anzusprechen. /<x>-<y> Abfragen der Einstellungen der Parameter von <x> bis <y> /<x>!<addr>-<y> Abfragen der Einstellungen der Parameter von <x> bis <y> vom Regler an der Zieladresse <addr> /K Auflisten aller Parameterkategorien vom Regler an der Standard-Zieladresse /K!<addr> Auflisten aller Parameterkategorien vom Regler an der Zieladresse <addr> /K<x> Abfragen aller Parameter der Kategorie <x> vom Regler an der Standard-Zieladresse /K<x>!<addr> Abfragen aller Parameter der Kategorie <x> vom Regler an der Zieladresse <addr> /S<x>=<y> Einstellen des Parameters <x> vom Regler an der Standard-Zieladresse auf den Wert <y> . Um einen Parameter auf --- (aus/deaktiviert) zu setzen, sende einfach einen leeren Wert: S<x>= /S<x>!<addy>=<y> Einstellen des Parameters <x> vom Regler an der Zieladresse <addr> auf den Wert <y> /I<x>=<y> Senden des Werts <y> als INF-Telegramm an den Parameter <x> . Bisher nur erforderlich beim Einstellen der Raumtemperatur (Parameter 10000 ff.) Konfiguration URL-Befehl Funktionalit\u00e4t /C Konfiguration /CO Speichern der BSB-LAN-Konfiguration /P<x>,<y>,<z> Tempor\u00e4res Einstellen des Bustyps auf <x> , der eigenen Adresse auf <y> und der Zieladresse auf <z> /V<x> Aktivieren ( 1 ) oder Deaktivieren ( 0 ) des ausf\u00fchrlichen Ausgabemodus. Sollte aktiviert bleiben, es sei denn, es wird explizit anders angegeben. Protokollierung URL-Befehl Funktionalit\u00e4t /DG Grafische Darstellung (Diagramm) einer aktiven Protokolldatei /D oder /DD Auslesen der Protokolldatei datalog.txt vom Speicher. Enth\u00e4lt die protokollierten Parameter und Werte, wenn die Protokollierung auf SD-Karte aktiviert ist. /D<n> Auslesen der letzten <n> Kalendertage der Protokolldatei /D<a>,<b> Auslesen der Daten aus der Protokolldatei zwischen <a> und <b> . <a> und <b> m\u00fcssen im Format JJJJ-MM-TT angegeben werden (z.B. /D2024-04-01,2024-04-30 ) /D0 Zur\u00fccksetzen beider Protokolldateien datalog.txt und journal.txt und Erstellen neuer Header. Sollte vor der ersten Protokollierung ausgef\u00fchrt werden. /DK<n> L\u00f6schen von Daten, die \u00e4lter sind als <n> Tage, aus der Protokolldatei /LN Erzwingen der Protokollierung unabh\u00e4ngig vom aktuellen Intervall und Neustarten des konfigurierten Intervalls zu diesem Zeitpunkt /L=<x>,<y>,<z> Einstellen des Protokollierungsintervalls auf <x> Sekunden und (optional) Zur\u00fccksetzen der Protokollierungsparameter auf <y> , <z> usw. bis zum Neustart /L=0,0 Deaktivieren der Protokollierung auf dem Speicher bis zum Neustart /LB=<x> Nur Broadcast-Telegramme ( 1 ) oder alle Telegramme ( 0 ) protokollieren. Einstellung gilt bis zum Neustart. /LU=<x> Nur unbekannte Bus-Telegramme ( 1 ) oder alle Telegramme ( 0 ) protokollieren. Einstellung gilt bis zum Neustart. /A=0 Deaktivieren der 24-Stunden-Durchschnittsberechnung bis zum Neustart /A=<x>,<y>,<z> \u00c4ndern der 24-Stunden-Durchschnittswertberechnung auf die Parameter <x> , <y> und <z> bis zum Neustart /B0 Zur\u00fccksetzen der Statistiken f\u00fcr kumulierte Brennerlaufzeiten und -zyklen /DD0 Entfernen der Protokolldatei datalog.txt /DJ Auslesen der Protokolldatei journal.txt vom Speicher /DJ0 Entfernen der Protokolldatei journal.txt /LD Deaktivieren der Protokollierung von Telegrammen in journal.txt bis zum Neustart /LE Aktivieren der Protokollierung von Telegrammen in journal.txt Parameterinformationen URL-Befehl Funktionalit\u00e4t /E<x> Anzeigen der Parameteroptionen des Parameters <x> . Nur verf\u00fcgbar f\u00fcr Parameter vom Typ Option, wie Datentypen VT_ENUM , VT_CUSTOM_ENUM , VT_BITS und VT_CUSTOM_BITS . /R<x> Abfragen der Standard-Einstellung des Parameters <x> GPIO-Steuerung URL-Befehl Funktionalit\u00e4t /G<x> Anzeigen des tats\u00e4chlichen Zustands des GPIO-Pins <x> /G<x>=<y> Setzen des GPIO-Pins <x> auf HIGH ( <y> = 1 ) oder LOW ( <y> = 0 ) JSON-Schnittstelle F\u00fcr eine komplette Struktur der JSON API siehe hier in der OpenAPI Dokumentation . URL-Befehl Funktionalit\u00e4t /JQ=<x>,<y>,<z> Abfragen der Parameter <x> , <y> und <z> und Zur\u00fcckgeben einer JSON-Struktur /JQ Abfragen von Parametern basierend auf einer empfangenen JSON-Struktur \u00fcber HTTP POST /JS Einstellen von Parametern basierend auf einer empfangenen JSON-Struktur \u00fcber HTTP POST /JR<x> Abfragen des Standardwerts des Parameters <x> und Zur\u00fcckgeben einer JSON-Struktur /JK=ALL Ausgeben der Parameter-Bereiche f\u00fcr alle verf\u00fcgbaren Kategorien als JSON-Struktur /JK=<x> Ausgeben der Parameterstruktur aller Parameter der Kategorie <x> /JC=<x>,<y>,<z> Ausgeben der Parameterstruktur <x> , <y> und <z> . Gleiche JSON-Struktur wie /JK=<x> . /JC |Ausgeben der Parameterstruktur von einer \u00fcber HTTP POST empfangenen Parameterliste. Gleiche JSON-Struktur wie /JK= `. /JB Erstellen einer Sicherung aller beschreibbaren Parameter in einer JSON-Struktur, die zum Zur\u00fcckschreiben mit /JS verwendet werden kann /JL Erstellen einer JSON-Struktur der BSB-LAN-Konfigurationseinstellungen /JW Schreiben der Konfigurationseinstellungen basierend auf einer JSON-Struktur, die mit /JL erstellt wurde. /JI Ausgeben von Laufzeitinformationen von BSB-LAN als JSON-Struktur /JV Zur\u00fcckgeben der Version der BSB-LAN-JSON-API als JSON-Struktur Verschiedenes URL-Befehl Funktionalit\u00e4t /M<x>!<y> Senden ( <x>=1 ) oder Widerrufen ( <x>=0 ) von MQTT Auto-Discovery-Nachrichten f\u00fcr alle Parameter vom Regler an der Zieladresse <y> /N Zur\u00fccksetzen und Neustarten des Mikrocontrollers (dauert ca. 15 Sekunden) /NE L\u00f6schen des EEPROM und Neustarten des Mikrocontrollers. Alle Konfigurationseinstellungen werden anschlie\u00dfend aus der Konfigurationsdatei gelesen, bis sie in der Web-Oberfl\u00e4che gesetzt und erneut gespeichert werden, um sie in das EEPROM zu schreiben. /QD Ausgeben der Parameterstruktur des Heizungssystems /W Mit einem vorangestellten /W geben die URL-Befehle C , S und Q Daten ohne HTML-Header und -Footer zur\u00fcck (z.B.: /WC oder /WS<x>=<y!z> ). Verwendung der grafischen Diagrammfunktion Wenn protokollierte Daten auf dem Speicher (entweder SD-Karte oder internem Flash-Speicher) verf\u00fcgbar sind, wird Protokolldatei anzeigen anklickbar. Standardm\u00e4\u00dfig werden die protokollierten Daten im Browser angezeigt. Um auf die protokollierten Daten selbst (in der Datei datalog.txt ) zuzugreifen, verwende den oben genannten URL-Befehl /D . Standardm\u00e4\u00dfig zeigt \"Protokolldatei anzeigen\" die Protokolldaten der letzten n Kalendertage an ( n=DEFAULT_DAYS_TO_PLOT , konfigurierbar in BSB_LAN_config.h ). Anschlie\u00dfend k\u00f6nnen Steuerelemente auf der Webseite verwendet werden, um einen anderen Bereich auszuw\u00e4hlen, abh\u00e4ngig von den in der Protokolldatei enthaltenen Daten. Mauszeiger, Klick und Mausradaktionen innerhalb der grafischen Anzeige bieten verschiedene Steueroptionen: Bessere Lesbarkeit von Zahlenwerten bei eng beieinander liegenden Plot-Linien (Mouseover auf Plot) Benutzer k\u00f6nnen Plot-Linien interaktiv hervorheben, um die \u00dcbersichtlichkeit zu verbessern (Mouseover auf Legende) Benutzer k\u00f6nnen Plot-Linien interaktiv deaktivieren, um die \u00dcbersichtlichkeit und die vertikale Skalierung zu verbessern (Klick auf Legende) Zoomen (Mausrad/Pinch auf Plot) und Verschieben (ziehen des gezoomten Plots) F\u00fcr eine weitere Verarbeitung kannst du dieses Python-Skript verwenden, das die Protokollausgabe von BSB-LAN in Pivot-CSV-Dateien umwandelt, die f\u00fcr aussagekr\u00e4ftigere Diagramme verwendet werden k\u00f6nnen.","title":"BSB-LAN Funktionen"},{"location":"de/using.html#verwendung-von-bsb-lan","text":"","title":"Verwendung von BSB-LAN"},{"location":"de/using.html#steuerung-der-heizung-uber-die-web-oberflache","text":"Als erster Schritt \u2013 oder wenn du deine Heizung einfach nur ein- oder ausschalten willst \u2013 kannst du einfach die BSB-LAN Web-Oberfl\u00e4che \u00f6ffnen und zum Einstellungen -Men\u00fc gehen. Dort wird eine Liste von Kategorien deines Heizungsreglers angezeigt. Du kannst auf jede Kategorie klicken und erh\u00e4ltst eine Liste der entsprechenden Parameter. Wenn du eine Set -Schaltfl\u00e4che siehst, bedeutet das, dass der Parameter ge\u00e4ndert werden kann, und wenn du darauf klickst, wird der neue Wert an die Heizung gesendet. Wenn keine Set -Schaltfl\u00e4che vorhanden ist, ist der Parameter schreibgesch\u00fctzt und kann nicht ge\u00e4ndert werden.","title":"Steuerung der Heizung \u00fcber die Web-Oberfl\u00e4che"},{"location":"de/using.html#verwendung-der-url-befehle-von-bsb-lan","text":"Die meisten Funktionen von BSB-LAN k\u00f6nnen mithilfe von URL-Befehlen gesteuert werden. Diese sind n\u00fctzlich oder sogar notwendig, wenn du BSB-LAN mit einem Hausautomatisierungssystem verbindest, aber sie bieten auch Zugang zu Funktionen, die nicht direkt \u00fcber die Web-Oberfl\u00e4che zug\u00e4nglich sind. URL-Befehle werden direkt nach dem Hostnamen von BSB-LAN und einem (optionalen) Passwort aufgerufen. Um also eine Liste von Kategorien zu erhalten, m\u00fcsstest du die URL http://bsb-lan.local/K (oder http://bsb-lan.local/1234/K , wenn das Passwort 1234 verwendet wird) \u00f6ffnen.","title":"Verwendung der URL-Befehle von BSB-LAN"},{"location":"de/using.html#abfragen-und-einstellen-von-parametern","text":"URL-Befehl Funktionalit\u00e4t /<x> Abfragen der Einstellung des Parameters <x> /<x>!<addr> Abfragen der Einstellung des Parameters <x> vom Regler an der Zieladresse <addr> /<x>/<y>/<z> Abfragen der Einstellungen der Parameter <x> , <y> und <z> . Parameter k\u00f6nnen ! enthalten, um verschiedene Regler anzusprechen. /<x>-<y> Abfragen der Einstellungen der Parameter von <x> bis <y> /<x>!<addr>-<y> Abfragen der Einstellungen der Parameter von <x> bis <y> vom Regler an der Zieladresse <addr> /K Auflisten aller Parameterkategorien vom Regler an der Standard-Zieladresse /K!<addr> Auflisten aller Parameterkategorien vom Regler an der Zieladresse <addr> /K<x> Abfragen aller Parameter der Kategorie <x> vom Regler an der Standard-Zieladresse /K<x>!<addr> Abfragen aller Parameter der Kategorie <x> vom Regler an der Zieladresse <addr> /S<x>=<y> Einstellen des Parameters <x> vom Regler an der Standard-Zieladresse auf den Wert <y> . Um einen Parameter auf --- (aus/deaktiviert) zu setzen, sende einfach einen leeren Wert: S<x>= /S<x>!<addy>=<y> Einstellen des Parameters <x> vom Regler an der Zieladresse <addr> auf den Wert <y> /I<x>=<y> Senden des Werts <y> als INF-Telegramm an den Parameter <x> . Bisher nur erforderlich beim Einstellen der Raumtemperatur (Parameter 10000 ff.)","title":"Abfragen und Einstellen von Parametern"},{"location":"de/using.html#konfiguration","text":"URL-Befehl Funktionalit\u00e4t /C Konfiguration /CO Speichern der BSB-LAN-Konfiguration /P<x>,<y>,<z> Tempor\u00e4res Einstellen des Bustyps auf <x> , der eigenen Adresse auf <y> und der Zieladresse auf <z> /V<x> Aktivieren ( 1 ) oder Deaktivieren ( 0 ) des ausf\u00fchrlichen Ausgabemodus. Sollte aktiviert bleiben, es sei denn, es wird explizit anders angegeben.","title":"Konfiguration"},{"location":"de/using.html#protokollierung","text":"URL-Befehl Funktionalit\u00e4t /DG Grafische Darstellung (Diagramm) einer aktiven Protokolldatei /D oder /DD Auslesen der Protokolldatei datalog.txt vom Speicher. Enth\u00e4lt die protokollierten Parameter und Werte, wenn die Protokollierung auf SD-Karte aktiviert ist. /D<n> Auslesen der letzten <n> Kalendertage der Protokolldatei /D<a>,<b> Auslesen der Daten aus der Protokolldatei zwischen <a> und <b> . <a> und <b> m\u00fcssen im Format JJJJ-MM-TT angegeben werden (z.B. /D2024-04-01,2024-04-30 ) /D0 Zur\u00fccksetzen beider Protokolldateien datalog.txt und journal.txt und Erstellen neuer Header. Sollte vor der ersten Protokollierung ausgef\u00fchrt werden. /DK<n> L\u00f6schen von Daten, die \u00e4lter sind als <n> Tage, aus der Protokolldatei /LN Erzwingen der Protokollierung unabh\u00e4ngig vom aktuellen Intervall und Neustarten des konfigurierten Intervalls zu diesem Zeitpunkt /L=<x>,<y>,<z> Einstellen des Protokollierungsintervalls auf <x> Sekunden und (optional) Zur\u00fccksetzen der Protokollierungsparameter auf <y> , <z> usw. bis zum Neustart /L=0,0 Deaktivieren der Protokollierung auf dem Speicher bis zum Neustart /LB=<x> Nur Broadcast-Telegramme ( 1 ) oder alle Telegramme ( 0 ) protokollieren. Einstellung gilt bis zum Neustart. /LU=<x> Nur unbekannte Bus-Telegramme ( 1 ) oder alle Telegramme ( 0 ) protokollieren. Einstellung gilt bis zum Neustart. /A=0 Deaktivieren der 24-Stunden-Durchschnittsberechnung bis zum Neustart /A=<x>,<y>,<z> \u00c4ndern der 24-Stunden-Durchschnittswertberechnung auf die Parameter <x> , <y> und <z> bis zum Neustart /B0 Zur\u00fccksetzen der Statistiken f\u00fcr kumulierte Brennerlaufzeiten und -zyklen /DD0 Entfernen der Protokolldatei datalog.txt /DJ Auslesen der Protokolldatei journal.txt vom Speicher /DJ0 Entfernen der Protokolldatei journal.txt /LD Deaktivieren der Protokollierung von Telegrammen in journal.txt bis zum Neustart /LE Aktivieren der Protokollierung von Telegrammen in journal.txt","title":"Protokollierung"},{"location":"de/using.html#parameterinformationen","text":"URL-Befehl Funktionalit\u00e4t /E<x> Anzeigen der Parameteroptionen des Parameters <x> . Nur verf\u00fcgbar f\u00fcr Parameter vom Typ Option, wie Datentypen VT_ENUM , VT_CUSTOM_ENUM , VT_BITS und VT_CUSTOM_BITS . /R<x> Abfragen der Standard-Einstellung des Parameters <x>","title":"Parameterinformationen"},{"location":"de/using.html#gpio-steuerung","text":"URL-Befehl Funktionalit\u00e4t /G<x> Anzeigen des tats\u00e4chlichen Zustands des GPIO-Pins <x> /G<x>=<y> Setzen des GPIO-Pins <x> auf HIGH ( <y> = 1 ) oder LOW ( <y> = 0 )","title":"GPIO-Steuerung"},{"location":"de/using.html#json-schnittstelle","text":"F\u00fcr eine komplette Struktur der JSON API siehe hier in der OpenAPI Dokumentation . URL-Befehl Funktionalit\u00e4t /JQ=<x>,<y>,<z> Abfragen der Parameter <x> , <y> und <z> und Zur\u00fcckgeben einer JSON-Struktur /JQ Abfragen von Parametern basierend auf einer empfangenen JSON-Struktur \u00fcber HTTP POST /JS Einstellen von Parametern basierend auf einer empfangenen JSON-Struktur \u00fcber HTTP POST /JR<x> Abfragen des Standardwerts des Parameters <x> und Zur\u00fcckgeben einer JSON-Struktur /JK=ALL Ausgeben der Parameter-Bereiche f\u00fcr alle verf\u00fcgbaren Kategorien als JSON-Struktur /JK=<x> Ausgeben der Parameterstruktur aller Parameter der Kategorie <x> /JC=<x>,<y>,<z> Ausgeben der Parameterstruktur <x> , <y> und <z> . Gleiche JSON-Struktur wie /JK=<x> . /JC |Ausgeben der Parameterstruktur von einer \u00fcber HTTP POST empfangenen Parameterliste. Gleiche JSON-Struktur wie /JK= `. /JB Erstellen einer Sicherung aller beschreibbaren Parameter in einer JSON-Struktur, die zum Zur\u00fcckschreiben mit /JS verwendet werden kann /JL Erstellen einer JSON-Struktur der BSB-LAN-Konfigurationseinstellungen /JW Schreiben der Konfigurationseinstellungen basierend auf einer JSON-Struktur, die mit /JL erstellt wurde. /JI Ausgeben von Laufzeitinformationen von BSB-LAN als JSON-Struktur /JV Zur\u00fcckgeben der Version der BSB-LAN-JSON-API als JSON-Struktur","title":"JSON-Schnittstelle"},{"location":"de/using.html#verschiedenes","text":"URL-Befehl Funktionalit\u00e4t /M<x>!<y> Senden ( <x>=1 ) oder Widerrufen ( <x>=0 ) von MQTT Auto-Discovery-Nachrichten f\u00fcr alle Parameter vom Regler an der Zieladresse <y> /N Zur\u00fccksetzen und Neustarten des Mikrocontrollers (dauert ca. 15 Sekunden) /NE L\u00f6schen des EEPROM und Neustarten des Mikrocontrollers. Alle Konfigurationseinstellungen werden anschlie\u00dfend aus der Konfigurationsdatei gelesen, bis sie in der Web-Oberfl\u00e4che gesetzt und erneut gespeichert werden, um sie in das EEPROM zu schreiben. /QD Ausgeben der Parameterstruktur des Heizungssystems /W Mit einem vorangestellten /W geben die URL-Befehle C , S und Q Daten ohne HTML-Header und -Footer zur\u00fcck (z.B.: /WC oder /WS<x>=<y!z> ).","title":"Verschiedenes"},{"location":"de/using.html#verwendung-der-grafischen-diagrammfunktion","text":"Wenn protokollierte Daten auf dem Speicher (entweder SD-Karte oder internem Flash-Speicher) verf\u00fcgbar sind, wird Protokolldatei anzeigen anklickbar. Standardm\u00e4\u00dfig werden die protokollierten Daten im Browser angezeigt. Um auf die protokollierten Daten selbst (in der Datei datalog.txt ) zuzugreifen, verwende den oben genannten URL-Befehl /D . Standardm\u00e4\u00dfig zeigt \"Protokolldatei anzeigen\" die Protokolldaten der letzten n Kalendertage an ( n=DEFAULT_DAYS_TO_PLOT , konfigurierbar in BSB_LAN_config.h ). Anschlie\u00dfend k\u00f6nnen Steuerelemente auf der Webseite verwendet werden, um einen anderen Bereich auszuw\u00e4hlen, abh\u00e4ngig von den in der Protokolldatei enthaltenen Daten. Mauszeiger, Klick und Mausradaktionen innerhalb der grafischen Anzeige bieten verschiedene Steueroptionen: Bessere Lesbarkeit von Zahlenwerten bei eng beieinander liegenden Plot-Linien (Mouseover auf Plot) Benutzer k\u00f6nnen Plot-Linien interaktiv hervorheben, um die \u00dcbersichtlichkeit zu verbessern (Mouseover auf Legende) Benutzer k\u00f6nnen Plot-Linien interaktiv deaktivieren, um die \u00dcbersichtlichkeit und die vertikale Skalierung zu verbessern (Klick auf Legende) Zoomen (Mausrad/Pinch auf Plot) und Verschieben (ziehen des gezoomten Plots) F\u00fcr eine weitere Verarbeitung kannst du dieses Python-Skript verwenden, das die Protokollausgabe von BSB-LAN in Pivot-CSV-Dateien umwandelt, die f\u00fcr aussagekr\u00e4ftigere Diagramme verwendet werden k\u00f6nnen.","title":"Verwendung der grafischen Diagrammfunktion"},{"location":"fr/index.html","text":"Qu'est-ce que BSB-LAN ? BSB-LAN est une solution logicielle /mat\u00e9rielle pour acc\u00e9der au \u00ab Boiler-System-Bus \u00bb (BSB) , au \u00ab Local-Process-Bus (LPB) \u00bb et \u00e0 la \u00ab Punkt-zu-Punkt-Schnittstelle \u00bb (PPS) . Le mat\u00e9riel BSB-LAN est disponible pour divers microcontr\u00f4leurs bas\u00e9s sur ESP32 (ESP32 NodeMCU, Olimex EVB, Olime\u00e9 POE-ISO) ainsi que pour un Arduino Due avec un shield Ethernet. Il permet d'acc\u00e9der aux syst\u00e8mes de chauffage Atlantic, Br\u00f6tje, Elco et de nombreux autres fabricants via Ethernet/WiFi, \u00e0 condition qu'ils utilisent l'une des cartes \u00e9lectroniques Siemens r\u00e9pertori\u00e9s ci-dessous. BSB-LAN permet de surveiller et de contr\u00f4ler le syst\u00e8me de chauffage et d'enregistrer toutes les valeurs re\u00e7ues. Ce projet prend en charge presque tous les param\u00e8tres disponibles sur les syst\u00e8mes de chauffage et peut \u00eatre une alternative plus compl\u00e8te et plus \u00e9conomique \u00e0 l'OZW 672, \u00e0 l'OCI 700 ou au Remocon Net B. L' int\u00e9gration facultative dans les syst\u00e8mes domotiques existants tels que Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon ou EDOMI est possible via MQTT , JSON ou HTTP access . L'adaptateur peut \u00e9galement \u00eatre utilis\u00e9 comme carte d'acquisition sans connexion \u00e0 Internet gr\u00e2ce \u00e0 une carte microSD. Les capteurs de temp\u00e9rature et d'humidit\u00e9 peuvent \u00e9galement \u00eatre connect\u00e9s et leurs donn\u00e9es peuvent \u00e9galement \u00eatre enregistr\u00e9es et analys\u00e9es. Vous avez aussi la possibilit\u00e9 d'int\u00e9grer votre propre code dans le logiciel BSB-LAN, pour rajouter autant de fonctionnalit\u00e9s que vous le souhaitez. O\u00f9 et comment commencer ? Vous \u00eates un utilisateur exp\u00e9riment\u00e9 ? Consultez les instructions de d\u00e9marrage rapide . Sinon (ou si vous rencontrez des probl\u00e8mes), veuillez continuer \u00e0 lire ! Mon syst\u00e8me de chauffage est-il pris en charge par BSB-LAN ? Veuillez consulter la liste des syst\u00e8mes de chauffage pris en charge . Si vous savez d\u00e9j\u00e0 que votre syst\u00e8me est pris en charge, en savoir plus sur l'adaptateur BSB-LAN et o\u00f9 l'obtenir. Si vous avez d\u00e9j\u00e0 l'adaptateur, vous voudrez peut-\u00eatre savoir comment l'installer . Si vous avez install\u00e9 l'adaptateur, vous devrez configurer BSB-LAN . Une fois que vous avez tout configur\u00e9, d\u00e9couvrez comment utiliser BSB-LAN ou en savoir plus sur les fa\u00e7ons de l'int\u00e9grer dans les syst\u00e8mes de domotique . Si vous souhaitez mettre \u00e0 jour BSB-LAN et que vous souhaitez savoir ce qui a chang\u00e9 depuis votre derni\u00e8re installation, veuillez consulter le ChangeLog . Nos pages wiki sont en constante \u00e9volution et fournissent des connaissances de base ainsi que des sujets plus sp\u00e9cialis\u00e9s sur BSB-LAN et les syst\u00e8mes de chauffage en g\u00e9n\u00e9ral. Si vous rencontrez des probl\u00e8mes, consultez la page de d\u00e9pannage . Et avant de poser des questions \u00e0 qui que ce soit, consultez d'abord nos Foire aux questions (FAQ) !","title":"Aper\u00e7u"},{"location":"fr/index.html#quest-ce-que-bsb-lan","text":"BSB-LAN est une solution logicielle /mat\u00e9rielle pour acc\u00e9der au \u00ab Boiler-System-Bus \u00bb (BSB) , au \u00ab Local-Process-Bus (LPB) \u00bb et \u00e0 la \u00ab Punkt-zu-Punkt-Schnittstelle \u00bb (PPS) . Le mat\u00e9riel BSB-LAN est disponible pour divers microcontr\u00f4leurs bas\u00e9s sur ESP32 (ESP32 NodeMCU, Olimex EVB, Olime\u00e9 POE-ISO) ainsi que pour un Arduino Due avec un shield Ethernet. Il permet d'acc\u00e9der aux syst\u00e8mes de chauffage Atlantic, Br\u00f6tje, Elco et de nombreux autres fabricants via Ethernet/WiFi, \u00e0 condition qu'ils utilisent l'une des cartes \u00e9lectroniques Siemens r\u00e9pertori\u00e9s ci-dessous. BSB-LAN permet de surveiller et de contr\u00f4ler le syst\u00e8me de chauffage et d'enregistrer toutes les valeurs re\u00e7ues. Ce projet prend en charge presque tous les param\u00e8tres disponibles sur les syst\u00e8mes de chauffage et peut \u00eatre une alternative plus compl\u00e8te et plus \u00e9conomique \u00e0 l'OZW 672, \u00e0 l'OCI 700 ou au Remocon Net B. L' int\u00e9gration facultative dans les syst\u00e8mes domotiques existants tels que Home Assistant , ioBroker , openHAB , Node-RED , Homebridge , Jeedom , SmartHomeNG , Volksz\u00e4hler , FHEM , HomeMatic , Loxone, IP-Symcon ou EDOMI est possible via MQTT , JSON ou HTTP access . L'adaptateur peut \u00e9galement \u00eatre utilis\u00e9 comme carte d'acquisition sans connexion \u00e0 Internet gr\u00e2ce \u00e0 une carte microSD. Les capteurs de temp\u00e9rature et d'humidit\u00e9 peuvent \u00e9galement \u00eatre connect\u00e9s et leurs donn\u00e9es peuvent \u00e9galement \u00eatre enregistr\u00e9es et analys\u00e9es. Vous avez aussi la possibilit\u00e9 d'int\u00e9grer votre propre code dans le logiciel BSB-LAN, pour rajouter autant de fonctionnalit\u00e9s que vous le souhaitez.","title":"Qu'est-ce que BSB-LAN ?"},{"location":"fr/index.html#ou-et-comment-commencer","text":"Vous \u00eates un utilisateur exp\u00e9riment\u00e9 ? Consultez les instructions de d\u00e9marrage rapide . Sinon (ou si vous rencontrez des probl\u00e8mes), veuillez continuer \u00e0 lire ! Mon syst\u00e8me de chauffage est-il pris en charge par BSB-LAN ? Veuillez consulter la liste des syst\u00e8mes de chauffage pris en charge . Si vous savez d\u00e9j\u00e0 que votre syst\u00e8me est pris en charge, en savoir plus sur l'adaptateur BSB-LAN et o\u00f9 l'obtenir. Si vous avez d\u00e9j\u00e0 l'adaptateur, vous voudrez peut-\u00eatre savoir comment l'installer . Si vous avez install\u00e9 l'adaptateur, vous devrez configurer BSB-LAN . Une fois que vous avez tout configur\u00e9, d\u00e9couvrez comment utiliser BSB-LAN ou en savoir plus sur les fa\u00e7ons de l'int\u00e9grer dans les syst\u00e8mes de domotique . Si vous souhaitez mettre \u00e0 jour BSB-LAN et que vous souhaitez savoir ce qui a chang\u00e9 depuis votre derni\u00e8re installation, veuillez consulter le ChangeLog . Nos pages wiki sont en constante \u00e9volution et fournissent des connaissances de base ainsi que des sujets plus sp\u00e9cialis\u00e9s sur BSB-LAN et les syst\u00e8mes de chauffage en g\u00e9n\u00e9ral. Si vous rencontrez des probl\u00e8mes, consultez la page de d\u00e9pannage . Et avant de poser des questions \u00e0 qui que ce soit, consultez d'abord nos Foire aux questions (FAQ) !","title":"O\u00f9 et comment commencer ?"},{"location":"fr/bsb-lan_adapter.html","text":"L'adaptateur BSB-LAN Pour avoir un adaptateur - contactez Frederik \u00e0 bsb(\u00e4t)code-it.de (en allemand ou en anglais) pour plus de d\u00e9tails. Pour connecter votre syst\u00e8me de chauffage \u00e0 un microcontr\u00f4leur, vous avez besoin d'une carte \u00e9lectronique qui effectue la conversion de niveau logique: L'adaptateur est ensuite branch\u00e9 directement sur le microcontr\u00f4leur, soit sous les broches de l'ESP32-NodeMCU, soit sur le connecteur UEXT de l'Olimex: Les deux types d'ESP32 (Olimex et ESP32-NoceMCU) ne diff\u00e8rent que par l'emplacement de leurs connecteurs, les autres parties de la carte \u00e9tant identiques. L'adaptateur pour l'Arduino Due contient une puce EEPROM car la Due n'est pas \u00e9quip\u00e9e d'une EEPROM. Par cons\u00e9quent, vous pouvez r\u00e9utiliser l'adaptateur Arduino Due sur un microcontr\u00f4leur ESP32 (si vous connectez les bonnes pins avec des fils), mais vous ne pouvez pas utiliser un adaptateur ESP32 sur une Arduino Due. Microcontr\u00f4leurs appropri\u00e9s BSB-LAN peut \u00eatre install\u00e9 sur trois types diff\u00e9rents de microcontr\u00f4leurs: ESP32-Olimex ESP32-NodeMCU (version 30 broches uniquement!) Arduino Due. Olimex produit plusieurs types de cartes: Nous recommandons soit l' Olimex ESP32-EVB soit l' Olimex ESP32-POE-ISO . La simple version POE (sans \"ISO\") n'est pas recommand\u00e9e car elle ne permet pas de se connecter \u00e0 la fois \u00e0 l'Ethernet PoE et \u00e0 l'USB. L' Arduino Due n\u00e9cessite un Shield Ethernet pour acc\u00e9der au r\u00e9seau local. Chacun des diff\u00e9rents contr\u00f4leurs a ses avantages et ses inconv\u00e9nients: Fonctionnalit\u00e9 ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Mise \u00e0 jour via OTA X X X - Carte micro-SD int\u00e9gr\u00e9e X X - - GPIO accessibles 2 (GPIO13/16) quelques-uns quelques-uns beaucoup","title":"L'adaptateur BSB-LAN"},{"location":"fr/bsb-lan_adapter.html#ladaptateur-bsb-lan","text":"","title":"L'adaptateur BSB-LAN"},{"location":"fr/bsb-lan_adapter.html#pour-avoir-un-adaptateur-contactez-frederik-a-bsbatcode-itde-en-allemand-ou-en-anglais-pour-plus-de-details","text":"Pour connecter votre syst\u00e8me de chauffage \u00e0 un microcontr\u00f4leur, vous avez besoin d'une carte \u00e9lectronique qui effectue la conversion de niveau logique: L'adaptateur est ensuite branch\u00e9 directement sur le microcontr\u00f4leur, soit sous les broches de l'ESP32-NodeMCU, soit sur le connecteur UEXT de l'Olimex: Les deux types d'ESP32 (Olimex et ESP32-NoceMCU) ne diff\u00e8rent que par l'emplacement de leurs connecteurs, les autres parties de la carte \u00e9tant identiques. L'adaptateur pour l'Arduino Due contient une puce EEPROM car la Due n'est pas \u00e9quip\u00e9e d'une EEPROM. Par cons\u00e9quent, vous pouvez r\u00e9utiliser l'adaptateur Arduino Due sur un microcontr\u00f4leur ESP32 (si vous connectez les bonnes pins avec des fils), mais vous ne pouvez pas utiliser un adaptateur ESP32 sur une Arduino Due.","title":"Pour avoir un adaptateur - contactez Frederik \u00e0 bsb(\u00e4t)code-it.de (en allemand ou en anglais) pour plus de d\u00e9tails."},{"location":"fr/bsb-lan_adapter.html#microcontroleurs-appropries","text":"BSB-LAN peut \u00eatre install\u00e9 sur trois types diff\u00e9rents de microcontr\u00f4leurs: ESP32-Olimex ESP32-NodeMCU (version 30 broches uniquement!) Arduino Due. Olimex produit plusieurs types de cartes: Nous recommandons soit l' Olimex ESP32-EVB soit l' Olimex ESP32-POE-ISO . La simple version POE (sans \"ISO\") n'est pas recommand\u00e9e car elle ne permet pas de se connecter \u00e0 la fois \u00e0 l'Ethernet PoE et \u00e0 l'USB. L' Arduino Due n\u00e9cessite un Shield Ethernet pour acc\u00e9der au r\u00e9seau local. Chacun des diff\u00e9rents contr\u00f4leurs a ses avantages et ses inconv\u00e9nients: Fonctionnalit\u00e9 ESP32-Olimex ESP32-POE-ISO ESP32-NodeMCU Arduino Due Ethernet/LAN X X - X WiFi/WLAN X X X - Mise \u00e0 jour via OTA X X X - Carte micro-SD int\u00e9gr\u00e9e X X - - GPIO accessibles 2 (GPIO13/16) quelques-uns quelques-uns beaucoup","title":"Microcontr\u00f4leurs appropri\u00e9s"},{"location":"fr/bus_systems.html","text":"Le bus BSB/LPB/PPS D\u00e9velopp\u00e9 \u00e0 la fin du dernier mill\u00e9naire sur la base du BatiBUS (plus d'informations sont disponibles ici et ici ), de nombreux contr\u00f4leurs de syst\u00e8mes de chauffage Siemens utilisent toujours le m\u00eame type de bus physique pour communiquer avec les modules de commande des pi\u00e8ces et d'autres appareils de chauffage. Bien qu'une vitesse de bus de seulement 4800 bits par seconde puisse sembler anachronique de nos jours, elle fournit toujours un protocole de transmission stable et robuste qui est encore aujourd'hui parfaitement suffisant pour transmettre de courts messages de quelques dizaines d'octets sur des lignes pouvant atteindre un kilom\u00e8tre de long. Cette topologie de bus permet \u00e9galement de connecter BSB-LAN \u00e0 n'importe endroit: au module de commande, au syst\u00e8me de chauffage ou \u00e0 tout endroit o\u00f9 les 2 fils de bus sont disponibles. Vous pouvez m\u00eame ajouter les deux fils pour BSB-LAN dans un emplacement d\u00e9j\u00e0 \"occup\u00e9\" et cela n'endommagera pas l'autre appareil (en supposant une installation correcte). En plus de la m\u00eame couche physique, trois syst\u00e8mes de bus, BSB, LPB et PPS, s'occupent de diff\u00e9rentes t\u00e2ches et, bien que BSB et LPB doivent toujours \u00eatre pr\u00e9f\u00e9r\u00e9s lorsqu'ils sont disponibles, PPS fournit n\u00e9anmoins un ensemble de param\u00e8tres qui est g\u00e9n\u00e9ralement tout \u00e0 fait suffisant pour l'utilisateur moyen. BSB-LAN fonctionne sur l'un de ces bus et le passage de l'un \u00e0 l'autre n\u00e9cessite simplement de modifier quelques param\u00e8tres. Boiler System Bus (BSB) BSB est le syst\u00e8me de bus le plus courant dans les contr\u00f4leurs Siemens depuis 10 \u00e0 15 ans. Il s'agit du successeur du syst\u00e8me PPS, avec lequel il partage les m\u00eames param\u00e8tres physiques, mais il est beaucoup plus polyvalent: au lieu de quelques dizaines de param\u00e8tres, il peut en g\u00e9rer des centaines et les regrouper en diff\u00e9rentes cat\u00e9gories pour faciliter la navigation. Il s'agit d'un protocole bas\u00e9 sur les transactions, dans lequel la plupart des messages sont envoy\u00e9s d'un appareil \u00e0 un autre, et le destinataire renvoie un type de retour, par exemple si la t\u00e2che a pu \u00eatre effectu\u00e9e ou si elle contenait des donn\u00e9es non valides. Bien que BSB soit capable d'adresser plusieurs appareils sur le bus, il n'est pas utilis\u00e9 dans les syst\u00e8mes avec plus d'un appareil de chauffage. L'appareil de chauffage a toujours l'ID 0 , l'unit\u00e9 d'affichage sur le syst\u00e8me de chauffage a l'ID 10 (ou 0x0A en hexad\u00e9cimal) et le module de commande standard a l'ID 6 . BSB-LAN a l'ID 66 ou 0x42 en hexad\u00e9cimal. Les modules de commande qui \"parlent\" BSB sont, par exemple, les QAA55 et les QAA75. Local Process Bus (LPB) LPB a \u00e9t\u00e9 introduit plus ou moins en m\u00eame temps que PPS, qu'il compl\u00e9tait en termes de communication avec d'autres appareils de chauffage: alors que PPS \u00e9tait utilis\u00e9 pour communiquer avec le module de commande, LPB \u00e9tait utilis\u00e9 pour envoyer des commandes d'un appareil de chauffage principal \u00e0 un ou plusieurs appareils de chauffage auxiliaires, par exemple dans une configuration en cascade. \u00c0 l'\u00e9poque, la plupart des informations transmises via LPB \u00e9taient li\u00e9es aux composants internes du syst\u00e8me de chauffage (telles que les donn\u00e9es des capteurs ou les temp\u00e9ratures de consigne internes), tandis que les param\u00e8tres pertinents pour l'utilisateur (tels que la temp\u00e9rature de confort) n'\u00e9taient disponibles que via PPS. De nos jours, les appareils de chauffage qui offrent \u00e0 la fois LPB et BSB ont le m\u00eame type de param\u00e8tres disponibles sur les deux bus. LPB utilise un sch\u00e9ma d'adressage sp\u00e9cifique avec des segments et des appareils. Chaque segment de 0 \u00e0 15 peut contenir jusqu'\u00e0 15 appareils (de 1 \u00e0 15). Lors de l'\u00e9criture de ces adresses, le segment et l'appareil sont s\u00e9par\u00e9s par un deux-points: 00:01 ou 04:03 . Pour convertir l'adresse bas\u00e9e sur le segment en ID de destination requis pour BSB-LAN, la formule est la suivante: SEGMENT multipli\u00e9 par 16 plus APPAREIL moins un. Exemple: l'appareil 3 du segment 4 est \u00e9gal \u00e0 4 * 16 + 3 - 1 = 66. L'unit\u00e9 de chauffage principale est par d\u00e9finition 00:01 , ce qui correspond \u00e0 un ID de destination 0. Pour en savoir plus sur le syst\u00e8me LPB et son d\u00e9ploiement, vous pouvez consulter ces deux documents de la fin des ann\u00e9es 1990, l'un couvre les donn\u00e9es syst\u00e8me de base qui couvrent la conceptualisation d'un r\u00e9seau LPB, et l'autre traite des donn\u00e9es d'ing\u00e9nierie de base et fournit des d\u00e9tails sur les longueurs et diam\u00e8tres de c\u00e2ble, etc. \u00c0 l'exception de certains radiateurs Weishaut, les modules de commande ne sont pas connect\u00e9es au syst\u00e8me de chauffage via LPB. Les mod\u00e8les plus r\u00e9cents utilisent BSB pour cette t\u00e2che, tandis que les mod\u00e8les plus anciens utilisent soit PPS, soit dans certains cas OpenTherm. Point-to-Point Interface (PPS) L'interface point \u00e0 point (PPS, pour \"Punkt-zu-Punkt Schnittstelle\" en allemand) est compatible avec les autres syst\u00e8mes au niveau physique, mais pas au niveau du protocole de communication. Alors que BSB et LPB communiquent en envoyant des messages et en accusant leur r\u00e9ception, PPS est asservi \u00e0 l'unit\u00e9 de chauffage. L'unit\u00e9 de chauffage envoie constamment ses donn\u00e9es au module de commande et lui indique quand et quel type d'informations il lui renvoyer. Il peut donc falloir jusqu'\u00e0 quelques minutes avant qu'une valeur d\u00e9finie dans BSB-LAN ne soit r\u00e9ellement demand\u00e9e par le syst\u00e8me de chauffage et affich\u00e9. Il s'agit \u00e9galement d'un protocole tr\u00e8s sensible \u00e0 la temporisation, de sorte que l'ex\u00e9cution d'autres t\u00e2ches longues par BSB-LAN entra\u00eenera une interruption temporaire et un \u00e9ventuel message d'erreur sur le syst\u00e8me de chauffage. Cependant, apr\u00e8s un court moment, cela devrait se r\u00e9soudre de lui-m\u00eame lorsque les deux composants \"communiquent\" \u00e0 nouveau. Contrairement \u00e0 BSB et LPB, les modifications apport\u00e9es dans BSB-LAN n'ont pas d'effet imm\u00e9diat. La modification de valeurs, par exemple comme la temp\u00e9rature de consigne de confort de la pi\u00e8ce, sera tout d'abord stock\u00e9e en interne dans BSB-LAN, puis envoy\u00e9e au syst\u00e8me de chauffage une fois que celui-ci aura demand\u00e9 au module de commande (c'est-\u00e0-dire BSB-LAN) de le faire. Cela peut prendre jusqu'\u00e0 une minute ou plus, il ne faut donc pas \u00eatre confus si les param\u00e8tres ne s'affichent pas imm\u00e9diatement sur l'unite de chauffage, comme c'est le cas avec BSB et LPB. Avec PPS, BSB-LAN peut fonctionner dans deux modes: \u00e9coute passive ou en tant que module de commande. En mode passif, BSB-LAN peut simplement \u00e9couter les donn\u00e9es \u00e9chang\u00e9es entre le module de commande et l'appareil de chauffage. Il n'est pas possible d'envoyer ses propres donn\u00e9es, tout simplement parce qu'elles seraient \u00e9cras\u00e9es en un rien de temps par le m\u00eame type de donn\u00e9es provenant du module de commande d'ambiance. Pour envoyer des donn\u00e9es de param\u00e8tres au syst\u00e8me de chauffage, BSB-LAN doit fonctionner en mode \"module de commande\", ce qui signifie que tout autre module de commande doit \u00eatre retir\u00e9e du syst\u00e8me de chauffage. Dans ce cas, il est particuli\u00e8rement important d'envoyer r\u00e9guli\u00e8rement une valeur de temp\u00e9rature de pi\u00e8ce \u00e0 BSB-LAN, qui \u00e0 son tour enverra cette valeur \u00e0 l'appareil de chauffage. Seule une valeur de temp\u00e9rature ext\u00e9rieure peut \u00eatre ignor\u00e9e si le radiateur fonctionne uniquement sur la temp\u00e9rature ext\u00e9rieure. BSB-LAN stocke certaines valeurs dans sa m\u00e9moire EEPROM non volatile, mais certaines valeurs doivent \u00eatre r\u00e9initialis\u00e9es apr\u00e8s un red\u00e9marrage, telles que la temp\u00e9rature de consigne de la pi\u00e8ce. Il s'agit d'\u00e9viter de stocker une valeur de param\u00e8tre qui est devenue non valide mais qui est toujours envoy\u00e9e car elle est stock\u00e9e dans l'EEPROM. Les module de commande couramment utilis\u00e9es avec les syst\u00e8mes de chauffage qui prennent en charge PPS sont les QAA50 et les QAA70.","title":"Les BSB/LPB/PS bus"},{"location":"fr/bus_systems.html#le-bus-bsblpbpps","text":"D\u00e9velopp\u00e9 \u00e0 la fin du dernier mill\u00e9naire sur la base du BatiBUS (plus d'informations sont disponibles ici et ici ), de nombreux contr\u00f4leurs de syst\u00e8mes de chauffage Siemens utilisent toujours le m\u00eame type de bus physique pour communiquer avec les modules de commande des pi\u00e8ces et d'autres appareils de chauffage. Bien qu'une vitesse de bus de seulement 4800 bits par seconde puisse sembler anachronique de nos jours, elle fournit toujours un protocole de transmission stable et robuste qui est encore aujourd'hui parfaitement suffisant pour transmettre de courts messages de quelques dizaines d'octets sur des lignes pouvant atteindre un kilom\u00e8tre de long. Cette topologie de bus permet \u00e9galement de connecter BSB-LAN \u00e0 n'importe endroit: au module de commande, au syst\u00e8me de chauffage ou \u00e0 tout endroit o\u00f9 les 2 fils de bus sont disponibles. Vous pouvez m\u00eame ajouter les deux fils pour BSB-LAN dans un emplacement d\u00e9j\u00e0 \"occup\u00e9\" et cela n'endommagera pas l'autre appareil (en supposant une installation correcte). En plus de la m\u00eame couche physique, trois syst\u00e8mes de bus, BSB, LPB et PPS, s'occupent de diff\u00e9rentes t\u00e2ches et, bien que BSB et LPB doivent toujours \u00eatre pr\u00e9f\u00e9r\u00e9s lorsqu'ils sont disponibles, PPS fournit n\u00e9anmoins un ensemble de param\u00e8tres qui est g\u00e9n\u00e9ralement tout \u00e0 fait suffisant pour l'utilisateur moyen. BSB-LAN fonctionne sur l'un de ces bus et le passage de l'un \u00e0 l'autre n\u00e9cessite simplement de modifier quelques param\u00e8tres.","title":"Le bus BSB/LPB/PPS"},{"location":"fr/bus_systems.html#boiler-system-bus-bsb","text":"BSB est le syst\u00e8me de bus le plus courant dans les contr\u00f4leurs Siemens depuis 10 \u00e0 15 ans. Il s'agit du successeur du syst\u00e8me PPS, avec lequel il partage les m\u00eames param\u00e8tres physiques, mais il est beaucoup plus polyvalent: au lieu de quelques dizaines de param\u00e8tres, il peut en g\u00e9rer des centaines et les regrouper en diff\u00e9rentes cat\u00e9gories pour faciliter la navigation. Il s'agit d'un protocole bas\u00e9 sur les transactions, dans lequel la plupart des messages sont envoy\u00e9s d'un appareil \u00e0 un autre, et le destinataire renvoie un type de retour, par exemple si la t\u00e2che a pu \u00eatre effectu\u00e9e ou si elle contenait des donn\u00e9es non valides. Bien que BSB soit capable d'adresser plusieurs appareils sur le bus, il n'est pas utilis\u00e9 dans les syst\u00e8mes avec plus d'un appareil de chauffage. L'appareil de chauffage a toujours l'ID 0 , l'unit\u00e9 d'affichage sur le syst\u00e8me de chauffage a l'ID 10 (ou 0x0A en hexad\u00e9cimal) et le module de commande standard a l'ID 6 . BSB-LAN a l'ID 66 ou 0x42 en hexad\u00e9cimal. Les modules de commande qui \"parlent\" BSB sont, par exemple, les QAA55 et les QAA75.","title":"Boiler System Bus (BSB)"},{"location":"fr/bus_systems.html#local-process-bus-lpb","text":"LPB a \u00e9t\u00e9 introduit plus ou moins en m\u00eame temps que PPS, qu'il compl\u00e9tait en termes de communication avec d'autres appareils de chauffage: alors que PPS \u00e9tait utilis\u00e9 pour communiquer avec le module de commande, LPB \u00e9tait utilis\u00e9 pour envoyer des commandes d'un appareil de chauffage principal \u00e0 un ou plusieurs appareils de chauffage auxiliaires, par exemple dans une configuration en cascade. \u00c0 l'\u00e9poque, la plupart des informations transmises via LPB \u00e9taient li\u00e9es aux composants internes du syst\u00e8me de chauffage (telles que les donn\u00e9es des capteurs ou les temp\u00e9ratures de consigne internes), tandis que les param\u00e8tres pertinents pour l'utilisateur (tels que la temp\u00e9rature de confort) n'\u00e9taient disponibles que via PPS. De nos jours, les appareils de chauffage qui offrent \u00e0 la fois LPB et BSB ont le m\u00eame type de param\u00e8tres disponibles sur les deux bus. LPB utilise un sch\u00e9ma d'adressage sp\u00e9cifique avec des segments et des appareils. Chaque segment de 0 \u00e0 15 peut contenir jusqu'\u00e0 15 appareils (de 1 \u00e0 15). Lors de l'\u00e9criture de ces adresses, le segment et l'appareil sont s\u00e9par\u00e9s par un deux-points: 00:01 ou 04:03 . Pour convertir l'adresse bas\u00e9e sur le segment en ID de destination requis pour BSB-LAN, la formule est la suivante: SEGMENT multipli\u00e9 par 16 plus APPAREIL moins un. Exemple: l'appareil 3 du segment 4 est \u00e9gal \u00e0 4 * 16 + 3 - 1 = 66. L'unit\u00e9 de chauffage principale est par d\u00e9finition 00:01 , ce qui correspond \u00e0 un ID de destination 0. Pour en savoir plus sur le syst\u00e8me LPB et son d\u00e9ploiement, vous pouvez consulter ces deux documents de la fin des ann\u00e9es 1990, l'un couvre les donn\u00e9es syst\u00e8me de base qui couvrent la conceptualisation d'un r\u00e9seau LPB, et l'autre traite des donn\u00e9es d'ing\u00e9nierie de base et fournit des d\u00e9tails sur les longueurs et diam\u00e8tres de c\u00e2ble, etc. \u00c0 l'exception de certains radiateurs Weishaut, les modules de commande ne sont pas connect\u00e9es au syst\u00e8me de chauffage via LPB. Les mod\u00e8les plus r\u00e9cents utilisent BSB pour cette t\u00e2che, tandis que les mod\u00e8les plus anciens utilisent soit PPS, soit dans certains cas OpenTherm.","title":"Local Process Bus (LPB)"},{"location":"fr/bus_systems.html#point-to-point-interface-pps","text":"L'interface point \u00e0 point (PPS, pour \"Punkt-zu-Punkt Schnittstelle\" en allemand) est compatible avec les autres syst\u00e8mes au niveau physique, mais pas au niveau du protocole de communication. Alors que BSB et LPB communiquent en envoyant des messages et en accusant leur r\u00e9ception, PPS est asservi \u00e0 l'unit\u00e9 de chauffage. L'unit\u00e9 de chauffage envoie constamment ses donn\u00e9es au module de commande et lui indique quand et quel type d'informations il lui renvoyer. Il peut donc falloir jusqu'\u00e0 quelques minutes avant qu'une valeur d\u00e9finie dans BSB-LAN ne soit r\u00e9ellement demand\u00e9e par le syst\u00e8me de chauffage et affich\u00e9. Il s'agit \u00e9galement d'un protocole tr\u00e8s sensible \u00e0 la temporisation, de sorte que l'ex\u00e9cution d'autres t\u00e2ches longues par BSB-LAN entra\u00eenera une interruption temporaire et un \u00e9ventuel message d'erreur sur le syst\u00e8me de chauffage. Cependant, apr\u00e8s un court moment, cela devrait se r\u00e9soudre de lui-m\u00eame lorsque les deux composants \"communiquent\" \u00e0 nouveau. Contrairement \u00e0 BSB et LPB, les modifications apport\u00e9es dans BSB-LAN n'ont pas d'effet imm\u00e9diat. La modification de valeurs, par exemple comme la temp\u00e9rature de consigne de confort de la pi\u00e8ce, sera tout d'abord stock\u00e9e en interne dans BSB-LAN, puis envoy\u00e9e au syst\u00e8me de chauffage une fois que celui-ci aura demand\u00e9 au module de commande (c'est-\u00e0-dire BSB-LAN) de le faire. Cela peut prendre jusqu'\u00e0 une minute ou plus, il ne faut donc pas \u00eatre confus si les param\u00e8tres ne s'affichent pas imm\u00e9diatement sur l'unite de chauffage, comme c'est le cas avec BSB et LPB. Avec PPS, BSB-LAN peut fonctionner dans deux modes: \u00e9coute passive ou en tant que module de commande. En mode passif, BSB-LAN peut simplement \u00e9couter les donn\u00e9es \u00e9chang\u00e9es entre le module de commande et l'appareil de chauffage. Il n'est pas possible d'envoyer ses propres donn\u00e9es, tout simplement parce qu'elles seraient \u00e9cras\u00e9es en un rien de temps par le m\u00eame type de donn\u00e9es provenant du module de commande d'ambiance. Pour envoyer des donn\u00e9es de param\u00e8tres au syst\u00e8me de chauffage, BSB-LAN doit fonctionner en mode \"module de commande\", ce qui signifie que tout autre module de commande doit \u00eatre retir\u00e9e du syst\u00e8me de chauffage. Dans ce cas, il est particuli\u00e8rement important d'envoyer r\u00e9guli\u00e8rement une valeur de temp\u00e9rature de pi\u00e8ce \u00e0 BSB-LAN, qui \u00e0 son tour enverra cette valeur \u00e0 l'appareil de chauffage. Seule une valeur de temp\u00e9rature ext\u00e9rieure peut \u00eatre ignor\u00e9e si le radiateur fonctionne uniquement sur la temp\u00e9rature ext\u00e9rieure. BSB-LAN stocke certaines valeurs dans sa m\u00e9moire EEPROM non volatile, mais certaines valeurs doivent \u00eatre r\u00e9initialis\u00e9es apr\u00e8s un red\u00e9marrage, telles que la temp\u00e9rature de consigne de la pi\u00e8ce. Il s'agit d'\u00e9viter de stocker une valeur de param\u00e8tre qui est devenue non valide mais qui est toujours envoy\u00e9e car elle est stock\u00e9e dans l'EEPROM. Les module de commande couramment utilis\u00e9es avec les syst\u00e8mes de chauffage qui prennent en charge PPS sont les QAA50 et les QAA70.","title":"Point-to-Point Interface (PPS)"},{"location":"fr/configure.html","text":"Configuration Il existe deux fa\u00e7ons de configurer BSB-LAN : Via le fichier de configuration BSB_LAN_config.h Via l'interface web en appelant http://bsb-lan.local/C (ou l'adresse IP correspondante) Pour la configuration initiale, certains param\u00e8tres doivent \u00eatre configur\u00e9s dans le fichier de configuration (tels que les param\u00e8tres de langue et de r\u00e9seau). Toutes les modifications ult\u00e9rieures peuvent \u00eatre effectu\u00e9es via l'interface web. Il peut cependant \u00eatre utile de configurer (\u00e9galement) le fichier de configuration dans le cas o\u00f9 vous devriez changer de microcontr\u00f4leur. Presque tous les param\u00e8tres existent \u00e9galement dans l'interface web et vice versa. Sur un microcontr\u00f4leur bas\u00e9 sur ESP32, BSB-LAN configurera son propre point d'acc\u00e8s sans fil nomm\u00e9 BSB-LAN s'il ne peut pas se connecter \u00e0 un r\u00e9seau. Ainsi, m\u00eame sans aucune configuration suppl\u00e9mentaire, vous pouvez vous connecter \u00e0 ce point d'acc\u00e8s avec le mot de passe BSB-LPB-PPS-LAN et acc\u00e9der \u00e0 BSB-LAN via l'adresse IP http://192.168.4.1 et poursuivre la configuration de cette mani\u00e8re. Gardez \u00e0 l'esprit que si vous avez d\u00e9fini un mot de passe ou un nom d'utilisateur et un mot de passe HTTP, ceux-ci sont toujours requis si ces d\u00e9tails sont stock\u00e9s dans l'EEPROM ou BSB_LAN_config.h . Configuration via BSB_LAN_config.h Le fichier de configuration se compose de variables qui sont utilis\u00e9es dans d'autres parties de BSB-LAN. Il est donc important de ne modifier que le contenu des variables (c'est-\u00e0-dire les param\u00e8tres) et pas le type des variables. Ainsi, si vous avez par exemple le param\u00e8tre byte ip_addr[4] = {192,168,178,88} ; vous ne devez pas modifier la partie byte ip_addr[4] = , mais seulement le contenu, dans ce cas l'adresse IP s\u00e9par\u00e9e par des virgules. Configuration via l'interface web La configuration de BSB-LAN via l'interface web est assez simple, car vous n'avez pas \u00e0 vous soucier des noms de variables, mais vous disposez de descriptions claires. Au d\u00e9part, seul un nombre limit\u00e9 d'options de configuration sont affich\u00e9es dans l'interface web. Pour acc\u00e9der \u00e0 l'ensemble des param\u00e8tres, vous devez d\u00e9finir l'option \"extended configuration\" sur \"on\". Aper\u00e7u des options de configuration table th:first-of-type { width: 20% ; } table th:nth-of-type(2) { width: 20% ; } table th:nth-of-type(3) { width: 40% ; } table th:nth-of-type(4) { width: 20% ; } Param\u00e8tres g\u00e9n\u00e9raux Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles - ** #define LANG ** D\u00e9finir la langue DE , EN , FR et autres codes de pays ISO Afficher la configuration \u00e9tendue - Afficher toutes les options de configuration On Off Lire la configuration depuis l'EEPROM UseEEPROM Lire la configuration depuis l'EEPROM ou le fichier On ( 1 ) Off ( 0 ) Niveau d'acc\u00e8s en \u00e9criture - Si DEFAULT_FLAG est d\u00e9fini sur FL_SW_CTL_RONLY , vous pouvez d\u00e9finir le niveau d'acc\u00e8s en \u00e9criture ici. Off (lecture seule) On (Standard) On (Complet) V\u00e9rifier les mises \u00e0 jour enable_version_check Interroger le serveur BSB-LAN pour une nouvelle version disponible On ( true ) Mise \u00e0 jour OTA enable_ota_update Activer la mise \u00e0 jour OTA (Over-The-Air) On ( true ) \u00c9conomie d'\u00e9nergie esp32_save_energy R\u00e9duit la vitesse, \u00e9conomise l'\u00e9nergie. Ne pas activer lors de l'utilisation du Wi-Fi. On ( true ) Off ( false ) Syst\u00e8me de fichiers du serveur Web webserver Active le service de fichiers depuis la carte SD On ( true ) Off ( false ) - #define DEFAULT_FLAG D\u00e9finir l'acc\u00e8s en lecture/\u00e9criture au syst\u00e8me de chauffage. FL_RONLY d\u00e9finit tous les param\u00e8tres en lecture seule. FL_SW_CTL_RONLY permet de d\u00e9finir l'acc\u00e8s en lecture/\u00e9criture via le param\u00e8tre de configuration de l'interface web. 0 donne le droit de r\u00e9\u00e9crire tous les param\u00e8tres pouvant \u00eatre \u00e9crits. N'utilisez pas cette option sauf instruction contraire ! FL_RONLY FL_SW_CTL_RONLY 0 Param\u00e8tres de bus Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Type de bus bus_type Type de bus (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) Mode PPS pps_write BSB-LAN peut agir comme une unit\u00e9 de pi\u00e8ce PPS (uniquement si aucune unit\u00e9 de pi\u00e8ce r\u00e9elle n'est connect\u00e9e) ou simplement \u00e9couter passivement. passif ( 0 ) en tant qu'unit\u00e9 de pi\u00e8ce ( 1 ) Mod\u00e8le QAA PPS QAA_TYPE Unit\u00e9 de pi\u00e8ce qui doit \u00eatre simul\u00e9e pour le bus PPS QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Adresse propre own_address Adresse de bus propre (par d\u00e9faut 66 ne doit pas \u00eatre modifi\u00e9e) 66 ( 66 ) Adresse de destination dest_address Adresse de bus de destination. Pour BSB toujours 0 . Pour LPB 0 si l'appareil de destination se trouve dans le segment 1, adresse de l'appareil 0. Pour convertir de la notation de segment et d'adresse d'appareil LPB en adresse de destination, multipliez le segment par 16, ajoutez l'adresse de l'appareil et soustrayez un. Par exemple, pour adresser un appareil du segment 4 avec l'adresse de l'appareil 3, l'adresse de destination est (4 * 16) + 3 - 1 = 66 . Pour PPS non pertinent. 0 ( 0 ) Num\u00e9ro d'\u00e9pingle RX Num\u00e9ro d'\u00e9pingle TX bus_pins D\u00e9finir les broches RX/TX pour communiquer avec l'adaptateur BSB-LAN. Laissez \u00e0 0 pour la d\u00e9tection automatique. 0 et 0 ( 0, 0 ) Param\u00e8tres r\u00e9seau Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles P\u00e9riph\u00e9rique r\u00e9seau network_type Choisissez entre WLAN et LAN pour connecter BSB-LAN au r\u00e9seau. LAN ( 0 ) WLAN ( 1 ) Nom du r\u00e9seau WLAN wifi_ssid D\u00e9finir le nom du r\u00e9seau WLAN lors de l'utilisation du WLAN. Your_WLAN_name ( Your_WLAN_name ) Mot de passe WLAN wifi_pass D\u00e9finir le mot de passe du WLAN lors de l'utilisation du WLAN. YourWLANpassword ( YourWLANpassword ) Utilisation du DHCP use_dhcp D\u00e9finir si oui ou non utiliser DHCP pour obtenir une adresse IP du routeur. On ( true ) Off ( false ) Adresse IP (fixe) ip_addr Lorsque vous n'utilisez pas DHCP, vous pouvez d\u00e9finir une adresse IP fixe ici. Sinon, laissez \u00e0 0.0.0.0 . Dans l'interface web, vous pouvez utiliser la notation par points. Dans le fichier de configuration, vous devez utiliser une virgule comme s\u00e9parateur. 192.168.178.88 ( 192,168,178,88 ) Sous-r\u00e9seau subnet_addr Sous-r\u00e9seau lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 255.255.255.0 ( 255,255,255,0 ) Passerelle gateway_addr Adresse de la passerelle lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 192.168.178.1 ( 192,168,178,1 ) Serveur DNS dns_addr Adresse du serveur DNS lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 192.168.178.1 ( 192,168,178,1 ) Port TCP HTTPPort Num\u00e9ro de port HTTP pour acc\u00e9der \u00e0 l'interface web. Par d\u00e9faut 80 . 80 ( 80 ) Adresse MAC mac D\u00e9finir une adresse MAC fixe. Uniquement pertinent sur Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) Nom d'h\u00f4te mDNS mDNS_hostname Nom d'h\u00f4te pour la d\u00e9couverte mDNS BSB-LAN ( BSB-LAN ) Authentification HTTP USER_PASS Si ce param\u00e8tre n'est pas vide, il contient le nom d'utilisateur et le mot de passe pour l'authentification HTTP, s\u00e9par\u00e9s par un deux-points. Nom d'utilisateur: Mot de passe ( Username:Password ) Mot de passe URL PASSKEY Ce param\u00e8tre ajoute une s\u00e9quence d\u00e9finie par l'utilisateur qui doit \u00eatre ajout\u00e9e \u00e0 l'URL apr\u00e8s le nom d'h\u00f4te. Par exemple, un mot de passe de 1234 n\u00e9cessite que chaque URL soit \u00e9crite comme http://bsb-lan.local/1234/ au lieu de simplement http://bsb-lan.local/ . Laissez vide pour aucun mot de passe. 1234 ( 1234 ) Adresse IP de confiance trusted_ip_addr L'acc\u00e8s \u00e0 BSB-LAN n'est possible que depuis cette adresse IP. M\u00eame notation que pour l'adresse IP. 192.168.178.89 ( 192,168,178,89 ) Adresse IP de confiance trusted_ip_addr2 L'acc\u00e8s \u00e0 BSB-LAN n'est possible que depuis cette adresse IP. M\u00eame notation que pour l'adresse IP. 192.168.178.90 ( 192,168,178,90 ) - bssid Entrez ici une adresse BSSID sp\u00e9cifique pour vous assurer de vous connecter \u00e0 un point d'acc\u00e8s sp\u00e9cifique. Laissez \u00e0 zero pour ne pas l'utiliser. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server D\u00e9finissez un serveur NTP ici pour obtenir l'heure exacte pour BSB-LAN. Laissez une cha\u00eene vide si vous ne souhaitez pas utiliser de serveur NTP. Uniquement pour les microcontr\u00f4leurs bas\u00e9s sur ESP32. ( pool.ntp.org ) - local_timezone Fuseau horaire \u00e0 utiliser pour NTP. Voir ici pour une liste compl\u00e8te. ( CET-1CEST,M3.5.0,M10.5.0/3 ) Journalisation Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles P\u00e9riph\u00e9rique de stockage LogDestination S\u00e9lectionnez la destination pour \u00e9crire vos logs. La carte SD est fortement recommand\u00e9e, car l'utilisation de la m\u00e9moire flash interne finira par l'user. Carte SD ( SDCARD ) M\u00e9moire flash interne ( FLASH ) Mode de log LoggingMode D\u00e9finir la destination des logs. Plusieurs s\u00e9lections sont possibles,dans ce cas les valeurs doivent \u00eatre ajout\u00e9es, par exemple, pour envoyer au courtier MQTT et \u00e0 UDP, d\u00e9finir la valeur sur 4 + 16 = 20 \u00c9crire sur la carte SD ( 1 ) Calculer les moyennes sur 24 heures ( 2 ) Envoyer au courtier MQTT ( 4 ) Envoyer uniquement les param\u00e8tres de journalisation au courtier MQTT ( 8 ) Envoyer \u00e0 UDP ( 16 ) Intervalle de journalisation log_interval Intervalle pour l'envoie des logs (en secondes) 60 ( 60 ) Param\u00e8tres de journalisation log_parameters Liste des param\u00e8tres \u00e0 logger. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Journaliser les t\u00e9l\u00e9grammes de bus logTelegram logger les t\u00e9l\u00e9grammes de bus bruts, tels que les messages de diffusion ou les t\u00e9l\u00e9grammes inconnus Off ( LOGTELEGRAM_OFF ) Journaliser tous les t\u00e9l\u00e9grammes de bus ( LOGTELEGRAM_ON ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus inconnus ( LOGTELEGRAM_UNKNOWN_ONLY ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus de diffusion ( LOGTELEGRAM_BROADCAST_ONLY ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus de diffusion inconnus ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) Param\u00e8tres de moyenne sur 24 heures avg_parameters Liste des param\u00e8tres pour la g\u00e9n\u00e9ration de moyennes sur 24 heures. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT D\u00e9finir le nombre de jours par d\u00e9faut \u00e0 tracer pour les donn\u00e9es de log ( 3 ) MQTT Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Serveur de courtier MQTT mqtt_broker_addr Nom d'h\u00f4te/IP du courtier MQTT my-mqtt-broker.local ( my-mqtt-broker.local ) Nom d'utilisateur MQTT MQTTUsername Nom d'utilisateur facultatif pour le courtier MQTT MyMQTTusername ( MyMQTTusername ) Mot de passe MQTT MQTTPassword Mot de passe facultatif pour le courtier MQTT MyMQTTpassword ( MyMQTTpassword ) ID de l'appareil MQTT MQTTDeviceID Identifiant de l'appareil pour MQTT BSB-LAN ( BSB-LAN ) Pr\u00e9fixe de sujet MQTT MQTTTopicPrefix Pr\u00e9fixe de sujet pour MQTT BSB-LAN ( BSB-LAN ) Utilisation de MQTT mqtt_mode D\u00e9finir le format des messages MQTT Texte brut ( 1 ) - Envoyer le num\u00e9ro et la valeur du param\u00e8tre au format texte brut JSON ( 2 ) - Broches DHT DHT_Pins D\u00e9finissez les broches du capteur DHT22 (utilisez -1 dans le fichier de configuration pour d\u00e9sactiver) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1 ) --- --- --- --- Capteurs BME280 BME_Sensors D\u00e9finissez le nombre de capteurs BME280 sur le bus I2C. Vous devez avoir acc\u00e8s aux broches I2C. Les adresses fixes 0x76 et 0x77 seront utilis\u00e9es. Utilisez 0 pour d\u00e9sactiver. 1 ( 1 ) Utilisation de MAX ! enable_max_cul Activer ou d\u00e9sactiver la connexion \u00e0 CUNO/CUNX/MAX!Cube modifi\u00e9 On ( true ) Off ( false ) Adresse IP du cube max_cul_ip_addr Adresse IP du CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) Appareils MAX ! max_device_list ID des appareils MAX ! \u00e0 interroger. Ces ID peuvent \u00eatre trouv\u00e9s sur une \u00e9tiquette de l'appareil. Apr\u00e8s les avoir entr\u00e9s ici, chaque appareil doit \u00eatre mis en mode d'appariement. Cette op\u00e9ration doit \u00eatre r\u00e9p\u00e9t\u00e9e chaque fois que la disposition EEPROM de BSB-LAN est modifi\u00e9e (voir le journal des modifications). KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) Utilisation de IPWE enable_ipwe Activer l'extension IPWE ( /ipwe.cgi ) On ( true ) Off ( false ) Param\u00e8tres IPWE ipwe_parameters Liste des param\u00e8tres \u00e0 afficher dans l'extension IPWE. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Activer les fonctions personnalis\u00e9es D\u00e9bogage Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Utilisation du d\u00e9bogage debug_mode S\u00e9lectionnez la sortie de d\u00e9bogage Off ( 0 ) S\u00e9rie ( 1 ) Telnet ( 2 ) Mode verbeux verbose Activer ou d\u00e9sactiver les messages de d\u00e9bogage verbeux (ne pas d\u00e9sactiver \u00e0 moins d'\u00eatre conseill\u00e9) On ( 1 ) Off ( 0 ) Mode donn\u00e9es brutes monitor Activer ou d\u00e9sactiver le mode donn\u00e9es brutes (ne pas activer \u00e0 moins d'\u00eatre conseill\u00e9) On ( 1 ) Off ( 0 ) Afficher les param\u00e8tres inconnus show_unknown Essayez d'afficher \u00e9galement les param\u00e8tres non pris en charge par l'appareil de destination On ( true ) Off ( false ) Adressage de diff\u00e9rents r\u00e9gulateurs de chauffage Pour adresser des param\u00e8tres \u00e0 partir d'appareils autres que l'appareil de destination par d\u00e9faut dans l'interface Web, vous devez ajouter un point d'exclamation suivi de l'adresse de l'appareil (voir ci-dessus pour la conversion de la notation segment/appareil en adresse d'appareil). Par exemple, le param\u00e8tre 8700 de l'adresse d'appareil 1 serait \u00e9crit comme 8700!1 au lieu de simplement 8700 . Pour le fichier de configuration, les param\u00e8tres sont r\u00e9pertori\u00e9s sous la forme {num\u00e9ro de param\u00e8tre, adresse de destination} . Le param\u00e8tre 8700 de l'adresse d'appareil 1 serait donc \u00e9crit comme {8700, 1} . Pour adresser la destination par d\u00e9faut, vous pouvez le faire en utilisant -1 .","title":"Configuration"},{"location":"fr/configure.html#configuration","text":"Il existe deux fa\u00e7ons de configurer BSB-LAN : Via le fichier de configuration BSB_LAN_config.h Via l'interface web en appelant http://bsb-lan.local/C (ou l'adresse IP correspondante) Pour la configuration initiale, certains param\u00e8tres doivent \u00eatre configur\u00e9s dans le fichier de configuration (tels que les param\u00e8tres de langue et de r\u00e9seau). Toutes les modifications ult\u00e9rieures peuvent \u00eatre effectu\u00e9es via l'interface web. Il peut cependant \u00eatre utile de configurer (\u00e9galement) le fichier de configuration dans le cas o\u00f9 vous devriez changer de microcontr\u00f4leur. Presque tous les param\u00e8tres existent \u00e9galement dans l'interface web et vice versa. Sur un microcontr\u00f4leur bas\u00e9 sur ESP32, BSB-LAN configurera son propre point d'acc\u00e8s sans fil nomm\u00e9 BSB-LAN s'il ne peut pas se connecter \u00e0 un r\u00e9seau. Ainsi, m\u00eame sans aucune configuration suppl\u00e9mentaire, vous pouvez vous connecter \u00e0 ce point d'acc\u00e8s avec le mot de passe BSB-LPB-PPS-LAN et acc\u00e9der \u00e0 BSB-LAN via l'adresse IP http://192.168.4.1 et poursuivre la configuration de cette mani\u00e8re. Gardez \u00e0 l'esprit que si vous avez d\u00e9fini un mot de passe ou un nom d'utilisateur et un mot de passe HTTP, ceux-ci sont toujours requis si ces d\u00e9tails sont stock\u00e9s dans l'EEPROM ou BSB_LAN_config.h .","title":"Configuration"},{"location":"fr/configure.html#configuration-via-bsb_lan_configh","text":"Le fichier de configuration se compose de variables qui sont utilis\u00e9es dans d'autres parties de BSB-LAN. Il est donc important de ne modifier que le contenu des variables (c'est-\u00e0-dire les param\u00e8tres) et pas le type des variables. Ainsi, si vous avez par exemple le param\u00e8tre byte ip_addr[4] = {192,168,178,88} ; vous ne devez pas modifier la partie byte ip_addr[4] = , mais seulement le contenu, dans ce cas l'adresse IP s\u00e9par\u00e9e par des virgules.","title":"Configuration via BSB_LAN_config.h"},{"location":"fr/configure.html#configuration-via-linterface-web","text":"La configuration de BSB-LAN via l'interface web est assez simple, car vous n'avez pas \u00e0 vous soucier des noms de variables, mais vous disposez de descriptions claires. Au d\u00e9part, seul un nombre limit\u00e9 d'options de configuration sont affich\u00e9es dans l'interface web. Pour acc\u00e9der \u00e0 l'ensemble des param\u00e8tres, vous devez d\u00e9finir l'option \"extended configuration\" sur \"on\".","title":"Configuration via l'interface web"},{"location":"fr/configure.html#apercu-des-options-de-configuration","text":"table th:first-of-type { width: 20% ; } table th:nth-of-type(2) { width: 20% ; } table th:nth-of-type(3) { width: 40% ; } table th:nth-of-type(4) { width: 20% ; }","title":"Aper\u00e7u des options de configuration"},{"location":"fr/configure.html#parametres-generaux","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles - ** #define LANG ** D\u00e9finir la langue DE , EN , FR et autres codes de pays ISO Afficher la configuration \u00e9tendue - Afficher toutes les options de configuration On Off Lire la configuration depuis l'EEPROM UseEEPROM Lire la configuration depuis l'EEPROM ou le fichier On ( 1 ) Off ( 0 ) Niveau d'acc\u00e8s en \u00e9criture - Si DEFAULT_FLAG est d\u00e9fini sur FL_SW_CTL_RONLY , vous pouvez d\u00e9finir le niveau d'acc\u00e8s en \u00e9criture ici. Off (lecture seule) On (Standard) On (Complet) V\u00e9rifier les mises \u00e0 jour enable_version_check Interroger le serveur BSB-LAN pour une nouvelle version disponible On ( true ) Mise \u00e0 jour OTA enable_ota_update Activer la mise \u00e0 jour OTA (Over-The-Air) On ( true ) \u00c9conomie d'\u00e9nergie esp32_save_energy R\u00e9duit la vitesse, \u00e9conomise l'\u00e9nergie. Ne pas activer lors de l'utilisation du Wi-Fi. On ( true ) Off ( false ) Syst\u00e8me de fichiers du serveur Web webserver Active le service de fichiers depuis la carte SD On ( true ) Off ( false ) - #define DEFAULT_FLAG D\u00e9finir l'acc\u00e8s en lecture/\u00e9criture au syst\u00e8me de chauffage. FL_RONLY d\u00e9finit tous les param\u00e8tres en lecture seule. FL_SW_CTL_RONLY permet de d\u00e9finir l'acc\u00e8s en lecture/\u00e9criture via le param\u00e8tre de configuration de l'interface web. 0 donne le droit de r\u00e9\u00e9crire tous les param\u00e8tres pouvant \u00eatre \u00e9crits. N'utilisez pas cette option sauf instruction contraire ! FL_RONLY FL_SW_CTL_RONLY 0","title":"Param\u00e8tres g\u00e9n\u00e9raux"},{"location":"fr/configure.html#parametres-de-bus","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Type de bus bus_type Type de bus (BSB/LPB/PPS) BSB ( 0 ) LPB ( 1 ) PPS ( 2 ) Mode PPS pps_write BSB-LAN peut agir comme une unit\u00e9 de pi\u00e8ce PPS (uniquement si aucune unit\u00e9 de pi\u00e8ce r\u00e9elle n'est connect\u00e9e) ou simplement \u00e9couter passivement. passif ( 0 ) en tant qu'unit\u00e9 de pi\u00e8ce ( 1 ) Mod\u00e8le QAA PPS QAA_TYPE Unit\u00e9 de pi\u00e8ce qui doit \u00eatre simul\u00e9e pour le bus PPS QAA70 ( 0x53 ), QAA50 ( 0x52 ), QAA95 ( 0x37 ), QAW10 ( 0x4D ), QAW20 ( 0x4E ), MCBA/REA70/DC225 ( 0x58 ), QAA10 ( 0x5A ), QAA20 ( 0x5B ), QAA12/13 ( 0x5D ), BMU ( 0x66 ), RVD130 ( 0x43 ) Adresse propre own_address Adresse de bus propre (par d\u00e9faut 66 ne doit pas \u00eatre modifi\u00e9e) 66 ( 66 ) Adresse de destination dest_address Adresse de bus de destination. Pour BSB toujours 0 . Pour LPB 0 si l'appareil de destination se trouve dans le segment 1, adresse de l'appareil 0. Pour convertir de la notation de segment et d'adresse d'appareil LPB en adresse de destination, multipliez le segment par 16, ajoutez l'adresse de l'appareil et soustrayez un. Par exemple, pour adresser un appareil du segment 4 avec l'adresse de l'appareil 3, l'adresse de destination est (4 * 16) + 3 - 1 = 66 . Pour PPS non pertinent. 0 ( 0 ) Num\u00e9ro d'\u00e9pingle RX Num\u00e9ro d'\u00e9pingle TX bus_pins D\u00e9finir les broches RX/TX pour communiquer avec l'adaptateur BSB-LAN. Laissez \u00e0 0 pour la d\u00e9tection automatique. 0 et 0 ( 0, 0 )","title":"Param\u00e8tres de bus"},{"location":"fr/configure.html#parametres-reseau","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles P\u00e9riph\u00e9rique r\u00e9seau network_type Choisissez entre WLAN et LAN pour connecter BSB-LAN au r\u00e9seau. LAN ( 0 ) WLAN ( 1 ) Nom du r\u00e9seau WLAN wifi_ssid D\u00e9finir le nom du r\u00e9seau WLAN lors de l'utilisation du WLAN. Your_WLAN_name ( Your_WLAN_name ) Mot de passe WLAN wifi_pass D\u00e9finir le mot de passe du WLAN lors de l'utilisation du WLAN. YourWLANpassword ( YourWLANpassword ) Utilisation du DHCP use_dhcp D\u00e9finir si oui ou non utiliser DHCP pour obtenir une adresse IP du routeur. On ( true ) Off ( false ) Adresse IP (fixe) ip_addr Lorsque vous n'utilisez pas DHCP, vous pouvez d\u00e9finir une adresse IP fixe ici. Sinon, laissez \u00e0 0.0.0.0 . Dans l'interface web, vous pouvez utiliser la notation par points. Dans le fichier de configuration, vous devez utiliser une virgule comme s\u00e9parateur. 192.168.178.88 ( 192,168,178,88 ) Sous-r\u00e9seau subnet_addr Sous-r\u00e9seau lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 255.255.255.0 ( 255,255,255,0 ) Passerelle gateway_addr Adresse de la passerelle lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 192.168.178.1 ( 192,168,178,1 ) Serveur DNS dns_addr Adresse du serveur DNS lors de l'utilisation d'une adresse IP fixe. M\u00eame notation que pour l'adresse IP. 192.168.178.1 ( 192,168,178,1 ) Port TCP HTTPPort Num\u00e9ro de port HTTP pour acc\u00e9der \u00e0 l'interface web. Par d\u00e9faut 80 . 80 ( 80 ) Adresse MAC mac D\u00e9finir une adresse MAC fixe. Uniquement pertinent sur Arduino. 00:80:41:19:69:90 ( 0x00, 0x80, 0x41, 0x19, 0x69, 0x90 ) Nom d'h\u00f4te mDNS mDNS_hostname Nom d'h\u00f4te pour la d\u00e9couverte mDNS BSB-LAN ( BSB-LAN ) Authentification HTTP USER_PASS Si ce param\u00e8tre n'est pas vide, il contient le nom d'utilisateur et le mot de passe pour l'authentification HTTP, s\u00e9par\u00e9s par un deux-points. Nom d'utilisateur: Mot de passe ( Username:Password ) Mot de passe URL PASSKEY Ce param\u00e8tre ajoute une s\u00e9quence d\u00e9finie par l'utilisateur qui doit \u00eatre ajout\u00e9e \u00e0 l'URL apr\u00e8s le nom d'h\u00f4te. Par exemple, un mot de passe de 1234 n\u00e9cessite que chaque URL soit \u00e9crite comme http://bsb-lan.local/1234/ au lieu de simplement http://bsb-lan.local/ . Laissez vide pour aucun mot de passe. 1234 ( 1234 ) Adresse IP de confiance trusted_ip_addr L'acc\u00e8s \u00e0 BSB-LAN n'est possible que depuis cette adresse IP. M\u00eame notation que pour l'adresse IP. 192.168.178.89 ( 192,168,178,89 ) Adresse IP de confiance trusted_ip_addr2 L'acc\u00e8s \u00e0 BSB-LAN n'est possible que depuis cette adresse IP. M\u00eame notation que pour l'adresse IP. 192.168.178.90 ( 192,168,178,90 ) - bssid Entrez ici une adresse BSSID sp\u00e9cifique pour vous assurer de vous connecter \u00e0 un point d'acc\u00e8s sp\u00e9cifique. Laissez \u00e0 zero pour ne pas l'utiliser. ( 0x00, 0x00, 0x00, 0x00, 0x00, 0x00 ) - ntp_server D\u00e9finissez un serveur NTP ici pour obtenir l'heure exacte pour BSB-LAN. Laissez une cha\u00eene vide si vous ne souhaitez pas utiliser de serveur NTP. Uniquement pour les microcontr\u00f4leurs bas\u00e9s sur ESP32. ( pool.ntp.org ) - local_timezone Fuseau horaire \u00e0 utiliser pour NTP. Voir ici pour une liste compl\u00e8te. ( CET-1CEST,M3.5.0,M10.5.0/3 )","title":"Param\u00e8tres r\u00e9seau"},{"location":"fr/configure.html#journalisation","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles P\u00e9riph\u00e9rique de stockage LogDestination S\u00e9lectionnez la destination pour \u00e9crire vos logs. La carte SD est fortement recommand\u00e9e, car l'utilisation de la m\u00e9moire flash interne finira par l'user. Carte SD ( SDCARD ) M\u00e9moire flash interne ( FLASH ) Mode de log LoggingMode D\u00e9finir la destination des logs. Plusieurs s\u00e9lections sont possibles,dans ce cas les valeurs doivent \u00eatre ajout\u00e9es, par exemple, pour envoyer au courtier MQTT et \u00e0 UDP, d\u00e9finir la valeur sur 4 + 16 = 20 \u00c9crire sur la carte SD ( 1 ) Calculer les moyennes sur 24 heures ( 2 ) Envoyer au courtier MQTT ( 4 ) Envoyer uniquement les param\u00e8tres de journalisation au courtier MQTT ( 8 ) Envoyer \u00e0 UDP ( 16 ) Intervalle de journalisation log_interval Intervalle pour l'envoie des logs (en secondes) 60 ( 60 ) Param\u00e8tres de journalisation log_parameters Liste des param\u00e8tres \u00e0 logger. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) Journaliser les t\u00e9l\u00e9grammes de bus logTelegram logger les t\u00e9l\u00e9grammes de bus bruts, tels que les messages de diffusion ou les t\u00e9l\u00e9grammes inconnus Off ( LOGTELEGRAM_OFF ) Journaliser tous les t\u00e9l\u00e9grammes de bus ( LOGTELEGRAM_ON ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus inconnus ( LOGTELEGRAM_UNKNOWN_ONLY ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus de diffusion ( LOGTELEGRAM_BROADCAST_ONLY ) Journaliser uniquement les t\u00e9l\u00e9grammes de bus de diffusion inconnus ( LOGTELEGRAM_UNKNOWN_ONLY + LOGTELEGRAM_BROADCAST_ONLY ) Param\u00e8tres de moyenne sur 24 heures avg_parameters Liste des param\u00e8tres pour la g\u00e9n\u00e9ration de moyennes sur 24 heures. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ( {8700, -1}, {8743, 2}, {8314, 2} ) - #define DEFAULT_DAYS_TO_PLOT D\u00e9finir le nombre de jours par d\u00e9faut \u00e0 tracer pour les donn\u00e9es de log ( 3 )","title":"Journalisation"},{"location":"fr/configure.html#mqtt","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Serveur de courtier MQTT mqtt_broker_addr Nom d'h\u00f4te/IP du courtier MQTT my-mqtt-broker.local ( my-mqtt-broker.local ) Nom d'utilisateur MQTT MQTTUsername Nom d'utilisateur facultatif pour le courtier MQTT MyMQTTusername ( MyMQTTusername ) Mot de passe MQTT MQTTPassword Mot de passe facultatif pour le courtier MQTT MyMQTTpassword ( MyMQTTpassword ) ID de l'appareil MQTT MQTTDeviceID Identifiant de l'appareil pour MQTT BSB-LAN ( BSB-LAN ) Pr\u00e9fixe de sujet MQTT MQTTTopicPrefix Pr\u00e9fixe de sujet pour MQTT BSB-LAN ( BSB-LAN ) Utilisation de MQTT mqtt_mode D\u00e9finir le format des messages MQTT Texte brut ( 1 ) - Envoyer le num\u00e9ro et la valeur du param\u00e8tre au format texte brut JSON ( 2 ) - Broches DHT DHT_Pins D\u00e9finissez les broches du capteur DHT22 (utilisez -1 dans le fichier de configuration pour d\u00e9sactiver) 11, 12, 13 ( 11, 12, 13, -1, -1, -1, -1, -1, -1 ) --- --- --- --- Capteurs BME280 BME_Sensors D\u00e9finissez le nombre de capteurs BME280 sur le bus I2C. Vous devez avoir acc\u00e8s aux broches I2C. Les adresses fixes 0x76 et 0x77 seront utilis\u00e9es. Utilisez 0 pour d\u00e9sactiver. 1 ( 1 ) Utilisation de MAX ! enable_max_cul Activer ou d\u00e9sactiver la connexion \u00e0 CUNO/CUNX/MAX!Cube modifi\u00e9 On ( true ) Off ( false ) Adresse IP du cube max_cul_ip_addr Adresse IP du CUNO/CUNX/MAX!Cube 192.168.178.21 ( 192,168,178,21 ) Appareils MAX ! max_device_list ID des appareils MAX ! \u00e0 interroger. Ces ID peuvent \u00eatre trouv\u00e9s sur une \u00e9tiquette de l'appareil. Apr\u00e8s les avoir entr\u00e9s ici, chaque appareil doit \u00eatre mis en mode d'appariement. Cette op\u00e9ration doit \u00eatre r\u00e9p\u00e9t\u00e9e chaque fois que la disposition EEPROM de BSB-LAN est modifi\u00e9e (voir le journal des modifications). KEQ0502326, KEQ0505080, KHA0002948 ( \"KEQ0502326\", \"KEQ0505080\", \"KHA0002948\" ) Utilisation de IPWE enable_ipwe Activer l'extension IPWE ( /ipwe.cgi ) On ( true ) Off ( false ) Param\u00e8tres IPWE ipwe_parameters Liste des param\u00e8tres \u00e0 afficher dans l'extension IPWE. Voir les instructions d'adressage ci-dessous. 8700, 8743!2, 8314!2 ({8700, -1}, {8743, 2}, {8314, 2}) - #define CUSTOM_COMMANDS Activer les fonctions personnalis\u00e9es","title":"MQTT"},{"location":"fr/configure.html#debogage","text":"Interface Web Fichier de configuration Fonctionnalit\u00e9 Param\u00e8tres possibles Utilisation du d\u00e9bogage debug_mode S\u00e9lectionnez la sortie de d\u00e9bogage Off ( 0 ) S\u00e9rie ( 1 ) Telnet ( 2 ) Mode verbeux verbose Activer ou d\u00e9sactiver les messages de d\u00e9bogage verbeux (ne pas d\u00e9sactiver \u00e0 moins d'\u00eatre conseill\u00e9) On ( 1 ) Off ( 0 ) Mode donn\u00e9es brutes monitor Activer ou d\u00e9sactiver le mode donn\u00e9es brutes (ne pas activer \u00e0 moins d'\u00eatre conseill\u00e9) On ( 1 ) Off ( 0 ) Afficher les param\u00e8tres inconnus show_unknown Essayez d'afficher \u00e9galement les param\u00e8tres non pris en charge par l'appareil de destination On ( true ) Off ( false )","title":"D\u00e9bogage"},{"location":"fr/configure.html#adressage-de-differents-regulateurs-de-chauffage","text":"Pour adresser des param\u00e8tres \u00e0 partir d'appareils autres que l'appareil de destination par d\u00e9faut dans l'interface Web, vous devez ajouter un point d'exclamation suivi de l'adresse de l'appareil (voir ci-dessus pour la conversion de la notation segment/appareil en adresse d'appareil). Par exemple, le param\u00e8tre 8700 de l'adresse d'appareil 1 serait \u00e9crit comme 8700!1 au lieu de simplement 8700 . Pour le fichier de configuration, les param\u00e8tres sont r\u00e9pertori\u00e9s sous la forme {num\u00e9ro de param\u00e8tre, adresse de destination} . Le param\u00e8tre 8700 de l'adresse d'appareil 1 serait donc \u00e9crit comme {8700, 1} . Pour adresser la destination par d\u00e9faut, vous pouvez le faire en utilisant -1 .","title":"Adressage de diff\u00e9rents r\u00e9gulateurs de chauffage"},{"location":"fr/faq.html","text":"Foire aux questions (FAQ) Mes param\u00e8tres seront-ils conserv\u00e9s lors de la mise \u00e0 jour de BSB-LAN ? Cela d\u00e9pend. Les mises \u00e0 jour mineures n'affectent aucun param\u00e8tre, mais il est parfois in\u00e9vitable que des modifications dans le code affectent \u00e9galement les param\u00e8tres. Dans ce cas, cela est mentionn\u00e9 dans le fichier CHANGELOG.md et BSB-LAN r\u00e9\u00e9crit les param\u00e8tres dans l'EEPROM en fonction des param\u00e8tres dans BSB_LAN_config.h . C'est pourquoi il est pr\u00e9f\u00e9rable de toujours apporter des modifications importantes aux param\u00e8tres \u00e9galement dans ce fichier. Les mises \u00e0 jour n'affectent jamais aucun param\u00e8tre du syst\u00e8me de chauffage. Mon chauffage a une connexion OpenTherm/eBus/L-Bus/R-Bus, puis-je utiliser BSB-LAN ? Non, ces contr\u00f4leurs ne sont pas compatibles avec BSB-LAN. Ne tentez pas de connecter l'adaptateur \u00e0 votre syst\u00e8me de chauffage ! Il me manque la fonction XYZ BSB-LAN offre la possibilit\u00e9 de cr\u00e9er ses propres fonctions \u00e0 l'aide des fichiers BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h et BSB_LAN_custom.h . Pour plus de d\u00e9tails et d'exemples, veuillez consulter le dossier custom_functions dans le repo Github. N'h\u00e9sitez pas \u00e0 partager vos solutions avec nous !","title":"FAQ"},{"location":"fr/faq.html#foire-aux-questions-faq","text":"","title":"Foire aux questions (FAQ)"},{"location":"fr/faq.html#mes-parametres-seront-ils-conserves-lors-de-la-mise-a-jour-de-bsb-lan","text":"Cela d\u00e9pend. Les mises \u00e0 jour mineures n'affectent aucun param\u00e8tre, mais il est parfois in\u00e9vitable que des modifications dans le code affectent \u00e9galement les param\u00e8tres. Dans ce cas, cela est mentionn\u00e9 dans le fichier CHANGELOG.md et BSB-LAN r\u00e9\u00e9crit les param\u00e8tres dans l'EEPROM en fonction des param\u00e8tres dans BSB_LAN_config.h . C'est pourquoi il est pr\u00e9f\u00e9rable de toujours apporter des modifications importantes aux param\u00e8tres \u00e9galement dans ce fichier. Les mises \u00e0 jour n'affectent jamais aucun param\u00e8tre du syst\u00e8me de chauffage.","title":"Mes param\u00e8tres seront-ils conserv\u00e9s lors de la mise \u00e0 jour de BSB-LAN ?"},{"location":"fr/faq.html#mon-chauffage-a-une-connexion-openthermebusl-busr-bus-puis-je-utiliser-bsb-lan","text":"Non, ces contr\u00f4leurs ne sont pas compatibles avec BSB-LAN. Ne tentez pas de connecter l'adaptateur \u00e0 votre syst\u00e8me de chauffage !","title":"Mon chauffage a une connexion OpenTherm/eBus/L-Bus/R-Bus, puis-je utiliser BSB-LAN ?"},{"location":"fr/faq.html#il-me-manque-la-fonction-xyz","text":"BSB-LAN offre la possibilit\u00e9 de cr\u00e9er ses propres fonctions \u00e0 l'aide des fichiers BSB_LAN_custom_global.h , BSB_LAN_custom_setup.h et BSB_LAN_custom.h . Pour plus de d\u00e9tails et d'exemples, veuillez consulter le dossier custom_functions dans le repo Github. N'h\u00e9sitez pas \u00e0 partager vos solutions avec nous !","title":"Il me manque la fonction XYZ"},{"location":"fr/homeautomation.html","text":"Connexion de BSB-LAN aux syst\u00e8mes de domotique BSB-LAN fournit quatre fa\u00e7ons de se connecter aux syst\u00e8mes de domotique: Utilisation de modules pris en charge pour des syst\u00e8mes de domotique sp\u00e9cifiques \u00c9change de donn\u00e9es via MQTT \u00c9change de donn\u00e9es via JSON \u00c9change de donn\u00e9es via des commandes URL et la r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran Utilisation de modules pris en charge pour des syst\u00e8mes de domotique sp\u00e9cifiques Pour certains syst\u00e8mes, des modules sp\u00e9cifiques existent et peuvent \u00eatre utilis\u00e9s pour acc\u00e9der \u00e0 BSB-LAN de mani\u00e8re transparente: Home Assistant Bien que le plugin officiel ne fonctionne plus, l'approche MQTT (voir ci-dessous) fonctionne bien avec Home Assistant, y compris la fonctionnalit\u00e9 de d\u00e9couverte automatique. Voici un lien vers une vid\u00e9o sur la cha\u00eene YouTube de BSB-LAN qui montre comment configurer BSB-LAN dans Home Assistant en utilisant la fonctionnalit\u00e9 de d\u00e9couverte automatique de Home Assistant. Pour plus de d\u00e9tails sur la mise en \u0153uvre, vous pouvez \u00e9galement consulter ces tutoriels: L'utilisateur GitHub @ryann72 a \u00e9crit des instructions d\u00e9taill\u00e9es pour BSB-LAN et HomeAssistant/Mosquitto . Il est \u00e9galement disponible en fran\u00e7ais . L'utilisateur YouTube @StoneTime a cr\u00e9\u00e9 deux vid\u00e9os (en allemand) dans lesquelles il montre l' installation de BSB-LAN ainsi que sa configuration dans Home Assistant . Dankesch\u00f6n! L'utilisateur YouTube @ArminasTV a cr\u00e9\u00e9 deux vid\u00e9os (en fran\u00e7ais) dans lesquelles il montre l' installation de BSB-LAN ainsi que sa configuration avec Home Assistant et MQTT . Merci beaucoup! Homebridge L'utilisateur de BSB-LAN, Michael, a \u00e9crit un plugin pour Homebridge . Merci! ioBroker L'utilisateur GitHub @hacki11 a d\u00e9velopp\u00e9 un adaptateur pour ioBroker . Merci! Jeedom L'utilisateur GitHub @bernard-dandrea a \u00e9crit un plugin pour Jeedom (avec une description en fran\u00e7ais). Merci! Node-RED L'utilisateur GitHub @konne a \u00e9crit un module pour Node-RED . Merci! FHEM L'utilisateur du forum FHEM, Luposoft, a \u00e9crit une explication concise de la configuration pour utiliser FHEM via MQTT . Merci! openHAB Depuis la version 2.5.4, il existe une liaison qui fait officiellement partie d'OpenHAB. Homematic L'utilisateur du forum FHEM, PaulM, a \u00e9crit quelques scripts pour illustrer l'int\u00e9gration de BSB-LAN dans Homematic. Merci! SmartHomeNG L'utilisateur GitHub @thensty a \u00e9crit un plugin pour SmartHomeNG . Merci! Volkszaehler L'utilisateur GitHub @lapixo a contribu\u00e9 \u00e0 un script pour le projet Volkszaehler . Merci! Script Bash L'utilisateur GitHub @khfm a \u00e9crit des scripts Bash pour interroger les donn\u00e9es et les afficher \u00e0 l'aide de gnuplot. Merci! \u00c9change de donn\u00e9es via MQTT Il s'agit de la m\u00e9thode recommand\u00e9e pour connecter BSB-LAN aux syst\u00e8mes de domotique car elle permet un \u00e9change de donn\u00e9es transparent. En pr\u00e9requis, un courtier MQTT (tel que mosquitto ) est n\u00e9cessaire, soit en local, soit via un service public. Certains syst\u00e8mes de domotique tels que Home Assistant proposent l'installation de mosquitto dans le cadre de leur logiciel. Attention: Actuellement, le courtier mosquitto semble avoir un probl\u00e8me avec la gestion d'un grand nombre de messages \u00e0 partir des versions 2.0.16 et ult\u00e9rieures ( voir ce rapport de bogue ). Si vous rencontrez le probl\u00e8me que vos entit\u00e9s BSB-LAN deviennent \u00abindisponibles\u00bb, en particulier apr\u00e8s avoir utilis\u00e9 la fonctionnalit\u00e9 de d\u00e9couverte automatique ci-dessous, veuillez r\u00e9trograder vers la version 2.0.15 de mosquitto. Cependant, soyez conscient que cette version a des probl\u00e8mes de s\u00e9curit\u00e9, assurez-vous donc que votre courtier s'ex\u00e9cute au moins dans un environnement prot\u00e9g\u00e9 par un pare-feu. Dans BSB-LAN, vous devez effectuer ou activer au moins les configurations suivantes: D\u00e9finissez le mode de journalisation (en plus) sur Envoyer au courtier MQTT . D\u00e9finissez l' intervalle de journalisation sur le temps (en secondes) pendant lequel vous souhaitez que les param\u00e8tres de journalisation soient publi\u00e9s. S\u00e9lectionnez jusqu'\u00e0 20 param\u00e8tres de journalisation que vous souhaitez envoyer \u00e0 votre syst\u00e8me de domotique. D\u00e9finissez l' utilisation de MQTT sur texte brut . D\u00e9finissez le serveur du courtier MQTT sur le nom d'h\u00f4te de votre courtier MQTT (tel que le serveur mosquitto). Si votre syst\u00e8me de domotique prend en charge la d\u00e9couverte automatique MQTT (comme c'est le cas avec Home Assistant), vous pouvez appeler la commande URL /M1!<x> et BSB-LAN enverra des messages de d\u00e9couverte automatique pour tous les param\u00e8tres disponibles \u00e0 partir de l'ID d'appareil <x> au courtier MQTT et donc au syst\u00e8me de domotique. Vous devrez peut-\u00eatre effectuer un nettoyage par la suite ou envoyer un message de suppression pour tous ces param\u00e8tres \u00e0 l'aide de la commande URL /M0!<x> si vous ne souhaitez plus utiliser cette fonctionnalit\u00e9. Sinon, si vous souhaitez configurer vos propres d\u00e9tails de connexion, la structure de sujet de BSB-LAN est la suivante: <BSB-LAN MQTT Topic>/<device ID>/<category no.>/<parameter no.> o\u00f9 <BSB-LAN MQTT Topic> est d\u00e9fini dans les param\u00e8tres de BSB-LAN (par d\u00e9faut BSB-LAN ), <device ID> est l'ID du r\u00e9gulateur de chauffage (g\u00e9n\u00e9ralement 0 pour le contr\u00f4leur principal), <category no.> est le num\u00e9ro de cat\u00e9gorie tel qu'il est utilis\u00e9 avec la commande URL /K , <parameter no.> est le num\u00e9ro de param\u00e8tre, tel que 501.1 . Cette structure est suivie de l'un de ces sujets qui d\u00e9terminent l'action \u00e0 effectuer: /status - contient la valeur du param\u00e8tre dans la charge utile MQTT. /set - utilis\u00e9 pour d\u00e9finir un param\u00e8tre avec la valeur contenue dans la charge utile MQTT publi\u00e9e \u00e0 l'aide du t\u00e9l\u00e9gramme SET (m\u00e9thode par d\u00e9faut de d\u00e9finition des param\u00e8tres). /inf - identique \u00e0 /set , mais utilise le t\u00e9l\u00e9gramme INF (utilis\u00e9 pour envoyer le param\u00e8tre de temp\u00e9rature ambiante 10000, par exemple). /poll - ignore la valeur publi\u00e9e et force BSB-LAN \u00e0 mettre \u00e0 jour imm\u00e9diatement /status du m\u00eame param\u00e8tre avec une valeur de param\u00e8tre nouvellement r\u00e9cup\u00e9r\u00e9e. /poll peut \u00e9galement \u00eatre accessible directement sous le sujet principal (par exemple BSB-LAN/poll ) o\u00f9 il accepte une liste de param\u00e8tres s\u00e9par\u00e9s par des virgules. Ces param\u00e8tres auront ensuite leurs sujets /status respectifs mis \u00e0 jour en une seule fois. L'adressage des param\u00e8tres peut \u00eatre effectu\u00e9 soit dans le style de sujet (avec une barre oblique de d\u00e9but), soit de mani\u00e8re similaire \u00e0 la liste des param\u00e8tres de journalisation dans les param\u00e8tres de BSB-LAN (voir les exemples ci-dessous). Dans le m\u00eame temps, la m\u00e9thode h\u00e9rit\u00e9e d'envoi de commandes URL via MQTT directement au sujet principal (tel que d\u00e9fini dans les param\u00e8tres, par d\u00e9faut BSB-LAN ), est toujours prise en charge pour des raisons de compatibilit\u00e9, mais est d\u00e9conseill\u00e9e. Les r\u00e9ponses seront toujours \u00e9crites dans /status de la structure de sujet ci-dessus. Le sujet /status est mis \u00e0 jour de quatre mani\u00e8res: via les param\u00e8tres de journalisation vers MQTT comme expliqu\u00e9 ci-dessus chaque fois qu'une requ\u00eate URL est effectu\u00e9e sur BSB-LAN (peut \u00eatre d\u00e9sactiv\u00e9 en activant Only send log parameters to MQTT dans la configuration) chaque fois qu'un param\u00e8tre est modifi\u00e9 via le module de commande (peut \u00eatre d\u00e9sactiv\u00e9 en activant Only send log parameters to MQTT dans la configuration) chaque fois que le param\u00e8tre est mis \u00e0 jour via le sujet /poll comme expliqu\u00e9 ci-dessus Dans ces cas, les valeurs respectives des param\u00e8tres concern\u00e9s seront envoy\u00e9es au courtier MQTT, de sorte que m\u00eame les modifications apport\u00e9es en dehors de BSB-LAN sont envoy\u00e9es au syst\u00e8me de domotique, c'est pourquoi l'approche MQTT est la m\u00e9thode recommand\u00e9e pour se connecter \u00e0 un syst\u00e8me de domotique. Cela signifie \u00e9galement que, comme alternative \u00e0 la fonctionnalit\u00e9 de journalisation int\u00e9gr\u00e9e de BSB-LAN, vous pouvez \u00e9galement appeler p\u00e9riodiquement une URL avec les param\u00e8tres que vous souhaitez voir mis \u00e0 jour. \u00c9tant donn\u00e9 que ces param\u00e8tres seront \u00e9galement envoy\u00e9s au courtier MQTT, votre syst\u00e8me de domotique les recevra \u00e9galement. Par exemple, si vous appelez p\u00e9riodiquement l'URL http://bsb-lan.local/700/8700 , le mode de fonctionnement du circuit de chauffage 1 (param\u00e8tre 700) ainsi que la temp\u00e9rature ext\u00e9rieure actuelle (param\u00e8tre 8700) seront envoy\u00e9s au courtier MQTT. Exemples d'interrogation ou de d\u00e9finition de param\u00e8tres via MQTT \u00e0 l'aide de mosquitto Interroger la temp\u00e9rature ext\u00e9rieure (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 51, param\u00e8tre 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status D\u00e9finissez le point de consigne de temp\u00e9rature de confort (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 16, param\u00e8tre 710) \u00e0 20 degr\u00e9s: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Forcer la mise \u00e0 jour imm\u00e9diate de la temp\u00e9rature ext\u00e9rieure (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 51, param\u00e8tre 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Forcer la mise \u00e0 jour imm\u00e9diate des param\u00e8tres 700 et 8700 \u00e0 partir de l'appareil par d\u00e9faut ainsi que du param\u00e8tre 8326 \u00e0 partir de l'ID d'appareil 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll ou mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Attention: Veuillez noter que le num\u00e9ro de cat\u00e9gorie diff\u00e8re d'un syst\u00e8me \u00e0 l'autre et doit \u00eatre compar\u00e9 avec votre syst\u00e8me en premier! \u00c9change de donn\u00e9es via JSON BSB-LAN permet d'interroger et de d\u00e9finir des param\u00e8tres via des structures JSON et fournit \u00e9galement de nombreuses informations sur les param\u00e8tres et les structures de cat\u00e9gories de cette mani\u00e8re. L'API JSON est accessible via des commandes URL et le fichier openapi.yaml fourni dans ce r\u00e9f\u00e9rentiel peut \u00eatre utilis\u00e9 avec Swagger pour explorer ses possibilit\u00e9s et ses fonctionnalit\u00e9s. \u00c9change de donn\u00e9es via des commandes URL et la r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran Pour des solutions plus simples, l' utilisation de commandes URL pour interroger et d\u00e9finir des param\u00e8tres peut \u00eatre utilis\u00e9e pour contr\u00f4ler BSB-LAN \u00e0 partir d'autres syst\u00e8mes. La r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran est possible car le projet tente de ne pas rompre certaines fa\u00e7ons d'afficher les donn\u00e9es, de sorte que l'analyse avec des expressions r\u00e9guli\u00e8res reste r\u00e9alisable. N\u00e9anmoins, pour la plupart des sc\u00e9narios, l'une des autres options sera probablement pr\u00e9f\u00e9rable.","title":"Connecter \u00e0 la Smart Home"},{"location":"fr/homeautomation.html#connexion-de-bsb-lan-aux-systemes-de-domotique","text":"BSB-LAN fournit quatre fa\u00e7ons de se connecter aux syst\u00e8mes de domotique: Utilisation de modules pris en charge pour des syst\u00e8mes de domotique sp\u00e9cifiques \u00c9change de donn\u00e9es via MQTT \u00c9change de donn\u00e9es via JSON \u00c9change de donn\u00e9es via des commandes URL et la r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran","title":"Connexion de BSB-LAN aux syst\u00e8mes de domotique"},{"location":"fr/homeautomation.html#utilisation-de-modules-pris-en-charge-pour-des-systemes-de-domotique-specifiques","text":"Pour certains syst\u00e8mes, des modules sp\u00e9cifiques existent et peuvent \u00eatre utilis\u00e9s pour acc\u00e9der \u00e0 BSB-LAN de mani\u00e8re transparente:","title":"Utilisation de modules pris en charge pour des syst\u00e8mes de domotique sp\u00e9cifiques"},{"location":"fr/homeautomation.html#home-assistant","text":"Bien que le plugin officiel ne fonctionne plus, l'approche MQTT (voir ci-dessous) fonctionne bien avec Home Assistant, y compris la fonctionnalit\u00e9 de d\u00e9couverte automatique. Voici un lien vers une vid\u00e9o sur la cha\u00eene YouTube de BSB-LAN qui montre comment configurer BSB-LAN dans Home Assistant en utilisant la fonctionnalit\u00e9 de d\u00e9couverte automatique de Home Assistant. Pour plus de d\u00e9tails sur la mise en \u0153uvre, vous pouvez \u00e9galement consulter ces tutoriels: L'utilisateur GitHub @ryann72 a \u00e9crit des instructions d\u00e9taill\u00e9es pour BSB-LAN et HomeAssistant/Mosquitto . Il est \u00e9galement disponible en fran\u00e7ais . L'utilisateur YouTube @StoneTime a cr\u00e9\u00e9 deux vid\u00e9os (en allemand) dans lesquelles il montre l' installation de BSB-LAN ainsi que sa configuration dans Home Assistant . Dankesch\u00f6n! L'utilisateur YouTube @ArminasTV a cr\u00e9\u00e9 deux vid\u00e9os (en fran\u00e7ais) dans lesquelles il montre l' installation de BSB-LAN ainsi que sa configuration avec Home Assistant et MQTT . Merci beaucoup!","title":"Home Assistant"},{"location":"fr/homeautomation.html#homebridge","text":"L'utilisateur de BSB-LAN, Michael, a \u00e9crit un plugin pour Homebridge . Merci!","title":"Homebridge"},{"location":"fr/homeautomation.html#iobroker","text":"L'utilisateur GitHub @hacki11 a d\u00e9velopp\u00e9 un adaptateur pour ioBroker . Merci!","title":"ioBroker"},{"location":"fr/homeautomation.html#jeedom","text":"L'utilisateur GitHub @bernard-dandrea a \u00e9crit un plugin pour Jeedom (avec une description en fran\u00e7ais). Merci!","title":"Jeedom"},{"location":"fr/homeautomation.html#node-red","text":"L'utilisateur GitHub @konne a \u00e9crit un module pour Node-RED . Merci!","title":"Node-RED"},{"location":"fr/homeautomation.html#fhem","text":"L'utilisateur du forum FHEM, Luposoft, a \u00e9crit une explication concise de la configuration pour utiliser FHEM via MQTT . Merci!","title":"FHEM"},{"location":"fr/homeautomation.html#openhab","text":"Depuis la version 2.5.4, il existe une liaison qui fait officiellement partie d'OpenHAB.","title":"openHAB"},{"location":"fr/homeautomation.html#homematic","text":"L'utilisateur du forum FHEM, PaulM, a \u00e9crit quelques scripts pour illustrer l'int\u00e9gration de BSB-LAN dans Homematic. Merci!","title":"Homematic"},{"location":"fr/homeautomation.html#smarthomeng","text":"L'utilisateur GitHub @thensty a \u00e9crit un plugin pour SmartHomeNG . Merci!","title":"SmartHomeNG"},{"location":"fr/homeautomation.html#volkszaehler","text":"L'utilisateur GitHub @lapixo a contribu\u00e9 \u00e0 un script pour le projet Volkszaehler . Merci!","title":"Volkszaehler"},{"location":"fr/homeautomation.html#script-bash","text":"L'utilisateur GitHub @khfm a \u00e9crit des scripts Bash pour interroger les donn\u00e9es et les afficher \u00e0 l'aide de gnuplot. Merci!","title":"Script Bash"},{"location":"fr/homeautomation.html#echange-de-donnees-via-mqtt","text":"Il s'agit de la m\u00e9thode recommand\u00e9e pour connecter BSB-LAN aux syst\u00e8mes de domotique car elle permet un \u00e9change de donn\u00e9es transparent. En pr\u00e9requis, un courtier MQTT (tel que mosquitto ) est n\u00e9cessaire, soit en local, soit via un service public. Certains syst\u00e8mes de domotique tels que Home Assistant proposent l'installation de mosquitto dans le cadre de leur logiciel. Attention: Actuellement, le courtier mosquitto semble avoir un probl\u00e8me avec la gestion d'un grand nombre de messages \u00e0 partir des versions 2.0.16 et ult\u00e9rieures ( voir ce rapport de bogue ). Si vous rencontrez le probl\u00e8me que vos entit\u00e9s BSB-LAN deviennent \u00abindisponibles\u00bb, en particulier apr\u00e8s avoir utilis\u00e9 la fonctionnalit\u00e9 de d\u00e9couverte automatique ci-dessous, veuillez r\u00e9trograder vers la version 2.0.15 de mosquitto. Cependant, soyez conscient que cette version a des probl\u00e8mes de s\u00e9curit\u00e9, assurez-vous donc que votre courtier s'ex\u00e9cute au moins dans un environnement prot\u00e9g\u00e9 par un pare-feu. Dans BSB-LAN, vous devez effectuer ou activer au moins les configurations suivantes: D\u00e9finissez le mode de journalisation (en plus) sur Envoyer au courtier MQTT . D\u00e9finissez l' intervalle de journalisation sur le temps (en secondes) pendant lequel vous souhaitez que les param\u00e8tres de journalisation soient publi\u00e9s. S\u00e9lectionnez jusqu'\u00e0 20 param\u00e8tres de journalisation que vous souhaitez envoyer \u00e0 votre syst\u00e8me de domotique. D\u00e9finissez l' utilisation de MQTT sur texte brut . D\u00e9finissez le serveur du courtier MQTT sur le nom d'h\u00f4te de votre courtier MQTT (tel que le serveur mosquitto). Si votre syst\u00e8me de domotique prend en charge la d\u00e9couverte automatique MQTT (comme c'est le cas avec Home Assistant), vous pouvez appeler la commande URL /M1!<x> et BSB-LAN enverra des messages de d\u00e9couverte automatique pour tous les param\u00e8tres disponibles \u00e0 partir de l'ID d'appareil <x> au courtier MQTT et donc au syst\u00e8me de domotique. Vous devrez peut-\u00eatre effectuer un nettoyage par la suite ou envoyer un message de suppression pour tous ces param\u00e8tres \u00e0 l'aide de la commande URL /M0!<x> si vous ne souhaitez plus utiliser cette fonctionnalit\u00e9. Sinon, si vous souhaitez configurer vos propres d\u00e9tails de connexion, la structure de sujet de BSB-LAN est la suivante: <BSB-LAN MQTT Topic>/<device ID>/<category no.>/<parameter no.> o\u00f9 <BSB-LAN MQTT Topic> est d\u00e9fini dans les param\u00e8tres de BSB-LAN (par d\u00e9faut BSB-LAN ), <device ID> est l'ID du r\u00e9gulateur de chauffage (g\u00e9n\u00e9ralement 0 pour le contr\u00f4leur principal), <category no.> est le num\u00e9ro de cat\u00e9gorie tel qu'il est utilis\u00e9 avec la commande URL /K , <parameter no.> est le num\u00e9ro de param\u00e8tre, tel que 501.1 . Cette structure est suivie de l'un de ces sujets qui d\u00e9terminent l'action \u00e0 effectuer: /status - contient la valeur du param\u00e8tre dans la charge utile MQTT. /set - utilis\u00e9 pour d\u00e9finir un param\u00e8tre avec la valeur contenue dans la charge utile MQTT publi\u00e9e \u00e0 l'aide du t\u00e9l\u00e9gramme SET (m\u00e9thode par d\u00e9faut de d\u00e9finition des param\u00e8tres). /inf - identique \u00e0 /set , mais utilise le t\u00e9l\u00e9gramme INF (utilis\u00e9 pour envoyer le param\u00e8tre de temp\u00e9rature ambiante 10000, par exemple). /poll - ignore la valeur publi\u00e9e et force BSB-LAN \u00e0 mettre \u00e0 jour imm\u00e9diatement /status du m\u00eame param\u00e8tre avec une valeur de param\u00e8tre nouvellement r\u00e9cup\u00e9r\u00e9e. /poll peut \u00e9galement \u00eatre accessible directement sous le sujet principal (par exemple BSB-LAN/poll ) o\u00f9 il accepte une liste de param\u00e8tres s\u00e9par\u00e9s par des virgules. Ces param\u00e8tres auront ensuite leurs sujets /status respectifs mis \u00e0 jour en une seule fois. L'adressage des param\u00e8tres peut \u00eatre effectu\u00e9 soit dans le style de sujet (avec une barre oblique de d\u00e9but), soit de mani\u00e8re similaire \u00e0 la liste des param\u00e8tres de journalisation dans les param\u00e8tres de BSB-LAN (voir les exemples ci-dessous). Dans le m\u00eame temps, la m\u00e9thode h\u00e9rit\u00e9e d'envoi de commandes URL via MQTT directement au sujet principal (tel que d\u00e9fini dans les param\u00e8tres, par d\u00e9faut BSB-LAN ), est toujours prise en charge pour des raisons de compatibilit\u00e9, mais est d\u00e9conseill\u00e9e. Les r\u00e9ponses seront toujours \u00e9crites dans /status de la structure de sujet ci-dessus. Le sujet /status est mis \u00e0 jour de quatre mani\u00e8res: via les param\u00e8tres de journalisation vers MQTT comme expliqu\u00e9 ci-dessus chaque fois qu'une requ\u00eate URL est effectu\u00e9e sur BSB-LAN (peut \u00eatre d\u00e9sactiv\u00e9 en activant Only send log parameters to MQTT dans la configuration) chaque fois qu'un param\u00e8tre est modifi\u00e9 via le module de commande (peut \u00eatre d\u00e9sactiv\u00e9 en activant Only send log parameters to MQTT dans la configuration) chaque fois que le param\u00e8tre est mis \u00e0 jour via le sujet /poll comme expliqu\u00e9 ci-dessus Dans ces cas, les valeurs respectives des param\u00e8tres concern\u00e9s seront envoy\u00e9es au courtier MQTT, de sorte que m\u00eame les modifications apport\u00e9es en dehors de BSB-LAN sont envoy\u00e9es au syst\u00e8me de domotique, c'est pourquoi l'approche MQTT est la m\u00e9thode recommand\u00e9e pour se connecter \u00e0 un syst\u00e8me de domotique. Cela signifie \u00e9galement que, comme alternative \u00e0 la fonctionnalit\u00e9 de journalisation int\u00e9gr\u00e9e de BSB-LAN, vous pouvez \u00e9galement appeler p\u00e9riodiquement une URL avec les param\u00e8tres que vous souhaitez voir mis \u00e0 jour. \u00c9tant donn\u00e9 que ces param\u00e8tres seront \u00e9galement envoy\u00e9s au courtier MQTT, votre syst\u00e8me de domotique les recevra \u00e9galement. Par exemple, si vous appelez p\u00e9riodiquement l'URL http://bsb-lan.local/700/8700 , le mode de fonctionnement du circuit de chauffage 1 (param\u00e8tre 700) ainsi que la temp\u00e9rature ext\u00e9rieure actuelle (param\u00e8tre 8700) seront envoy\u00e9s au courtier MQTT.","title":"\u00c9change de donn\u00e9es via MQTT"},{"location":"fr/homeautomation.html#exemples-dinterrogation-ou-de-definition-de-parametres-via-mqtt-a-laide-de-mosquitto","text":"Interroger la temp\u00e9rature ext\u00e9rieure (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 51, param\u00e8tre 8700): mosquitto_sub -h my.mosquitto-broker.local -u USER -P PASSWORD -t BSB-LAN/0/51/8700/status D\u00e9finissez le point de consigne de temp\u00e9rature de confort (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 16, param\u00e8tre 710) \u00e0 20 degr\u00e9s: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"20\" -t BSB-LAN/0/16/710/set Forcer la mise \u00e0 jour imm\u00e9diate de la temp\u00e9rature ext\u00e9rieure (ID d'appareil 0, num\u00e9ro de cat\u00e9gorie 51, param\u00e8tre 8700): mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"\" -t BSB-LAN/0/51/8700/poll Forcer la mise \u00e0 jour imm\u00e9diate des param\u00e8tres 700 et 8700 \u00e0 partir de l'appareil par d\u00e9faut ainsi que du param\u00e8tre 8326 \u00e0 partir de l'ID d'appareil 1: mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"700,8700,8326!1\" -t BSB-LAN/poll ou mosquitto_pub -h my.mosquitto-broker.local -u USER -P PASSWORD -m \"/0/16/700,/0/51/8700,/1/50/8326\" -t BSB-LAN/poll Attention: Veuillez noter que le num\u00e9ro de cat\u00e9gorie diff\u00e8re d'un syst\u00e8me \u00e0 l'autre et doit \u00eatre compar\u00e9 avec votre syst\u00e8me en premier!","title":"Exemples d'interrogation ou de d\u00e9finition de param\u00e8tres via MQTT \u00e0 l'aide de mosquitto"},{"location":"fr/homeautomation.html#echange-de-donnees-via-json","text":"BSB-LAN permet d'interroger et de d\u00e9finir des param\u00e8tres via des structures JSON et fournit \u00e9galement de nombreuses informations sur les param\u00e8tres et les structures de cat\u00e9gories de cette mani\u00e8re. L'API JSON est accessible via des commandes URL et le fichier openapi.yaml fourni dans ce r\u00e9f\u00e9rentiel peut \u00eatre utilis\u00e9 avec Swagger pour explorer ses possibilit\u00e9s et ses fonctionnalit\u00e9s.","title":"\u00c9change de donn\u00e9es via JSON"},{"location":"fr/homeautomation.html#echange-de-donnees-via-des-commandes-url-et-la-recuperation-de-donnees-a-lecran","text":"Pour des solutions plus simples, l' utilisation de commandes URL pour interroger et d\u00e9finir des param\u00e8tres peut \u00eatre utilis\u00e9e pour contr\u00f4ler BSB-LAN \u00e0 partir d'autres syst\u00e8mes. La r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran est possible car le projet tente de ne pas rompre certaines fa\u00e7ons d'afficher les donn\u00e9es, de sorte que l'analyse avec des expressions r\u00e9guli\u00e8res reste r\u00e9alisable. N\u00e9anmoins, pour la plupart des sc\u00e9narios, l'une des autres options sera probablement pr\u00e9f\u00e9rable.","title":"\u00c9change de donn\u00e9es via des commandes URL et la r\u00e9cup\u00e9ration de donn\u00e9es \u00e0 l'\u00e9cran"},{"location":"fr/install.html","text":"Installation L'installation de BSB-LAN n\u00e9cessite trois \u00e9tapes : Installer l'IDE Arduino pour flasher le logiciel BSB-LAN sur le microcontr\u00f4leur Assembler les pi\u00e8ces mat\u00e9rielles Connecter BSB-LAN au syst\u00e8me de chauffage Installation de l'IDE Arduino et flashage de BSB-LAN T\u00e9l\u00e9chargez et d\u00e9compressez la version actuelle de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel principal ou utilisez git pour cloner le r\u00e9f\u00e9rentiel. Acc\u00e9dez au dossier BSB_LAN et renommez les fichiers suivants : BSB_LAN_custom_defs.h.default en BSB_LAN_custom_defs.h BSB_LAN_config.h.default en BSB_LAN_config.h . T\u00e9l\u00e9chargez et installez l'IDE Arduino pour votre syst\u00e8me. Connectez votre microcontr\u00f4leur (ESP32 ou Arduino Due) \u00e0 votre ordinateur et d\u00e9marrez l'IDE Arduino. Acc\u00e9dez \u00e0 Outils/Conseil/Gestionnaire de cartes et assurez-vous que le framework pour votre carte est install\u00e9 (\"esp32 by Espressif Systems\" pour le microcontr\u00f4leur ESP32, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" pour le microcontr\u00f4leur Arduino Due) \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Conseil et s\u00e9lectionnez votre microcontr\u00f4leur : ESP32 Dev Module pour le Joy-It ESP32 NodeMCU. Olimex ESP32-EVB pour l'Olimex EVB bas\u00e9 sur ESP32. OlimeMultiplier l'option Olimex ESP32-POE-ISO pour l'Olimex POE ISO bas\u00e9 sur ESP32 Arduino Due (Programming Port) pour l'Arduino Due. N'utilisez pas le port USB natif ici ! \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Conseil et s\u00e9lectionnez la vitesse de t\u00e9l\u00e9chargement appropri\u00e9e (jusqu'\u00e0 460800 pour ESP32, 115200 pour Arduino Due). Pour les microcontr\u00f4leurs bas\u00e9s sur ESP32, acc\u00e9dez \u00e0 nouveau \u00e0 Outils/Conseil et s\u00e9lectionnez \"Minimal SPIFFS\" pour le sch\u00e9ma de partition ( ne confondez pas ceci avec le sch\u00e9ma de partition \"Minimal\" similaire qui est diff\u00e9rent et ne fonctionne pas dans notre cas). Si vous ne d\u00e9finissez pas le bon sch\u00e9ma de partition, le micrologiciel ne rentrera pas dans l'ESP32 ! Acc\u00e9dez \u00e0 Fichier/Ouvrir et acc\u00e9dez au dossier BSB_LAN, puis double-cliquez sur BSB_LAN.ino . Le projet s'ouvrira. Vous pouvez maintenant passer \u00e0 la configuration de BSB-LAN. Une fois la configuration termin\u00e9e, acc\u00e9dez \u00e0 Esquisse/T\u00e9l\u00e9verser et t\u00e9l\u00e9versez le logiciel BSB-LAN sur le microcontr\u00f4leur. Le m\u00eame processus doit \u00eatre effectu\u00e9 \u00e0 chaque mise \u00e0 jour future, y compris lors de l'ajout de la liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil. Mises \u00e0 jour ult\u00e9rieures sur les microcontr\u00f4leurs bas\u00e9s sur ESP32 \"over the air\" (OTA) Si vous ex\u00e9cutez BSB-LAN sur un microcontr\u00f4leur bas\u00e9 sur ESP32 et que vous avez activ\u00e9 les mises \u00e0 jour Over-the-Air dans les param\u00e8tres , vous pouvez effectuer les futures mises \u00e0 jour de BSB-LAN \u00e0 l'aide de votre navigateur. Pour ce faire, au lieu d'utiliser Esquisse/T\u00e9l\u00e9verser , vous devez s\u00e9lectionner Esquisse/Exporter le binaire compil\u00e9 . Cela cr\u00e9era un dossier build dans votre dossier BSB-LAN dans lequel vous trouverez, entre autres, le fichier BSB_LAN.ino.bin . Ouvrez maintenant http://bsb-lan.local:8080 et s\u00e9lectionnez et t\u00e9l\u00e9versez ce fichier. Ne pas interrompre le processus de t\u00e9l\u00e9versement. Vous pouvez essayer d'acc\u00e9der \u00e0 BSB-LAN \u00e0 partir d'une autre fen\u00eatre de navigateur pour voir si le processus est termin\u00e9. Veuillez noter que cela ne s'applique qu'aux microcontr\u00f4leurs bas\u00e9s sur ESP32. Les cartes Arduino ne prennent pas en charge cette fonctionnalit\u00e9. Assemblage de l'adaptateur BSB-LAN Vous pouvez obtenir un adaptateur enti\u00e8rement assembl\u00e9 aupr\u00e8s de Frederik (bsb(\u00e4t)code-it.de) ou en construire un vous-m\u00eame (consultez le dossier sch\u00e9mas pour les sch\u00e9mas). Une fois que vous avez l'adaptateur BSB-LAN pr\u00eat, vous devez simplement le brancher sur le microcontr\u00f4leur. Si vous utilisez un microcontr\u00f4leur Olimex, v\u00e9rifiez \u00e0 nouveau que l'adaptateur est bien centr\u00e9 sur le connecteur, car il peut encore s'ins\u00e9rer m\u00eame s'il est d\u00e9cal\u00e9 d'une rang\u00e9e de broches sur la gauche ou sur la droite. Connexion de BSB-LAN au syst\u00e8me de chauffage Une fois le microcontr\u00f4leur et l'adaptateur BSB-LAN pr\u00eats, effectuez les \u00e9tapes suivantes pour connecter BSB-LAN au syst\u00e8me de chauffage : D\u00e9branchez le microcontr\u00f4leur de votre ordinateur et \u00e9teignez votre syst\u00e8me de chauffage. Localisez les connecteurs BSB/LPB/PPS. Vous devrez peut-\u00eatre ouvrir votre syst\u00e8me de chauffage pour cela. Consultez la liste des syst\u00e8mes de chauffage pris en charge pour savoir o\u00f9 se trouvent les broches. Faites tout cela \u00e0 vos propres risques ! Si vous n'\u00eates pas prudent, vous risquez d'endommager votre \u00e9quipement ! Prenez particuli\u00e8rement soin d'\u00e9viter les d\u00e9charges \u00e9lectrostatiques (ESD) qui peuvent d\u00e9truire \u00e0 la fois BSB-LAN et le contr\u00f4leur de chauffage ! Branchez maintenant l'adaptateur BSB-LAN sur le microcontr\u00f4leur et connectez le connecteur \u00e0 vis + au connecteur CL+ (BSB), DB (LPB) ou A6 (PPS, diff\u00e9rents noms de connecteurs sont possibles), et le connecteur \u00e0 vis - au connecteur CL- (BSB), MB (LPB) ou M (PPS). S'il n'y a pas de connecteur vide, il n'y a aucun probl\u00e8me \u00e0 ajouter les fils pour BSB-LAN \u00e0 un connecteur d\u00e9j\u00e0 \"utilis\u00e9\", \u00e0 condition que les fils soient ins\u00e9r\u00e9s avec soin. En ce qui concerne les c\u00e2bles, un c\u00e2ble torsad\u00e9 \u00e0 deux c\u0153urs (id\u00e9alement blind\u00e9/blind\u00e9) est recommand\u00e9 par Siemens . Cependant, un certain nombre d'utilisateurs ont \u00e9galement r\u00e9ussi avec un simple fil de t\u00e9l\u00e9phone si les distances ne sont pas trop longues. Vous devez maintenant alimenter le microcontr\u00f4leur. Notez que le syst\u00e8me de chauffage n'alimente pas le microcontr\u00f4leur, m\u00eame si la LED de l'adaptateur BSB-LAN s'allume lorsque vous le connectez au syst\u00e8me de chauffage. Vous devez alimenter le microcontr\u00f4leur via son port USB (ou via PoE sur l'Olimex POE-ISO). Assurez-vous d'utiliser une alimentation stable d'au moins 2 amp\u00e8res. Une fois le microcontr\u00f4leur aliment\u00e9, allumez le syst\u00e8me de chauffage. La LED rouge de l'adaptateur BSB-LAN doit s'allumer. Il devrait clignoter de temps en temps. Ouvrez maintenant votre navigateur web et acc\u00e9dez \u00e0 l'adresse IP de BSB-LAN. Si MDNS est activ\u00e9, vous pouvez directement acc\u00e9der \u00e0 http://bsb-lan.local . Sinon, vous pouvez trouver l'adresse IP de BSB-LAN dans votre routeur, ou vous pouvez connecter le microcontr\u00f4leur \u00e0 votre PC et ouvrir l'IDE Arduino, puis acc\u00e9der \u00e0 Outils/Moniteur s\u00e9rie et d\u00e9finir la vitesse du moniteur s\u00e9rie sur 115200. Red\u00e9marrez le microcontr\u00f4leur, et l'adresse IP s'affichera lors de la connexion au r\u00e9seau. G\u00e9n\u00e9ration de la liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil Lorsque vous acc\u00e9dez \u00e0 BSB-LAN pour la premi\u00e8re fois, vous remarquerez que seuls quelques param\u00e8tres sont affich\u00e9s sur l'interface Web de l'appareil. Cela est d\u00fb au fait que chaque mod\u00e8le du contr\u00f4leur Siemens int\u00e9gr\u00e9 \u00e0 votre syst\u00e8me de chauffage prend en charge un ensemble diff\u00e9rent de param\u00e8tres. Auparavant, je fournissais une liste de param\u00e8tres collect\u00e9s \u00e0 partir de tous les types de syst\u00e8mes de chauffage, mais il s'est av\u00e9r\u00e9 que cette liste \u00e9tait ambigu\u00eb ou contenait m\u00eame des erreurs que nous ne pouvions pas corriger de mani\u00e8re fiable. Cette liste est toujours disponible dans la version 2.2.x de BSB-LAN et peut \u00eatre copi\u00e9e \u00e0 partir de l\u00e0 si n\u00e9cessaire. Cependant, il n'est pas conseill\u00e9 de le faire car les ambigu\u00eft\u00e9s et les erreurs susmentionn\u00e9es pr\u00e9sentent un risque trop \u00e9lev\u00e9 de mauvaise configuration du syst\u00e8me de chauffage. Il est plut\u00f4t recommand\u00e9 de cliquer sur le bouton \" Liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil \" dans le menu BSB-LAN et d'envoyer la liste g\u00e9n\u00e9r\u00e9e \u00e0 Frederik (bsb(\u00e4t)code-it.de). \u00c0 partir de ce fichier, une liste de param\u00e8tres peut \u00eatre g\u00e9n\u00e9r\u00e9e qui correspond exactement au contr\u00f4leur de votre syst\u00e8me de chauffage. Malheureusement, ce processus ne peut pas encore \u00eatre automatis\u00e9, mais au moins il n'a besoin d'\u00eatre effectu\u00e9 qu'une seule fois. Ces donn\u00e9es brutes ne contiennent aucun param\u00e8tre ni aucun autre type de donn\u00e9es personnelles, uniquement la structure des param\u00e8tres du syst\u00e8me de chauffage. Il est dans mon propre int\u00e9r\u00eat de cr\u00e9er et de renvoyer ces listes de param\u00e8tres sans d\u00e9lai, mais je vous demande de bien vouloir comprendre si cela prend un peu plus de temps en raison de mon travail ou de questions familiales. Une fois que vous avez re\u00e7u la liste des param\u00e8tres (ou que vous avez pris celle de la version 2.2.x), vous devez remplacer le fichier BSB_LAN_custom_defs.h existant par celui qui vous a \u00e9t\u00e9 envoy\u00e9, le compiler et le flasher \u00e0 nouveau. Vous \u00eates maintenant pr\u00eat \u00e0 acc\u00e9der \u00e0 tous les param\u00e8tres.","title":"Assemblage"},{"location":"fr/install.html#installation","text":"L'installation de BSB-LAN n\u00e9cessite trois \u00e9tapes : Installer l'IDE Arduino pour flasher le logiciel BSB-LAN sur le microcontr\u00f4leur Assembler les pi\u00e8ces mat\u00e9rielles Connecter BSB-LAN au syst\u00e8me de chauffage","title":"Installation"},{"location":"fr/install.html#installation-de-lide-arduino-et-flashage-de-bsb-lan","text":"T\u00e9l\u00e9chargez et d\u00e9compressez la version actuelle de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel principal ou utilisez git pour cloner le r\u00e9f\u00e9rentiel. Acc\u00e9dez au dossier BSB_LAN et renommez les fichiers suivants : BSB_LAN_custom_defs.h.default en BSB_LAN_custom_defs.h BSB_LAN_config.h.default en BSB_LAN_config.h . T\u00e9l\u00e9chargez et installez l'IDE Arduino pour votre syst\u00e8me. Connectez votre microcontr\u00f4leur (ESP32 ou Arduino Due) \u00e0 votre ordinateur et d\u00e9marrez l'IDE Arduino. Acc\u00e9dez \u00e0 Outils/Conseil/Gestionnaire de cartes et assurez-vous que le framework pour votre carte est install\u00e9 (\"esp32 by Espressif Systems\" pour le microcontr\u00f4leur ESP32, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" pour le microcontr\u00f4leur Arduino Due) \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Conseil et s\u00e9lectionnez votre microcontr\u00f4leur : ESP32 Dev Module pour le Joy-It ESP32 NodeMCU. Olimex ESP32-EVB pour l'Olimex EVB bas\u00e9 sur ESP32. OlimeMultiplier l'option Olimex ESP32-POE-ISO pour l'Olimex POE ISO bas\u00e9 sur ESP32 Arduino Due (Programming Port) pour l'Arduino Due. N'utilisez pas le port USB natif ici ! \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Conseil et s\u00e9lectionnez la vitesse de t\u00e9l\u00e9chargement appropri\u00e9e (jusqu'\u00e0 460800 pour ESP32, 115200 pour Arduino Due). Pour les microcontr\u00f4leurs bas\u00e9s sur ESP32, acc\u00e9dez \u00e0 nouveau \u00e0 Outils/Conseil et s\u00e9lectionnez \"Minimal SPIFFS\" pour le sch\u00e9ma de partition ( ne confondez pas ceci avec le sch\u00e9ma de partition \"Minimal\" similaire qui est diff\u00e9rent et ne fonctionne pas dans notre cas). Si vous ne d\u00e9finissez pas le bon sch\u00e9ma de partition, le micrologiciel ne rentrera pas dans l'ESP32 ! Acc\u00e9dez \u00e0 Fichier/Ouvrir et acc\u00e9dez au dossier BSB_LAN, puis double-cliquez sur BSB_LAN.ino . Le projet s'ouvrira. Vous pouvez maintenant passer \u00e0 la configuration de BSB-LAN. Une fois la configuration termin\u00e9e, acc\u00e9dez \u00e0 Esquisse/T\u00e9l\u00e9verser et t\u00e9l\u00e9versez le logiciel BSB-LAN sur le microcontr\u00f4leur. Le m\u00eame processus doit \u00eatre effectu\u00e9 \u00e0 chaque mise \u00e0 jour future, y compris lors de l'ajout de la liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil.","title":"Installation de l'IDE Arduino et flashage de BSB-LAN"},{"location":"fr/install.html#mises-a-jour-ulterieures-sur-les-microcontroleurs-bases-sur-esp32-over-the-air-ota","text":"Si vous ex\u00e9cutez BSB-LAN sur un microcontr\u00f4leur bas\u00e9 sur ESP32 et que vous avez activ\u00e9 les mises \u00e0 jour Over-the-Air dans les param\u00e8tres , vous pouvez effectuer les futures mises \u00e0 jour de BSB-LAN \u00e0 l'aide de votre navigateur. Pour ce faire, au lieu d'utiliser Esquisse/T\u00e9l\u00e9verser , vous devez s\u00e9lectionner Esquisse/Exporter le binaire compil\u00e9 . Cela cr\u00e9era un dossier build dans votre dossier BSB-LAN dans lequel vous trouverez, entre autres, le fichier BSB_LAN.ino.bin . Ouvrez maintenant http://bsb-lan.local:8080 et s\u00e9lectionnez et t\u00e9l\u00e9versez ce fichier. Ne pas interrompre le processus de t\u00e9l\u00e9versement. Vous pouvez essayer d'acc\u00e9der \u00e0 BSB-LAN \u00e0 partir d'une autre fen\u00eatre de navigateur pour voir si le processus est termin\u00e9. Veuillez noter que cela ne s'applique qu'aux microcontr\u00f4leurs bas\u00e9s sur ESP32. Les cartes Arduino ne prennent pas en charge cette fonctionnalit\u00e9.","title":"Mises \u00e0 jour ult\u00e9rieures sur les microcontr\u00f4leurs bas\u00e9s sur ESP32 \"over the air\" (OTA)"},{"location":"fr/install.html#assemblage-de-ladaptateur-bsb-lan","text":"Vous pouvez obtenir un adaptateur enti\u00e8rement assembl\u00e9 aupr\u00e8s de Frederik (bsb(\u00e4t)code-it.de) ou en construire un vous-m\u00eame (consultez le dossier sch\u00e9mas pour les sch\u00e9mas). Une fois que vous avez l'adaptateur BSB-LAN pr\u00eat, vous devez simplement le brancher sur le microcontr\u00f4leur. Si vous utilisez un microcontr\u00f4leur Olimex, v\u00e9rifiez \u00e0 nouveau que l'adaptateur est bien centr\u00e9 sur le connecteur, car il peut encore s'ins\u00e9rer m\u00eame s'il est d\u00e9cal\u00e9 d'une rang\u00e9e de broches sur la gauche ou sur la droite.","title":"Assemblage de l'adaptateur BSB-LAN"},{"location":"fr/install.html#connexion-de-bsb-lan-au-systeme-de-chauffage","text":"Une fois le microcontr\u00f4leur et l'adaptateur BSB-LAN pr\u00eats, effectuez les \u00e9tapes suivantes pour connecter BSB-LAN au syst\u00e8me de chauffage : D\u00e9branchez le microcontr\u00f4leur de votre ordinateur et \u00e9teignez votre syst\u00e8me de chauffage. Localisez les connecteurs BSB/LPB/PPS. Vous devrez peut-\u00eatre ouvrir votre syst\u00e8me de chauffage pour cela. Consultez la liste des syst\u00e8mes de chauffage pris en charge pour savoir o\u00f9 se trouvent les broches. Faites tout cela \u00e0 vos propres risques ! Si vous n'\u00eates pas prudent, vous risquez d'endommager votre \u00e9quipement ! Prenez particuli\u00e8rement soin d'\u00e9viter les d\u00e9charges \u00e9lectrostatiques (ESD) qui peuvent d\u00e9truire \u00e0 la fois BSB-LAN et le contr\u00f4leur de chauffage ! Branchez maintenant l'adaptateur BSB-LAN sur le microcontr\u00f4leur et connectez le connecteur \u00e0 vis + au connecteur CL+ (BSB), DB (LPB) ou A6 (PPS, diff\u00e9rents noms de connecteurs sont possibles), et le connecteur \u00e0 vis - au connecteur CL- (BSB), MB (LPB) ou M (PPS). S'il n'y a pas de connecteur vide, il n'y a aucun probl\u00e8me \u00e0 ajouter les fils pour BSB-LAN \u00e0 un connecteur d\u00e9j\u00e0 \"utilis\u00e9\", \u00e0 condition que les fils soient ins\u00e9r\u00e9s avec soin. En ce qui concerne les c\u00e2bles, un c\u00e2ble torsad\u00e9 \u00e0 deux c\u0153urs (id\u00e9alement blind\u00e9/blind\u00e9) est recommand\u00e9 par Siemens . Cependant, un certain nombre d'utilisateurs ont \u00e9galement r\u00e9ussi avec un simple fil de t\u00e9l\u00e9phone si les distances ne sont pas trop longues. Vous devez maintenant alimenter le microcontr\u00f4leur. Notez que le syst\u00e8me de chauffage n'alimente pas le microcontr\u00f4leur, m\u00eame si la LED de l'adaptateur BSB-LAN s'allume lorsque vous le connectez au syst\u00e8me de chauffage. Vous devez alimenter le microcontr\u00f4leur via son port USB (ou via PoE sur l'Olimex POE-ISO). Assurez-vous d'utiliser une alimentation stable d'au moins 2 amp\u00e8res. Une fois le microcontr\u00f4leur aliment\u00e9, allumez le syst\u00e8me de chauffage. La LED rouge de l'adaptateur BSB-LAN doit s'allumer. Il devrait clignoter de temps en temps. Ouvrez maintenant votre navigateur web et acc\u00e9dez \u00e0 l'adresse IP de BSB-LAN. Si MDNS est activ\u00e9, vous pouvez directement acc\u00e9der \u00e0 http://bsb-lan.local . Sinon, vous pouvez trouver l'adresse IP de BSB-LAN dans votre routeur, ou vous pouvez connecter le microcontr\u00f4leur \u00e0 votre PC et ouvrir l'IDE Arduino, puis acc\u00e9der \u00e0 Outils/Moniteur s\u00e9rie et d\u00e9finir la vitesse du moniteur s\u00e9rie sur 115200. Red\u00e9marrez le microcontr\u00f4leur, et l'adresse IP s'affichera lors de la connexion au r\u00e9seau.","title":"Connexion de BSB-LAN au syst\u00e8me de chauffage"},{"location":"fr/install.html#generation-de-la-liste-des-parametres-specifiques-a-lappareil","text":"Lorsque vous acc\u00e9dez \u00e0 BSB-LAN pour la premi\u00e8re fois, vous remarquerez que seuls quelques param\u00e8tres sont affich\u00e9s sur l'interface Web de l'appareil. Cela est d\u00fb au fait que chaque mod\u00e8le du contr\u00f4leur Siemens int\u00e9gr\u00e9 \u00e0 votre syst\u00e8me de chauffage prend en charge un ensemble diff\u00e9rent de param\u00e8tres. Auparavant, je fournissais une liste de param\u00e8tres collect\u00e9s \u00e0 partir de tous les types de syst\u00e8mes de chauffage, mais il s'est av\u00e9r\u00e9 que cette liste \u00e9tait ambigu\u00eb ou contenait m\u00eame des erreurs que nous ne pouvions pas corriger de mani\u00e8re fiable. Cette liste est toujours disponible dans la version 2.2.x de BSB-LAN et peut \u00eatre copi\u00e9e \u00e0 partir de l\u00e0 si n\u00e9cessaire. Cependant, il n'est pas conseill\u00e9 de le faire car les ambigu\u00eft\u00e9s et les erreurs susmentionn\u00e9es pr\u00e9sentent un risque trop \u00e9lev\u00e9 de mauvaise configuration du syst\u00e8me de chauffage. Il est plut\u00f4t recommand\u00e9 de cliquer sur le bouton \" Liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil \" dans le menu BSB-LAN et d'envoyer la liste g\u00e9n\u00e9r\u00e9e \u00e0 Frederik (bsb(\u00e4t)code-it.de). \u00c0 partir de ce fichier, une liste de param\u00e8tres peut \u00eatre g\u00e9n\u00e9r\u00e9e qui correspond exactement au contr\u00f4leur de votre syst\u00e8me de chauffage. Malheureusement, ce processus ne peut pas encore \u00eatre automatis\u00e9, mais au moins il n'a besoin d'\u00eatre effectu\u00e9 qu'une seule fois. Ces donn\u00e9es brutes ne contiennent aucun param\u00e8tre ni aucun autre type de donn\u00e9es personnelles, uniquement la structure des param\u00e8tres du syst\u00e8me de chauffage. Il est dans mon propre int\u00e9r\u00eat de cr\u00e9er et de renvoyer ces listes de param\u00e8tres sans d\u00e9lai, mais je vous demande de bien vouloir comprendre si cela prend un peu plus de temps en raison de mon travail ou de questions familiales. Une fois que vous avez re\u00e7u la liste des param\u00e8tres (ou que vous avez pris celle de la version 2.2.x), vous devez remplacer le fichier BSB_LAN_custom_defs.h existant par celui qui vous a \u00e9t\u00e9 envoy\u00e9, le compiler et le flasher \u00e0 nouveau. Vous \u00eates maintenant pr\u00eat \u00e0 acc\u00e9der \u00e0 tous les param\u00e8tres.","title":"G\u00e9n\u00e9ration de la liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil"},{"location":"fr/quickstart.html","text":"Instructions de d\u00e9marrage rapide Ces instructions de d\u00e9marrage rapide s'adressent aux utilisateurs qui sont familiaris\u00e9s avec l'installation et la configuration de logiciels sur leur ordinateur. Si vous avez besoin d'instructions plus d\u00e9taill\u00e9es, veuillez consulter les instructions d'installation ! Assurez-vous que votre syst\u00e8me de chauffage est compatible avec BSB-LAN ! T\u00e9l\u00e9chargez et d\u00e9compressez la version actuelle de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel principal ou utilisez git pour cloner le r\u00e9f\u00e9rentiel. Acc\u00e9dez au dossier BSB_LAN et renommez les fichiers suivants : BSB_LAN_custom_defs.h.default en BSB_LAN_custom_defs.h BSB_LAN_config.h.default en BSB_LAN_config.h . T\u00e9l\u00e9chargez et installez l'IDE Arduino pour votre syst\u00e8me. Connectez votre microcontr\u00f4leur (ESP32 ou Arduino Due) \u00e0 votre ordinateur et d\u00e9marrez l'IDE Arduino. Acc\u00e9dez \u00e0 Outils/Board/Board Manager et assurez-vous que le framework pour votre carte est install\u00e9 (\"esp32 by Espressif Systems\" pour le microcontr\u00f4leur ESP32, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" pour le microcontr\u00f4leur Arduino Due) \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Board et s\u00e9lectionnez votre microcontr\u00f4leur : ESP32 Dev Module pour le Joy-It ESP32 NodeMCU. Olimex ESP32-EVB pour l'Olimex EVB bas\u00e9 sur ESP32. Olimex ESP32-POE-ISO pour l'Olimex POE ISO bas\u00e9 sur ESP32 Arduino Due (Programming Port) pour l'Arduino Due. N'utilisez pas le port USB natif ici ! \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Board et s\u00e9lectionnez la vitesse de t\u00e9l\u00e9chargement appropri\u00e9e (jusqu'\u00e0 460800 pour ESP32, 115200 pour Arduino Due). Pour les microcontr\u00f4leurs bas\u00e9s sur ESP32, acc\u00e9dez \u00e0 nouveau \u00e0 Outils/Partition Scheme et s\u00e9lectionnez \"Minimal SPIFFS\" pour le sch\u00e9ma de partition ( ne confondez pas avec le sch\u00e9ma de partition \"Minimal\" similaire qui est diff\u00e9rent et ne fonctionne pas dans notre cas ). Si vous ne d\u00e9finissez pas le bon sch\u00e9ma de partition, le micrologiciel ne rentrera pas dans l'ESP32 ! Acc\u00e9dez \u00e0 Fichier/Ouvrir et acc\u00e9dez au dossier BSB_LAN, puis double-cliquez sur BSB_LAN.ino . Le projet s'ouvrira. Cliquez sur l'onglet avec le nom de fichier BSB_LAN_config.h et configurez au moins les options suivantes : Recherchez #define LANG DE : changez DE en EN pour l'anglais, FR pour le fran\u00e7ais, etc. Recherchez uint8_t network_type : d\u00e9finissez cette option sur LAN si vous utilisez une connexion Ethernet/LAN. D\u00e9finissez-la sur WLAN si vous utilisez une connexion WiFi/WLAN. Si vous n'utilisez pas DHCP, configurez les options suivantes en fonction de votre r\u00e9seau (assurez-vous d'utiliser une virgule, et non un point, pour les adresses IP !) : byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Acc\u00e9dez maintenant \u00e0 Sketch/Upload et t\u00e9l\u00e9chargez le logiciel BSB-LAN sur le microcontr\u00f4leur. D\u00e9connectez le microcontr\u00f4leur et \u00e9teignez votre syst\u00e8me de chauffage. Localisez les connecteurs BSB/LPB/PPS. Vous devrez peut-\u00eatre ouvrir votre syst\u00e8me de chauffage pour cela. Faites tout cela \u00e0 vos propres risques ! Connectez maintenant l'adaptateur BSB-LAN au microcontr\u00f4leur et connectez le connecteur \u00e0 vis + au connecteur CL+ (BSB), DB (LPB) ou A6 (PPS, les noms des connecteurs peuvent varier), et le connecteur \u00e0 vis - au connecteur CL- (BSB), MB (LPB) ou M (PPS). Allumez le microcontr\u00f4leur via le port USB ou via PoE (uniquement Olimex POE-ISO). Puis allumez le syst\u00e8me de chauffage. Le LED rouge de l'adaptateur BSB-LAN doit s'allumer. Il devrait clignoter de temps en temps. Ouvrez maintenant votre navigateur web et acc\u00e9dez \u00e0 l'adresse IP de BSB-LAN. Si MDNS est activ\u00e9, vous pouvez directement acc\u00e9der \u00e0 http://bsb-lan.local . Vous pouvez trouver l'adresse IP de BSB-LAN dans votre routeur, ou vous pouvez connecter le microcontr\u00f4leur \u00e0 votre PC et ouvrir l'IDE Arduino, puis acc\u00e9der \u00e0 Outils/Moniteur s\u00e9rie . Red\u00e9marrez le microcontr\u00f4leur, et l'adresse IP s'affichera lors de la connexion au r\u00e9seau. C'est termin\u00e9 :-) \u00c7a ne fonctionne pas ! Veuillez vous assurer de v\u00e9rifier chaque entr\u00e9e dans la section D\u00e9pannage avant de nous contacter ! Pourquoi est-ce que je ne vois que quelques param\u00e8tres ? Lors de votre premi\u00e8re connexion \u00e0 BSB-LAN, vous remarquerez que seuls quelques param\u00e8tres sont affich\u00e9s sur l'interface Web de l'appareil. Cela est d\u00fb au fait que chaque mod\u00e8le du contr\u00f4leur Siemens int\u00e9gr\u00e9 \u00e0 votre syst\u00e8me de chauffage prend en charge un ensemble diff\u00e9rent de param\u00e8tres. Auparavant, je fournissais une liste de param\u00e8tres collect\u00e9s \u00e0 partir de diff\u00e9rents types de syst\u00e8mes de chauffage, mais il s'est av\u00e9r\u00e9 que cette liste \u00e9tait ambigu\u00eb ou contenait m\u00eame des erreurs que nous ne pouvions pas corriger de mani\u00e8re fiable. Cette liste est toujours disponible dans la version 2.2.x de BSB-LAN et peut \u00eatre copi\u00e9e \u00e0 partir de l\u00e0 si n\u00e9cessaire. Cependant, il n'est pas conseill\u00e9 de le faire car les ambigu\u00eft\u00e9s et les erreurs mentionn\u00e9es pr\u00e9sentent un risque trop \u00e9lev\u00e9 de mauvaise configuration du syst\u00e8me de chauffage. Il est plut\u00f4t recommand\u00e9 de cliquer sur le bouton \" Liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil \" dans le menu de BSB-LAN et d'envoyer la liste g\u00e9n\u00e9r\u00e9e \u00e0 Frederik (bsb(\u00e4t)code-it.de). \u00c0 partir de ce fichier, une liste de param\u00e8tres peut \u00eatre g\u00e9n\u00e9r\u00e9e qui correspond exactement au contr\u00f4leur de votre syst\u00e8me de chauffage. Malheureusement, ce processus ne peut pas encore \u00eatre automatis\u00e9, mais au moins il n'a besoin d'\u00eatre fait qu'une seule fois. Ces donn\u00e9es brutes ne contiennent aucune configuration ni aucun autre type de donn\u00e9es personnelles, uniquement la structure des param\u00e8tres du syst\u00e8me de chauffage. Il est dans mon propre int\u00e9r\u00eat de cr\u00e9er et de renvoyer ces listes de param\u00e8tres sans d\u00e9lai, mais je vous prie de bien vouloir comprendre si cela prend un peu plus de temps en raison de mon travail ou de mes obligations familiales.","title":"D\u00e9marrage rapide"},{"location":"fr/quickstart.html#instructions-de-demarrage-rapide","text":"Ces instructions de d\u00e9marrage rapide s'adressent aux utilisateurs qui sont familiaris\u00e9s avec l'installation et la configuration de logiciels sur leur ordinateur. Si vous avez besoin d'instructions plus d\u00e9taill\u00e9es, veuillez consulter les instructions d'installation ! Assurez-vous que votre syst\u00e8me de chauffage est compatible avec BSB-LAN ! T\u00e9l\u00e9chargez et d\u00e9compressez la version actuelle de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel principal ou utilisez git pour cloner le r\u00e9f\u00e9rentiel. Acc\u00e9dez au dossier BSB_LAN et renommez les fichiers suivants : BSB_LAN_custom_defs.h.default en BSB_LAN_custom_defs.h BSB_LAN_config.h.default en BSB_LAN_config.h . T\u00e9l\u00e9chargez et installez l'IDE Arduino pour votre syst\u00e8me. Connectez votre microcontr\u00f4leur (ESP32 ou Arduino Due) \u00e0 votre ordinateur et d\u00e9marrez l'IDE Arduino. Acc\u00e9dez \u00e0 Outils/Board/Board Manager et assurez-vous que le framework pour votre carte est install\u00e9 (\"esp32 by Espressif Systems\" pour le microcontr\u00f4leur ESP32, \"Arduino SAM Boards (32-bits ARM Cortex-M3) by Arduino\" pour le microcontr\u00f4leur Arduino Due) \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Board et s\u00e9lectionnez votre microcontr\u00f4leur : ESP32 Dev Module pour le Joy-It ESP32 NodeMCU. Olimex ESP32-EVB pour l'Olimex EVB bas\u00e9 sur ESP32. Olimex ESP32-POE-ISO pour l'Olimex POE ISO bas\u00e9 sur ESP32 Arduino Due (Programming Port) pour l'Arduino Due. N'utilisez pas le port USB natif ici ! \u00c0 nouveau, acc\u00e9dez \u00e0 Outils/Board et s\u00e9lectionnez la vitesse de t\u00e9l\u00e9chargement appropri\u00e9e (jusqu'\u00e0 460800 pour ESP32, 115200 pour Arduino Due). Pour les microcontr\u00f4leurs bas\u00e9s sur ESP32, acc\u00e9dez \u00e0 nouveau \u00e0 Outils/Partition Scheme et s\u00e9lectionnez \"Minimal SPIFFS\" pour le sch\u00e9ma de partition ( ne confondez pas avec le sch\u00e9ma de partition \"Minimal\" similaire qui est diff\u00e9rent et ne fonctionne pas dans notre cas ). Si vous ne d\u00e9finissez pas le bon sch\u00e9ma de partition, le micrologiciel ne rentrera pas dans l'ESP32 ! Acc\u00e9dez \u00e0 Fichier/Ouvrir et acc\u00e9dez au dossier BSB_LAN, puis double-cliquez sur BSB_LAN.ino . Le projet s'ouvrira. Cliquez sur l'onglet avec le nom de fichier BSB_LAN_config.h et configurez au moins les options suivantes : Recherchez #define LANG DE : changez DE en EN pour l'anglais, FR pour le fran\u00e7ais, etc. Recherchez uint8_t network_type : d\u00e9finissez cette option sur LAN si vous utilisez une connexion Ethernet/LAN. D\u00e9finissez-la sur WLAN si vous utilisez une connexion WiFi/WLAN. Si vous n'utilisez pas DHCP, configurez les options suivantes en fonction de votre r\u00e9seau (assurez-vous d'utiliser une virgule, et non un point, pour les adresses IP !) : byte ip_addr[4] = {192,168,178,88}; byte gateway_addr[4] = {192,168,178,1}; byte dns_addr[4] = {192,168,178,1}; byte subnet_addr[4] = {255,255,255,0}; char wifi_ssid[32] = \"Your_Wifi_network_name\"; char wifi_pass[32] = \"Your_WiFi_network_password\"; Acc\u00e9dez maintenant \u00e0 Sketch/Upload et t\u00e9l\u00e9chargez le logiciel BSB-LAN sur le microcontr\u00f4leur. D\u00e9connectez le microcontr\u00f4leur et \u00e9teignez votre syst\u00e8me de chauffage. Localisez les connecteurs BSB/LPB/PPS. Vous devrez peut-\u00eatre ouvrir votre syst\u00e8me de chauffage pour cela. Faites tout cela \u00e0 vos propres risques ! Connectez maintenant l'adaptateur BSB-LAN au microcontr\u00f4leur et connectez le connecteur \u00e0 vis + au connecteur CL+ (BSB), DB (LPB) ou A6 (PPS, les noms des connecteurs peuvent varier), et le connecteur \u00e0 vis - au connecteur CL- (BSB), MB (LPB) ou M (PPS). Allumez le microcontr\u00f4leur via le port USB ou via PoE (uniquement Olimex POE-ISO). Puis allumez le syst\u00e8me de chauffage. Le LED rouge de l'adaptateur BSB-LAN doit s'allumer. Il devrait clignoter de temps en temps. Ouvrez maintenant votre navigateur web et acc\u00e9dez \u00e0 l'adresse IP de BSB-LAN. Si MDNS est activ\u00e9, vous pouvez directement acc\u00e9der \u00e0 http://bsb-lan.local . Vous pouvez trouver l'adresse IP de BSB-LAN dans votre routeur, ou vous pouvez connecter le microcontr\u00f4leur \u00e0 votre PC et ouvrir l'IDE Arduino, puis acc\u00e9der \u00e0 Outils/Moniteur s\u00e9rie . Red\u00e9marrez le microcontr\u00f4leur, et l'adresse IP s'affichera lors de la connexion au r\u00e9seau. C'est termin\u00e9 :-)","title":"Instructions de d\u00e9marrage rapide"},{"location":"fr/quickstart.html#ca-ne-fonctionne-pas","text":"Veuillez vous assurer de v\u00e9rifier chaque entr\u00e9e dans la section D\u00e9pannage avant de nous contacter !","title":"\u00c7a ne fonctionne pas !"},{"location":"fr/quickstart.html#pourquoi-est-ce-que-je-ne-vois-que-quelques-parametres","text":"Lors de votre premi\u00e8re connexion \u00e0 BSB-LAN, vous remarquerez que seuls quelques param\u00e8tres sont affich\u00e9s sur l'interface Web de l'appareil. Cela est d\u00fb au fait que chaque mod\u00e8le du contr\u00f4leur Siemens int\u00e9gr\u00e9 \u00e0 votre syst\u00e8me de chauffage prend en charge un ensemble diff\u00e9rent de param\u00e8tres. Auparavant, je fournissais une liste de param\u00e8tres collect\u00e9s \u00e0 partir de diff\u00e9rents types de syst\u00e8mes de chauffage, mais il s'est av\u00e9r\u00e9 que cette liste \u00e9tait ambigu\u00eb ou contenait m\u00eame des erreurs que nous ne pouvions pas corriger de mani\u00e8re fiable. Cette liste est toujours disponible dans la version 2.2.x de BSB-LAN et peut \u00eatre copi\u00e9e \u00e0 partir de l\u00e0 si n\u00e9cessaire. Cependant, il n'est pas conseill\u00e9 de le faire car les ambigu\u00eft\u00e9s et les erreurs mentionn\u00e9es pr\u00e9sentent un risque trop \u00e9lev\u00e9 de mauvaise configuration du syst\u00e8me de chauffage. Il est plut\u00f4t recommand\u00e9 de cliquer sur le bouton \" Liste des param\u00e8tres sp\u00e9cifiques \u00e0 l'appareil \" dans le menu de BSB-LAN et d'envoyer la liste g\u00e9n\u00e9r\u00e9e \u00e0 Frederik (bsb(\u00e4t)code-it.de). \u00c0 partir de ce fichier, une liste de param\u00e8tres peut \u00eatre g\u00e9n\u00e9r\u00e9e qui correspond exactement au contr\u00f4leur de votre syst\u00e8me de chauffage. Malheureusement, ce processus ne peut pas encore \u00eatre automatis\u00e9, mais au moins il n'a besoin d'\u00eatre fait qu'une seule fois. Ces donn\u00e9es brutes ne contiennent aucune configuration ni aucun autre type de donn\u00e9es personnelles, uniquement la structure des param\u00e8tres du syst\u00e8me de chauffage. Il est dans mon propre int\u00e9r\u00eat de cr\u00e9er et de renvoyer ces listes de param\u00e8tres sans d\u00e9lai, mais je vous prie de bien vouloir comprendre si cela prend un peu plus de temps en raison de mon travail ou de mes obligations familiales.","title":"Pourquoi est-ce que je ne vois que quelques param\u00e8tres ?"},{"location":"fr/supported_heating_systems.html","text":"Syst\u00e8mes de chauffage pris en charge BSB-LAN prend en charge les syst\u00e8mes de chauffage qui communiquent \u00e0 l'aide du BSB (Boiler System Bus) , du LPB (Local Process Bus) ou du PPS (Punkt-zu-Punkt-Schnittstelle) . Ces contr\u00f4leurs sont g\u00e9n\u00e9ralement fabriqu\u00e9s par Siemens, les mod\u00e8les plus anciens peuvent encore porter le nom de \"Landis & Stafea\" ou \"Landis & Gyr\". Nous avons compil\u00e9 une liste de mod\u00e8les fonctionnels de diff\u00e9rents fabricants de syst\u00e8mes de chauffage qui ont \u00e9t\u00e9 confirm\u00e9s comme fonctionnant avec BSB-LAN, bien qu'il n'y ait pas de garantie \u00e0 100 % que les fabricants conservent le nom du mod\u00e8le mais changent le contr\u00f4leur pour un syst\u00e8me diff\u00e9rent. Assurez-vous donc toujours de v\u00e9rifier que les bonnes connecteurs sont disponibles. Voici quelques exemples de contr\u00f4leurs de chauffage et des connecteurs utilis\u00e9s pour se connecter \u00e0 BSB-LAN. Certains connecteurs ont trois broches, d'autres en ont deux. S'il y a trois broches, assurez-vous de choisir les deux bonnes (CL+ et CL-) car la troisi\u00e8me broche (G+) sert \u00e0 fournir l'\u00e9clairage de fond pour l'unit\u00e9 de la pi\u00e8ce. Il n'endommagera pas BSB-LAN, mais il peut \u00eatre trompeur car la LED de BSB-LAN s'allumera m\u00eame si elle n'est pas connect\u00e9e \u00e0 la bonne broche. D'ailleurs : Si vous n'avez qu'un seul connecteur et qu'il est d\u00e9j\u00e0 occup\u00e9 par une unit\u00e9 de pi\u00e8ce, il n'y a aucun probl\u00e8me \u00e0 ajouter BSB-LAN au m\u00eame connecteur. Faites simplement attention lorsque vous ajoutez les fils pour BSB-LAN. Contr\u00f4leur Image Remarques LMS14 LMS15 Connexion BSB : + = Gauche - = Centre LMS14 LMS15 Connexion BSB : CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista Connexion BSB : Bornier M2 Broche 2 : CL- Broche 3 : CL+ Consultez les instructions d\u00e9taill\u00e9es ici pour Baxi Luna Platinum . LMU54 LMU64 Connexion LPB : via le plugin OCI420 suppl\u00e9mentaire, voir d\u00e9tails ci-dessous . LMU74 LMU75 Connexion BSB : + = Haut - = Centre Connexion LPB : via le plugin OCI420 suppl\u00e9mentaire RVA53 Connexion PPS : A6/MD RVA63 Connexion LPB : MB/DB Connexion PPS : A6/MD RVP54 Connexion PPS : A6/M RVS13 Connexion BSB : CL+/CL- RVS21 Connexion BSB via le connecteur X86 + = broche la plus \u00e0 droite - = deuxi\u00e8me broche \u00e0 partir de la droite RVS21 avec AVS55 Module d'extension AVS55, plac\u00e9 sur le dessus du RVS21. Connexion BSB via le connecteur X86 : + = broche la plus \u00e0 droite - = deuxi\u00e8me broche \u00e0 partir de la droite ou via le connecteur X150 : + = broche sup\u00e9rieure - = deuxi\u00e8me broche du haut RVS23 Connexion LPB : LPB/M RVS41 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS43 LOGON B Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS46 ISR-ZR1 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS46 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS51 Connexion BSB : CL+/CL- RVS53 Connexion BSB : CL+/CL- RVS61 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS63 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS65 Connexion BSB : CL+/CL- Connexion LPB : MB/DB Param\u00e8tres de configuration pour OCI420 Faire fonctionner correctement l'OCI420 peut s'av\u00e9rer un peu difficile s'il ne fait pas d\u00e9j\u00e0 partie d'un r\u00e9seau LPB existant. Si vous connectez l'OCI420 pour la premi\u00e8re fois \u00e0 votre appareil de chauffage et que vous n'avez aucun autre appareil de chauffage LPB, vous obtiendrez tr\u00e8s probablement l'\"erreur 81\" qui indique qu'il y a une erreur de bus. Mais ne vous inqui\u00e9tez pas, il s'agit tr\u00e8s probablement de configurer quelques param\u00e8tres pour le faire fonctionner. Pour le LMU64, le param\u00e8tre correspondant est 604 ( LPBKonfig0 ). Il doit \u00eatre d\u00e9fini comme suit pour utiliser BSB-LAN comme seul appareil connect\u00e9 \u00e0 l'OCI420 : 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Ensuite, vous devez d\u00e9finir l'adresse LPB de l'OCI420 dans les param\u00e8tres 605 (doit \u00eatre d\u00e9fini sur 1) et 606 (doit \u00eatre d\u00e9fini sur 0). Par la suite, il ne devrait plus y avoir de message d'erreur et la LED rouge de l'OCI420 devrait clignoter \u00e0 intervalles r\u00e9guliers, et vous \u00eates pr\u00eat \u00e0 connecter et \u00e0 utiliser BSB-LAN. Attention : Si l'OCI420 est d\u00e9j\u00e0 connect\u00e9 \u00e0 un autre appareil LPB, n'apportez aucune modification ici et connectez plut\u00f4t BSB-LAN \u00e0 l'autre appareil LPB. Il devrait fonctionner sans aucun r\u00e9glage. Liste des mod\u00e8les de contr\u00f4leurs fonctionnels Il existe de nombreux autres contr\u00f4leurs qui sont susceptibles de fonctionner avec BSB-LAN. Faites attention \u00e0 ces mod\u00e8les de contr\u00f4leurs Siemens dans votre syst\u00e8me de chauffage : AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"Syst\u00e8mes de chauffage pris en charge"},{"location":"fr/supported_heating_systems.html#systemes-de-chauffage-pris-en-charge","text":"BSB-LAN prend en charge les syst\u00e8mes de chauffage qui communiquent \u00e0 l'aide du BSB (Boiler System Bus) , du LPB (Local Process Bus) ou du PPS (Punkt-zu-Punkt-Schnittstelle) . Ces contr\u00f4leurs sont g\u00e9n\u00e9ralement fabriqu\u00e9s par Siemens, les mod\u00e8les plus anciens peuvent encore porter le nom de \"Landis & Stafea\" ou \"Landis & Gyr\". Nous avons compil\u00e9 une liste de mod\u00e8les fonctionnels de diff\u00e9rents fabricants de syst\u00e8mes de chauffage qui ont \u00e9t\u00e9 confirm\u00e9s comme fonctionnant avec BSB-LAN, bien qu'il n'y ait pas de garantie \u00e0 100 % que les fabricants conservent le nom du mod\u00e8le mais changent le contr\u00f4leur pour un syst\u00e8me diff\u00e9rent. Assurez-vous donc toujours de v\u00e9rifier que les bonnes connecteurs sont disponibles. Voici quelques exemples de contr\u00f4leurs de chauffage et des connecteurs utilis\u00e9s pour se connecter \u00e0 BSB-LAN. Certains connecteurs ont trois broches, d'autres en ont deux. S'il y a trois broches, assurez-vous de choisir les deux bonnes (CL+ et CL-) car la troisi\u00e8me broche (G+) sert \u00e0 fournir l'\u00e9clairage de fond pour l'unit\u00e9 de la pi\u00e8ce. Il n'endommagera pas BSB-LAN, mais il peut \u00eatre trompeur car la LED de BSB-LAN s'allumera m\u00eame si elle n'est pas connect\u00e9e \u00e0 la bonne broche. D'ailleurs : Si vous n'avez qu'un seul connecteur et qu'il est d\u00e9j\u00e0 occup\u00e9 par une unit\u00e9 de pi\u00e8ce, il n'y a aucun probl\u00e8me \u00e0 ajouter BSB-LAN au m\u00eame connecteur. Faites simplement attention lorsque vous ajoutez les fils pour BSB-LAN. Contr\u00f4leur Image Remarques LMS14 LMS15 Connexion BSB : + = Gauche - = Centre LMS14 LMS15 Connexion BSB : CL+/CL- LMS14 LMS15 Baxi Luna Platinum, Chappee Klista Connexion BSB : Bornier M2 Broche 2 : CL- Broche 3 : CL+ Consultez les instructions d\u00e9taill\u00e9es ici pour Baxi Luna Platinum . LMU54 LMU64 Connexion LPB : via le plugin OCI420 suppl\u00e9mentaire, voir d\u00e9tails ci-dessous . LMU74 LMU75 Connexion BSB : + = Haut - = Centre Connexion LPB : via le plugin OCI420 suppl\u00e9mentaire RVA53 Connexion PPS : A6/MD RVA63 Connexion LPB : MB/DB Connexion PPS : A6/MD RVP54 Connexion PPS : A6/M RVS13 Connexion BSB : CL+/CL- RVS21 Connexion BSB via le connecteur X86 + = broche la plus \u00e0 droite - = deuxi\u00e8me broche \u00e0 partir de la droite RVS21 avec AVS55 Module d'extension AVS55, plac\u00e9 sur le dessus du RVS21. Connexion BSB via le connecteur X86 : + = broche la plus \u00e0 droite - = deuxi\u00e8me broche \u00e0 partir de la droite ou via le connecteur X150 : + = broche sup\u00e9rieure - = deuxi\u00e8me broche du haut RVS23 Connexion LPB : LPB/M RVS41 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS43 LOGON B Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS46 ISR-ZR1 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS46 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS51 Connexion BSB : CL+/CL- RVS53 Connexion BSB : CL+/CL- RVS61 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS63 Connexion BSB : CL+/CL- Connexion LPB : MB/DB RVS65 Connexion BSB : CL+/CL- Connexion LPB : MB/DB","title":"Syst\u00e8mes de chauffage pris en charge"},{"location":"fr/supported_heating_systems.html#parametres-de-configuration-pour-oci420","text":"Faire fonctionner correctement l'OCI420 peut s'av\u00e9rer un peu difficile s'il ne fait pas d\u00e9j\u00e0 partie d'un r\u00e9seau LPB existant. Si vous connectez l'OCI420 pour la premi\u00e8re fois \u00e0 votre appareil de chauffage et que vous n'avez aucun autre appareil de chauffage LPB, vous obtiendrez tr\u00e8s probablement l'\"erreur 81\" qui indique qu'il y a une erreur de bus. Mais ne vous inqui\u00e9tez pas, il s'agit tr\u00e8s probablement de configurer quelques param\u00e8tres pour le faire fonctionner. Pour le LMU64, le param\u00e8tre correspondant est 604 ( LPBKonfig0 ). Il doit \u00eatre d\u00e9fini comme suit pour utiliser BSB-LAN comme seul appareil connect\u00e9 \u00e0 l'OCI420 : 604.0 = 0 604.1 = 1 604.2 = 1 604.3 = 1 604.4 = 1 604.5 = 0 604.6 = 0 604.7 = 0 Ensuite, vous devez d\u00e9finir l'adresse LPB de l'OCI420 dans les param\u00e8tres 605 (doit \u00eatre d\u00e9fini sur 1) et 606 (doit \u00eatre d\u00e9fini sur 0). Par la suite, il ne devrait plus y avoir de message d'erreur et la LED rouge de l'OCI420 devrait clignoter \u00e0 intervalles r\u00e9guliers, et vous \u00eates pr\u00eat \u00e0 connecter et \u00e0 utiliser BSB-LAN. Attention : Si l'OCI420 est d\u00e9j\u00e0 connect\u00e9 \u00e0 un autre appareil LPB, n'apportez aucune modification ici et connectez plut\u00f4t BSB-LAN \u00e0 l'autre appareil LPB. Il devrait fonctionner sans aucun r\u00e9glage.","title":"Param\u00e8tres de configuration pour OCI420"},{"location":"fr/supported_heating_systems.html#liste-des-modeles-de-controleurs-fonctionnels","text":"Il existe de nombreux autres contr\u00f4leurs qui sont susceptibles de fonctionner avec BSB-LAN. Faites attention \u00e0 ces mod\u00e8les de contr\u00f4leurs Siemens dans votre syst\u00e8me de chauffage : AVS37, AVS55 , AVS71, AVS74, AVS75, AVS77, AVS79, LMS14 , LMS15 , LMU54 , LMU64 , LMU74 , LMU75 , RVA33, RVA36, RVA43, RVA46, RVA47, RVA53 , RVA60, RVA61, RVA63 , RVA65, RVA66, RVC32, RVD110, RVD115, RVD120, RVD125, RVD130, RVD135, RVD139, RVD140, RVD144, RVD145, RVD230, RVD235, RVD240, RVD245, RVD250, RVD255, RVD260, RVD265, RVL469, RVL470, RVL471, RVL472, RVL479, RVL480, RVL481, RVL482, RVP340, RVP350, RVP351, RVP360, RVP361, RVP54 , RVP5xx, RVS13 , RVS21 , RVS23 , RVS26, RVS41 , RVS43 , RVS46 , RVS47, RVS51 , RVS53 , RVS61 , RVS63 , RVS65 , RVS68, RWI65, WRI80","title":"Liste des mod\u00e8les de contr\u00f4leurs fonctionnels"},{"location":"fr/supported_models.html","text":"Mod\u00e8les pris en charge de diff\u00e9rents fabricants Voici une liste de mod\u00e8les de diff\u00e9rents fabricants qui ont \u00e9t\u00e9 test\u00e9s dans le pass\u00e9 avec BSB-LAN. Veuillez noter que les fabricants peuvent \u00e0 tout moment modifier les sp\u00e9cifications techniques, y compris le contr\u00f4leur, sans changer le nom du mod\u00e8le (ou seulement une tr\u00e8s petite partie de celui-ci). Lorsque nous sommes inform\u00e9s d'un tel changement, nous le mentionnons ici, mais il est \u00e9vident que cette liste n'est pas compl\u00e8te dans les deux sens. Dans tous les cas, veuillez effectuer vous-m\u00eame une v\u00e9rification finale pour vous assurer que votre syst\u00e8me de chauffage dispose des connecteurs n\u00e9cessaires pour utiliser BSB-LAN. Br\u00f6tje : BBK, BBS, BGB, BLW ( voir les exceptions ci-dessous! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( voir les exceptions ci-dessous! ), WMC, WMS, WOB Mod\u00e8les Br\u00f6tje non fonctionnels : BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch : pompes \u00e0 chaleur avec contr\u00f4leur de type RVS Elco : Aerotop, Aquatop, Rendamax, Straton, Thision ( pas Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG : QR Atlantic : Alf\u00e9a, Axeo, Excellia, Extensa, Hynea hybrid duo gaz, Navistem, Perfinox, Varmax Austria Email : LWP, LWPK Baxi : Luna Platinum, Luna Duo, Block Kondens Boesch : SLS Chapp\u00e9e : Luna, Klista CitrinSolar : proClima CTA : Optiheat CTC : 380 IC Deville : 9942, 9981 Eco : AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar : Ecodense WT-S 45 EVI Heat : Combi-7 Fernw\u00e4rme : RVD230 Froeling : Rendagas Plus Fujitsu Waterstage : Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox : Thrs General : (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald : Greenheat GS : UnoTec Hansa : SND Herz : Commotherm 5 DeLuxe Interdomo : Domostar GBK 25H/SH MAN/MHG : Ecostar 200 MHG : ecoWP Xe, Procon E Oilon : SH, SHx Olymp : SHS, WHS Palazzetti : Choro Sistema Calore Sieger : TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC) : STC9 Sixmadun : TG11BE SSP : Proburner Sunex : Nexus Termomax : Termo \u00d6V Thermics : Energie Thermital : TBox Clima TOP Tifell : Biofell Viessmann : Vitotwin 300-W Wamak : AiWa, DB Weishaupt : WTU","title":"Mod\u00e8les pris en charge de diff\u00e9rents fabricants"},{"location":"fr/supported_models.html#modeles-pris-en-charge-de-differents-fabricants","text":"Voici une liste de mod\u00e8les de diff\u00e9rents fabricants qui ont \u00e9t\u00e9 test\u00e9s dans le pass\u00e9 avec BSB-LAN. Veuillez noter que les fabricants peuvent \u00e0 tout moment modifier les sp\u00e9cifications techniques, y compris le contr\u00f4leur, sans changer le nom du mod\u00e8le (ou seulement une tr\u00e8s petite partie de celui-ci). Lorsque nous sommes inform\u00e9s d'un tel changement, nous le mentionnons ici, mais il est \u00e9vident que cette liste n'est pas compl\u00e8te dans les deux sens. Dans tous les cas, veuillez effectuer vous-m\u00eame une v\u00e9rification finale pour vous assurer que votre syst\u00e8me de chauffage dispose des connecteurs n\u00e9cessaires pour utiliser BSB-LAN. Br\u00f6tje : BBK, BBS, BGB, BLW ( voir les exceptions ci-dessous! ), BMK, BMR, BOB, BSK, BSW, Eurocontrol, ISR, LogoBloc, SGB, SOB, SPK, WBC, WBS, WGB ( voir les exceptions ci-dessous! ), WMC, WMS, WOB Mod\u00e8les Br\u00f6tje non fonctionnels : BOK, BLW Neo, BLW Split-P, BLW Split C, BLW Split-K C, WGB-K, WGB 14.1/22.1/28.1/38.1, WHC, WHS, WLC, WLS B\u00f6sch : pompes \u00e0 chaleur avec contr\u00f4leur de type RVS Elco : Aerotop, Aquatop, Rendamax, Straton, Thision ( pas Thision Mini! ), Thision S, Thision S Plus, Trigon S Plus ATAG : QR Atlantic : Alf\u00e9a, Axeo, Excellia, Extensa, Hynea hybrid duo gaz, Navistem, Perfinox, Varmax Austria Email : LWP, LWPK Baxi : Luna Platinum, Luna Duo, Block Kondens Boesch : SLS Chapp\u00e9e : Luna, Klista CitrinSolar : proClima CTA : Optiheat CTC : 380 IC Deville : 9942, 9981 Eco : AiWA, AW, BW, DW, heatLite, Star, TBW, WW, WWi, TWW Ecostar : Ecodense WT-S 45 EVI Heat : Combi-7 Fernw\u00e4rme : RVD230 Froeling : Rendagas Plus Fujitsu Waterstage : Comfort, Duo, WOHA, WSHA, WSYA, WSYK, WSYP Geminox : Thrs General : (aka Fujitsu Waterstage) WC13F / WOC13RIYF / WGHA 100DG Gruenenwald : Greenheat GS : UnoTec Hansa : SND Herz : Commotherm 5 DeLuxe Interdomo : Domostar GBK 25H/SH MAN/MHG : Ecostar 200 MHG : ecoWP Xe, Procon E Oilon : SH, SHx Olymp : SHS, WHS Palazzetti : Choro Sistema Calore Sieger : TG11 \u0160ildymo Technologij\u0173 Centras (\u0160TC) : STC9 Sixmadun : TG11BE SSP : Proburner Sunex : Nexus Termomax : Termo \u00d6V Thermics : Energie Thermital : TBox Clima TOP Tifell : Biofell Viessmann : Vitotwin 300-W Wamak : AiWa, DB Weishaupt : WTU","title":"Mod\u00e8les pris en charge de diff\u00e9rents fabricants"},{"location":"fr/troubleshooting.html","text":"D\u00e9pannage BSB-LAN s'efforce de rendre l'acc\u00e8s \u00e0 votre syst\u00e8me de chauffage aussi simple que possible, mais il y a toujours des choses qui peuvent mal tourner. Si vous rencontrez encore des probl\u00e8mes apr\u00e8s avoir lu ce document ainsi que la FAQ , veuillez ouvrir un rapport de bogue sur la page GitHub du projet et assurez-vous de nous fournir tous les fichiers journaux n\u00e9cessaires et les autres d\u00e9tails requis, en particulier \u00e0 partir du moniteur s\u00e9rie (ou SerMo en abr\u00e9g\u00e9). Avant de le faire, cependant, assurez-vous d'installer la version la plus r\u00e9cente de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel ma\u00eetre (et non la version de publication), m\u00eame si la v\u00f4tre n'est vieille que de \"quelques\" jours. Beaucoup de choses auraient pu se passer depuis lors : ! Utilisation du moniteur s\u00e9rie Acc\u00e9dez au moniteur s\u00e9rie en allant dans Outils/Moniteur s\u00e9rie dans l'IDE Arduino. D\u00e9finissez la vitesse de transmission sur 115200 dans le coin sup\u00e9rieur droit de la fen\u00eatre du moniteur s\u00e9rie. Assurez-vous de copier les messages \u00e0 partir du moment o\u00f9 votre microcontr\u00f4leur d\u00e9marre (indiqu\u00e9 par le message READY ) jusqu'au moment o\u00f9 vous rencontrez le probl\u00e8me. Veuillez ne pas envoyer de captures d'\u00e9cran, uniquement des fichiers texte brut. Le moniteur s\u00e9rie dans l'IDE Arduino pr\u00e9sente actuellement un bogue qui vous permet de ne copier que les parties des messages du moniteur s\u00e9rie qui s'affichent \u00e0 l'\u00e9cran. Bien que cela signifie que la copie de grandes parties des messages du journal est fastidieuse, vous devez tout de m\u00eame fournir le journal complet pour obtenir de l'aide. Augmenter la taille de la fen\u00eatre du moniteur s\u00e9rie aide un peu. La compilation \u00e9choue : \"Croquis trop grand\" S\u00e9lectionnez le sch\u00e9ma de partition Minimal SPIFFS dans l'IDE Arduino sous Outils/Sch\u00e9ma de partition . Attention : Ce param\u00e8tre est r\u00e9initialis\u00e9 par d\u00e9faut lors de la mise \u00e0 jour du framework ESP32 ! Si vous utilisez des mises \u00e0 jour par-dessus l'air, vous devez flasher le logiciel une fois via USB apr\u00e8s avoir modifi\u00e9 le sch\u00e9ma de partition avant que les mises \u00e0 jour OTA ne fonctionnent \u00e0 nouveau. Plus d'acc\u00e8s \u00e0 l'interface Web Si vous avez modifi\u00e9 les param\u00e8tres de sorte que vous ne pouvez plus acc\u00e9der \u00e0 l'interface Web, il existe deux fa\u00e7ons de restaurer le syst\u00e8me : Si vous pouvez flasher l'appareil : Configurez BSB_LAN_config.h avec des param\u00e8tres corrects et fonctionnels. D\u00e9finissez UseEEPROM sur 0 . Flasher BSB-LAN sur le microcontr\u00f4leur. Vous pouvez maintenant acc\u00e9der \u00e0 BSB-LAN. Acc\u00e9dez \u00e0 \"Param\u00e8tres\" et enregistrez les param\u00e8tres. Cela stockera les param\u00e8tres de travail dans l'EEPROM. Maintenant, modifiez BSB_LAN_config.h \u00e0 nouveau ! et d\u00e9finissez UseEEPROM sur 1 et flasher \u00e0 nouveau BSB-LAN sur le microcontr\u00f4leur. Ce n'est qu'\u00e0 ce moment-l\u00e0 que BSB-LAN lira et utilisera les param\u00e8tres de l'EEPROM, vous pourrez donc apporter d'autres modifications dans l'interface Web. Si vous ne pouvez pas flasher l'appareil : Si vous ne pouvez pas flasher l'appareil sur place, vous pouvez r\u00e9initialiser BSB-LAN sur le dernier param\u00e8tre BSB_LAN_config.h en connectant deux broches avant et pendant le d\u00e9marrage du microcontr\u00f4leur : ESP32-Olimex : connecter les broches 34 et 3V3. ESP32-NodeMCU : connecter les broches 21 et 3V3. Arduino Due : connecter les broches 31 et 33. Si les broches ont \u00e9t\u00e9 connect\u00e9es avec succ\u00e8s, la LED int\u00e9gr\u00e9e du microcontr\u00f4leur clignotera lentement pendant quatre secondes. Ensuite, ouvrez la configuration dans l'interface Web, v\u00e9rifiez tous les param\u00e8tres de la configuration et enregistrez-les. Cela stockera les param\u00e8tres de travail dans l'EEPROM. Point d'acc\u00e8s temporaire sur un microcontr\u00f4leur bas\u00e9 sur ESP32 Sur un microcontr\u00f4leur bas\u00e9 sur ESP32, BSB-LAN configurera son propre point d'acc\u00e8s sans fil nomm\u00e9 BSB-LAN s'il ne peut pas se connecter \u00e0 un r\u00e9seau. Dans ce cas, vous pouvez vous connecter \u00e0 ce point d'acc\u00e8s avec le mot de passe BSB-LPB-PPS-LAN et acc\u00e9der \u00e0 BSB-LAN via l'adresse IP http://192.168.4.1 et voir si vous pouvez corriger la configuration de cette mani\u00e8re. Gardez \u00e0 l'esprit que si vous avez d\u00e9fini une cl\u00e9 de passe ou un nom d'utilisateur et un mot de passe HTTP, ils sont toujours requis si ces d\u00e9tails sont stock\u00e9s dans l'EEPROM ou BSB_LAN_config.h . Je ne peux acc\u00e9der qu'\u00e0 tr\u00e8s peu de param\u00e8tres via BSB/LPB ! Initialement, BSB-LAN n'est fourni qu'avec un petit ensemble de param\u00e8tres qui fonctionnent sur (presque) tous les syst\u00e8mes de chauffage. Vous devez obtenir une liste de param\u00e8tres sp\u00e9cifique \u00e0 l'appareil . La liste des cat\u00e9gories est soudainement tr\u00e8s petite BSB-LAN a besoin de d\u00e9tecter le contr\u00f4leur du syst\u00e8me de chauffage pour d\u00e9terminer les cat\u00e9gories \u00e0 afficher. Si BSB-LAN n'est pas connect\u00e9 au contr\u00f4leur ou si la d\u00e9tection \u00e9choue, seules quelques cat\u00e9gories universelles sont affich\u00e9es. Impossible de lire les param\u00e8tres / la famille d'appareils est 0 Type de bus incorrect (BSB au lieu de LPB ou vice versa). Si la LED rouge de l'adaptateur n'est pas allum\u00e9e (et id\u00e9alement clignote l\u00e9g\u00e8rement), il y a un probl\u00e8me de c\u00e2blage entre l'adaptateur et le syst\u00e8me de chauffage. La LED rouge s'allumera une fois l'adaptateur correctement connect\u00e9, m\u00eame si l'adaptateur BSB-LAN n'est m\u00eame pas connect\u00e9 au microcontr\u00f4leur ! Pas de donn\u00e9es m\u00eame si la LED rouge de l'adaptateur est allum\u00e9e Assurez-vous que l'adaptateur est connect\u00e9 \u00e0 CL+/CL- et non \u00e0 la troisi\u00e8me broche (G+) : G+ alimentera la LED, mais ce n'est pas une ligne de donn\u00e9es. Assurez-vous d'avoir allum\u00e9 le microcontr\u00f4leur . Vous pouvez penser que le syst\u00e8me de chauffage alimente le microcontr\u00f4leur car la LED sur l'adaptateur BSB-LAN est allum\u00e9e, mais ce n'est pas le cas. Vous devez l'alimenter s\u00e9par\u00e9ment. Avec l'adaptateur pour les microcontr\u00f4leurs Olimex : Assurez-vous que la carte adaptatrice BSB-LAN est exactement centr\u00e9e sur le connecteur UEXT. Il s'ins\u00e9rera toujours, s'il est d\u00e9cal\u00e9 d'une broche vers la gauche ou la droite, mais il ne fonctionnera pas. Assurez-vous que les broches RX/TX sont correctement d\u00e9finies/d\u00e9tect\u00e9es. La s\u00e9quence de d\u00e9marrage dans le moniteur s\u00e9rie vous montrera quelles broches sont utilis\u00e9es ou ont \u00e9t\u00e9 d\u00e9tect\u00e9es automatiquement. Pas de connexion r\u00e9seau ou connexion non fiable Essayez d'alimenter le microcontr\u00f4leur via USB \u00e0 partir d'un ordinateur portable. Nous avons eu de nombreux cas o\u00f9 les alimentations \u00e9taient peu fiables malgr\u00e9 des sp\u00e9cifications suffisantes. Consultez le journal du moniteur s\u00e9rie pour v\u00e9rifier si le microcontr\u00f4leur a pu acqu\u00e9rir une adresse IP. Si ce n'est pas le cas, vos param\u00e8tres r\u00e9seau ou votre connexion physique peuvent \u00eatre d\u00e9fectueux. Aucune connexion au r\u00e9seau Wi-Fi masqu\u00e9 possible Oui, il s'agit d'une restriction connue. La seule fa\u00e7on de le faire est de d\u00e9finir explicitement le BSSID dans BSB_LAN_config.h . La temp\u00e9rature de la pi\u00e8ce (ou tout autre param\u00e8tre) ne peut pas \u00eatre d\u00e9finie V\u00e9rifiez les param\u00e8tres de BSB-LAN et assurez-vous que l'acc\u00e8s en \u00e9criture est activ\u00e9 et d\u00e9fini sur standard ou complet . L'interface Web se fige lors de l'\u00e9tablissement d'une nouvelle connexion BSB-LAN n'est pas un syst\u00e8me multit\u00e2che. Cela signifie qu'il peut s'occuper d'une t\u00e2che \u00e0 la fois. Donc, m\u00eame si une commande URL est arr\u00eat\u00e9e (en fermant la fen\u00eatre du navigateur), BSB-LAN risque de ne pas le d\u00e9tecter et de ne commencer \u00e0 traiter les nouvelles demandes qu'une fois la pr\u00e9c\u00e9dente termin\u00e9e. Le moniteur s\u00e9rie n'affiche pas de donn\u00e9es lisibles Assurez-vous que la vitesse est correctement d\u00e9finie sur 115200 bps. Assurez-vous que le bon port est s\u00e9lectionn\u00e9.","title":"D\u00e9pannage"},{"location":"fr/troubleshooting.html#depannage","text":"BSB-LAN s'efforce de rendre l'acc\u00e8s \u00e0 votre syst\u00e8me de chauffage aussi simple que possible, mais il y a toujours des choses qui peuvent mal tourner. Si vous rencontrez encore des probl\u00e8mes apr\u00e8s avoir lu ce document ainsi que la FAQ , veuillez ouvrir un rapport de bogue sur la page GitHub du projet et assurez-vous de nous fournir tous les fichiers journaux n\u00e9cessaires et les autres d\u00e9tails requis, en particulier \u00e0 partir du moniteur s\u00e9rie (ou SerMo en abr\u00e9g\u00e9). Avant de le faire, cependant, assurez-vous d'installer la version la plus r\u00e9cente de BSB-LAN \u00e0 partir du r\u00e9f\u00e9rentiel ma\u00eetre (et non la version de publication), m\u00eame si la v\u00f4tre n'est vieille que de \"quelques\" jours. Beaucoup de choses auraient pu se passer depuis lors : !","title":"D\u00e9pannage"},{"location":"fr/troubleshooting.html#utilisation-du-moniteur-serie","text":"Acc\u00e9dez au moniteur s\u00e9rie en allant dans Outils/Moniteur s\u00e9rie dans l'IDE Arduino. D\u00e9finissez la vitesse de transmission sur 115200 dans le coin sup\u00e9rieur droit de la fen\u00eatre du moniteur s\u00e9rie. Assurez-vous de copier les messages \u00e0 partir du moment o\u00f9 votre microcontr\u00f4leur d\u00e9marre (indiqu\u00e9 par le message READY ) jusqu'au moment o\u00f9 vous rencontrez le probl\u00e8me. Veuillez ne pas envoyer de captures d'\u00e9cran, uniquement des fichiers texte brut. Le moniteur s\u00e9rie dans l'IDE Arduino pr\u00e9sente actuellement un bogue qui vous permet de ne copier que les parties des messages du moniteur s\u00e9rie qui s'affichent \u00e0 l'\u00e9cran. Bien que cela signifie que la copie de grandes parties des messages du journal est fastidieuse, vous devez tout de m\u00eame fournir le journal complet pour obtenir de l'aide. Augmenter la taille de la fen\u00eatre du moniteur s\u00e9rie aide un peu.","title":"Utilisation du moniteur s\u00e9rie"},{"location":"fr/troubleshooting.html#la-compilation-echoue-croquis-trop-grand","text":"S\u00e9lectionnez le sch\u00e9ma de partition Minimal SPIFFS dans l'IDE Arduino sous Outils/Sch\u00e9ma de partition . Attention : Ce param\u00e8tre est r\u00e9initialis\u00e9 par d\u00e9faut lors de la mise \u00e0 jour du framework ESP32 ! Si vous utilisez des mises \u00e0 jour par-dessus l'air, vous devez flasher le logiciel une fois via USB apr\u00e8s avoir modifi\u00e9 le sch\u00e9ma de partition avant que les mises \u00e0 jour OTA ne fonctionnent \u00e0 nouveau.","title":"La compilation \u00e9choue : \"Croquis trop grand\""},{"location":"fr/troubleshooting.html#plus-dacces-a-linterface-web","text":"Si vous avez modifi\u00e9 les param\u00e8tres de sorte que vous ne pouvez plus acc\u00e9der \u00e0 l'interface Web, il existe deux fa\u00e7ons de restaurer le syst\u00e8me : Si vous pouvez flasher l'appareil : Configurez BSB_LAN_config.h avec des param\u00e8tres corrects et fonctionnels. D\u00e9finissez UseEEPROM sur 0 . Flasher BSB-LAN sur le microcontr\u00f4leur. Vous pouvez maintenant acc\u00e9der \u00e0 BSB-LAN. Acc\u00e9dez \u00e0 \"Param\u00e8tres\" et enregistrez les param\u00e8tres. Cela stockera les param\u00e8tres de travail dans l'EEPROM. Maintenant, modifiez BSB_LAN_config.h \u00e0 nouveau ! et d\u00e9finissez UseEEPROM sur 1 et flasher \u00e0 nouveau BSB-LAN sur le microcontr\u00f4leur. Ce n'est qu'\u00e0 ce moment-l\u00e0 que BSB-LAN lira et utilisera les param\u00e8tres de l'EEPROM, vous pourrez donc apporter d'autres modifications dans l'interface Web. Si vous ne pouvez pas flasher l'appareil : Si vous ne pouvez pas flasher l'appareil sur place, vous pouvez r\u00e9initialiser BSB-LAN sur le dernier param\u00e8tre BSB_LAN_config.h en connectant deux broches avant et pendant le d\u00e9marrage du microcontr\u00f4leur : ESP32-Olimex : connecter les broches 34 et 3V3. ESP32-NodeMCU : connecter les broches 21 et 3V3. Arduino Due : connecter les broches 31 et 33. Si les broches ont \u00e9t\u00e9 connect\u00e9es avec succ\u00e8s, la LED int\u00e9gr\u00e9e du microcontr\u00f4leur clignotera lentement pendant quatre secondes. Ensuite, ouvrez la configuration dans l'interface Web, v\u00e9rifiez tous les param\u00e8tres de la configuration et enregistrez-les. Cela stockera les param\u00e8tres de travail dans l'EEPROM. Point d'acc\u00e8s temporaire sur un microcontr\u00f4leur bas\u00e9 sur ESP32 Sur un microcontr\u00f4leur bas\u00e9 sur ESP32, BSB-LAN configurera son propre point d'acc\u00e8s sans fil nomm\u00e9 BSB-LAN s'il ne peut pas se connecter \u00e0 un r\u00e9seau. Dans ce cas, vous pouvez vous connecter \u00e0 ce point d'acc\u00e8s avec le mot de passe BSB-LPB-PPS-LAN et acc\u00e9der \u00e0 BSB-LAN via l'adresse IP http://192.168.4.1 et voir si vous pouvez corriger la configuration de cette mani\u00e8re. Gardez \u00e0 l'esprit que si vous avez d\u00e9fini une cl\u00e9 de passe ou un nom d'utilisateur et un mot de passe HTTP, ils sont toujours requis si ces d\u00e9tails sont stock\u00e9s dans l'EEPROM ou BSB_LAN_config.h .","title":"Plus d'acc\u00e8s \u00e0 l'interface Web"},{"location":"fr/troubleshooting.html#je-ne-peux-acceder-qua-tres-peu-de-parametres-via-bsblpb","text":"Initialement, BSB-LAN n'est fourni qu'avec un petit ensemble de param\u00e8tres qui fonctionnent sur (presque) tous les syst\u00e8mes de chauffage. Vous devez obtenir une liste de param\u00e8tres sp\u00e9cifique \u00e0 l'appareil .","title":"Je ne peux acc\u00e9der qu'\u00e0 tr\u00e8s peu de param\u00e8tres via BSB/LPB !"},{"location":"fr/troubleshooting.html#la-liste-des-categories-est-soudainement-tres-petite","text":"BSB-LAN a besoin de d\u00e9tecter le contr\u00f4leur du syst\u00e8me de chauffage pour d\u00e9terminer les cat\u00e9gories \u00e0 afficher. Si BSB-LAN n'est pas connect\u00e9 au contr\u00f4leur ou si la d\u00e9tection \u00e9choue, seules quelques cat\u00e9gories universelles sont affich\u00e9es.","title":"La liste des cat\u00e9gories est soudainement tr\u00e8s petite"},{"location":"fr/troubleshooting.html#impossible-de-lire-les-parametres-la-famille-dappareils-est-0","text":"Type de bus incorrect (BSB au lieu de LPB ou vice versa). Si la LED rouge de l'adaptateur n'est pas allum\u00e9e (et id\u00e9alement clignote l\u00e9g\u00e8rement), il y a un probl\u00e8me de c\u00e2blage entre l'adaptateur et le syst\u00e8me de chauffage. La LED rouge s'allumera une fois l'adaptateur correctement connect\u00e9, m\u00eame si l'adaptateur BSB-LAN n'est m\u00eame pas connect\u00e9 au microcontr\u00f4leur !","title":"Impossible de lire les param\u00e8tres / la famille d'appareils est 0"},{"location":"fr/troubleshooting.html#pas-de-donnees-meme-si-la-led-rouge-de-ladaptateur-est-allumee","text":"Assurez-vous que l'adaptateur est connect\u00e9 \u00e0 CL+/CL- et non \u00e0 la troisi\u00e8me broche (G+) : G+ alimentera la LED, mais ce n'est pas une ligne de donn\u00e9es. Assurez-vous d'avoir allum\u00e9 le microcontr\u00f4leur . Vous pouvez penser que le syst\u00e8me de chauffage alimente le microcontr\u00f4leur car la LED sur l'adaptateur BSB-LAN est allum\u00e9e, mais ce n'est pas le cas. Vous devez l'alimenter s\u00e9par\u00e9ment. Avec l'adaptateur pour les microcontr\u00f4leurs Olimex : Assurez-vous que la carte adaptatrice BSB-LAN est exactement centr\u00e9e sur le connecteur UEXT. Il s'ins\u00e9rera toujours, s'il est d\u00e9cal\u00e9 d'une broche vers la gauche ou la droite, mais il ne fonctionnera pas. Assurez-vous que les broches RX/TX sont correctement d\u00e9finies/d\u00e9tect\u00e9es. La s\u00e9quence de d\u00e9marrage dans le moniteur s\u00e9rie vous montrera quelles broches sont utilis\u00e9es ou ont \u00e9t\u00e9 d\u00e9tect\u00e9es automatiquement.","title":"Pas de donn\u00e9es m\u00eame si la LED rouge de l'adaptateur est allum\u00e9e"},{"location":"fr/troubleshooting.html#pas-de-connexion-reseau-ou-connexion-non-fiable","text":"Essayez d'alimenter le microcontr\u00f4leur via USB \u00e0 partir d'un ordinateur portable. Nous avons eu de nombreux cas o\u00f9 les alimentations \u00e9taient peu fiables malgr\u00e9 des sp\u00e9cifications suffisantes. Consultez le journal du moniteur s\u00e9rie pour v\u00e9rifier si le microcontr\u00f4leur a pu acqu\u00e9rir une adresse IP. Si ce n'est pas le cas, vos param\u00e8tres r\u00e9seau ou votre connexion physique peuvent \u00eatre d\u00e9fectueux.","title":"Pas de connexion r\u00e9seau ou connexion non fiable"},{"location":"fr/troubleshooting.html#aucune-connexion-au-reseau-wi-fi-masque-possible","text":"Oui, il s'agit d'une restriction connue. La seule fa\u00e7on de le faire est de d\u00e9finir explicitement le BSSID dans BSB_LAN_config.h .","title":"Aucune connexion au r\u00e9seau Wi-Fi masqu\u00e9 possible"},{"location":"fr/troubleshooting.html#la-temperature-de-la-piece-ou-tout-autre-parametre-ne-peut-pas-etre-definie","text":"V\u00e9rifiez les param\u00e8tres de BSB-LAN et assurez-vous que l'acc\u00e8s en \u00e9criture est activ\u00e9 et d\u00e9fini sur standard ou complet .","title":"La temp\u00e9rature de la pi\u00e8ce (ou tout autre param\u00e8tre) ne peut pas \u00eatre d\u00e9finie"},{"location":"fr/troubleshooting.html#linterface-web-se-fige-lors-de-letablissement-dune-nouvelle-connexion","text":"BSB-LAN n'est pas un syst\u00e8me multit\u00e2che. Cela signifie qu'il peut s'occuper d'une t\u00e2che \u00e0 la fois. Donc, m\u00eame si une commande URL est arr\u00eat\u00e9e (en fermant la fen\u00eatre du navigateur), BSB-LAN risque de ne pas le d\u00e9tecter et de ne commencer \u00e0 traiter les nouvelles demandes qu'une fois la pr\u00e9c\u00e9dente termin\u00e9e.","title":"L'interface Web se fige lors de l'\u00e9tablissement d'une nouvelle connexion"},{"location":"fr/troubleshooting.html#le-moniteur-serie-naffiche-pas-de-donnees-lisibles","text":"Assurez-vous que la vitesse est correctement d\u00e9finie sur 115200 bps. Assurez-vous que le bon port est s\u00e9lectionn\u00e9.","title":"Le moniteur s\u00e9rie n'affiche pas de donn\u00e9es lisibles"},{"location":"fr/using.html","text":"Utilisation de BSB-LAN Contr\u00f4le du syst\u00e8me de chauffage via l'interface web Dans un premier temps, ou si vous souhaitez simplement allumer ou \u00e9teindre votre syst\u00e8me de chauffage, vous pouvez ouvrir l'interface web de BSB-LAN et acc\u00e9der au menu Param\u00e8tres . Cela affichera une liste de cat\u00e9gories de votre contr\u00f4leur de chauffage. Vous pouvez cliquer sur chaque cat\u00e9gorie pour obtenir une liste des param\u00e8tres correspondants. Si vous voyez un bouton Set , cela signifie que le param\u00e8tre peut \u00eatre modifi\u00e9, et en cliquant sur le bouton, la nouvelle valeur sera envoy\u00e9e au chauffage. Si le bouton Set n'est pas pr\u00e9sent, le param\u00e8tre est en lecture seule et ne peut pas \u00eatre modifi\u00e9. Utilisation des commandes URL de BSB-LAN La plupart des fonctionnalit\u00e9s de BSB-LAN peuvent \u00eatre contr\u00f4l\u00e9es \u00e0 l'aide de commandes URL. Ces commandes sont utiles, voire n\u00e9cessaires, lorsque vous connectez BSB-LAN \u00e0 un syst\u00e8me de domotique . Elles permettent \u00e9galement d'acc\u00e9der \u00e0 des fonctions qui ne sont pas directement accessibles via l'interface web. Les commandes URL sont appel\u00e9es juste apr\u00e8s le nom d'h\u00f4te de BSB-LAN et une cl\u00e9 de passe (facultative). Par exemple, pour obtenir une liste de cat\u00e9gories, vous devez ouvrir l'URL http://bsb-lan.local/K (ou http://bsb-lan.local/1234/K si la cl\u00e9 de passe 1234 est utilis\u00e9e). Interrogation et d\u00e9finition de param\u00e8tres table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 80%; } Commande URL Fonctionnalit\u00e9 /<x> Interroger le param\u00e8tre <x> /<x>!<addr> Interroger le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /<x>/<y>/<z> Interroger les param\u00e8tres <x> , <y> et <z> . Les param\u00e8tres peuvent inclure ! pour adresser diff\u00e9rents contr\u00f4leurs. /<x>-<y> Interroger les param\u00e8tres de <x> \u00e0 <y> /<x>!<addr>-<y> Interroger les param\u00e8tres de <x> \u00e0 <y> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /K Lister toutes les cat\u00e9gories de param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut /K!<addr> Lister toutes les cat\u00e9gories de param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination <addr> /K<x> Interroger tous les param\u00e8tres de la cat\u00e9gorie <x> du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut /K<x>!<addr> Interroger tous les param\u00e8tres de la cat\u00e9gorie <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /S<x>=<y> D\u00e9finir le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut sur la valeur <y> . Pour d\u00e9finir un param\u00e8tre sur --- (off/d\u00e9sactiv\u00e9), envoyez simplement une valeur vide : S<x>= /S<x>!<addy>=<y> D\u00e9finir le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> sur la valeur <y> /I<x>=<y> Envoyer la valeur y en tant que t\u00e9l\u00e9gramme INF au param\u00e8tre <x> . Cela n'est n\u00e9cessaire que pour la d\u00e9finition de la temp\u00e9rature de la pi\u00e8ce (param\u00e8tres 10000 ff.). Configuration Commande URL Fonctionnalit\u00e9 /C Configuration /CO Afficher la configuration de BSB-LAN /P<x>,<y>,<z> D\u00e9finir temporairement le type de bus sur <x> , l'adresse propre sur <y> et l'adresse cible sur <z> /V<x> Activer ( 1 ) ou d\u00e9sactiver ( 0 ) le mode de sortie d\u00e9taill\u00e9. Il doit rester activ\u00e9 sauf instruction contraire. Journalisation Commande URL Fonctionnalit\u00e9 /DG Affichage graphique (trac\u00e9) d'un fichier journal actif /D ou /DD Afficher le fichier journal datalog.txt du stockage. Contient les param\u00e8tres enregistr\u00e9s et leurs valeurs lorsque la journalisation sur carte SD est active. /D<n> Afficher les <n> derniers jours du calendrier du fichier journal /D<a>,<b> Afficher les donn\u00e9es du fichier journal entre <a> et <b> . <a> et <b> doivent \u00eatre au format aaaa-mm-jj (par exemple /D2024-04-01,2024-04-30 ) /D0 R\u00e9initialiser les fichiers journaux datalog.txt et journal.txt et cr\u00e9er de nouveaux en-t\u00eates. Doit \u00eatre ex\u00e9cut\u00e9 avant la premi\u00e8re journalisation. /DK<n> Supprimer les donn\u00e9es plus anciennes que <n> jours du fichier journal /LN Forcer la journalisation ind\u00e9pendamment de l'intervalle actuelle et red\u00e9marrer l'intervalle configur\u00e9 \u00e0 ce moment-l\u00e0 /L=<x>,<y>,<z> D\u00e9finir l'intervalle de journalisation sur <x> secondes et (facultativement) r\u00e9initialiser les param\u00e8tres de journalisation sur <y> , <z> , etc. jusqu'au red\u00e9marrage /L=0,0 D\u00e9sactiver la journalisation sur le stockage jusqu'au red\u00e9marrage /LB=<x> Journaliser uniquement les t\u00e9l\u00e9grammes de diffusion ( 1 ) ou tous les t\u00e9l\u00e9grammes ( 0 ). Le param\u00e8tre est actif jusqu'au red\u00e9marrage. /LU=<x> Journaliser uniquement les t\u00e9l\u00e9grammes de bus inconnus ( 1 ) ou tous les t\u00e9l\u00e9grammes ( 0 ). Le param\u00e8tre est actif jusqu'au red\u00e9marrage. /A=0 D\u00e9sactiver le calcul de la moyenne sur 24 heures jusqu'au red\u00e9marrage /A=<x>,<y>,<z> Changer le calcul de la moyenne sur 24 heures pour les param\u00e8tres <x> , <y> et <z> jusqu'au red\u00e9marrage /B0 R\u00e9initialiser les statistiques de temps de fonctionnement et de cycles du br\u00fbleur /DD0 Supprimer uniquement le fichier journal datalog.txt /DJ Afficher le fichier journal journal.txt du stockage /DJ0 Supprimer uniquement le fichier journal journal.txt /LD D\u00e9sactiver la journalisation des t\u00e9l\u00e9grammes dans journal.txt jusqu'au red\u00e9marrage /LE Activer la journalisation des t\u00e9l\u00e9grammes dans journal.txt Informations sur les param\u00e8tres Commande URL Fonctionnalit\u00e9 /E<x> Afficher les options du param\u00e8tre <x> . Disponible uniquement pour les param\u00e8tres de type option, tels que les types de donn\u00e9es VT_ENUM , VT_CUSTOM_ENUM , VT_BITS et VT_CUSTOM_BITS . /R<x> Interroger la valeur par d\u00e9faut du param\u00e8tre <x> Contr\u00f4le GPIO Commande URL Fonctionnalit\u00e9 /G<x> Afficher l'\u00e9tat actuel de la broche GPIO <x> /G<x>=<y> D\u00e9finir la broche GPIO <x> sur HIGH ( <y> = 1 ) ou LOW ( <y> = 0 ) Interface JSON Pour une structure compl\u00e8te de l'API JSON, voir ici dans la documentation OpenAPI . Commande URL Fonctionnalit\u00e9 /JQ=<x>,<y>,<z> Interroger les param\u00e8tres <x> , <y> et <z> et renvoyer une structure JSON. /JQ Interroger les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. /JS D\u00e9finir les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. /JR<x> Interroger la valeur par d\u00e9faut du param\u00e8tre <x> et renvoyer une structure JSON. /JK=ALL Afficher les plages de toutes les cat\u00e9gories disponibles en tant que structure JSON. /JK=<x> Afficher la structure des param\u00e8tres pour tous les param\u00e8tres de la cat\u00e9gorie <x> . /JC=<x>,<y>,<z> Afficher les valeurs possibles pour les param\u00e8tres <x> , <y> et <z> pour les param\u00e8tres de type option. M\u00eame structure JSON que /JK=<x> . /JC Afficher les valeurs possibles pour les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. M\u00eame structure JSON que /JK=<x> . /JB Sauvegarder tous les param\u00e8tres modifiables dans une structure JSON qui peut \u00eatre utilis\u00e9e pour les r\u00e9\u00e9crire avec /JS /JB!<addr> Sauvegarder tous les param\u00e8tres modifiables du contr\u00f4leur \u00e0 l'adresse de destination <addr> dans une structure JSON qui peut \u00eatre utilis\u00e9e pour les r\u00e9\u00e9crire avec /JS /JL Cr\u00e9er une structure JSON des param\u00e8tres de configuration de BSB-LAN /JW \u00c9crire les param\u00e8tres de configuration en fonction d'une structure JSON cr\u00e9\u00e9e par /JL /JI Afficher les informations d'ex\u00e9cution de BSB-LAN en tant que structure JSON /JV Renvoyer la version de l'API JSON de BSB-LAN en tant que structure JSON Divers Commande URL Fonctionnalit\u00e9 /M<x>!<y> Envoyer ( <x>=1 ) ou r\u00e9voquer ( <x>=0 ) les messages de d\u00e9couverte automatique MQTT pour tous les param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination <y> . /N R\u00e9initialiser et red\u00e9marrer le microcontr\u00f4leur (environ 15 secondes) /NE Effacer l'EEPROM et red\u00e9marrer le microcontr\u00f4leur. Tous les param\u00e8tres de configuration seront ensuite lus \u00e0 partir du fichier de configuration jusqu'\u00e0 ce qu'ils soient d\u00e9finis et enregistr\u00e9s \u00e0 nouveau dans l'interface web pour \u00eatre \u00e9crits dans l'EEPROM. /QD Afficher la structure des param\u00e8tres du syst\u00e8me de chauffage /W Avec /W pr\u00e9c\u00e9dant les commandes URL C , S et Q , les donn\u00e9es sont renvoy\u00e9es sans en-t\u00eate et pied de page HTML (par exemple : /WC ou /WS<x>=<y!z> ). Utilisation de la fonctionnalit\u00e9 de trac\u00e9 graphique Si des donn\u00e9es journalis\u00e9es sont disponibles sur le stockage (carte SD ou m\u00e9moire flash interne), l'option Afficher le fichier journal devient cliquable. Par d\u00e9faut, elle affichera les donn\u00e9es journalis\u00e9es dans le navigateur. Pour acc\u00e9der aux donn\u00e9es journalis\u00e9es elles-m\u00eames (dans le fichier datalog.txt ), utilisez la commande URL /D mentionn\u00e9e ci-dessus. Par d\u00e9faut, \"Afficher le fichier journal\" affiche les donn\u00e9es de journalisation des n derniers jours ( n=DEFAULT_DAYS_TO_PLOT , configurable dans BSB_LAN_config.h ). Ensuite, vous pouvez utiliser les contr\u00f4les de la page web pour s\u00e9lectionner une autre plage, en fonction des donn\u00e9es contenues dans le fichier journal. Les actions de survol, de clic et de roulette de la souris dans l'affichage graphique offrent diverses options de contr\u00f4le : Meilleure lisibilit\u00e9 des num\u00e9ros de valeur lorsque les trac\u00e9s sont proches les uns des autres (survol du trac\u00e9) Les utilisateurs peuvent mettre en surbrillance les trac\u00e9s de mani\u00e8re interactive pour une meilleure vue d'ensemble (survol des entr\u00e9es de l\u00e9gende) Les utilisateurs peuvent d\u00e9sactiver les trac\u00e9s de mani\u00e8re interactive pour une meilleure vue d'ensemble et un meilleur ajustement vertical (clic sur les entr\u00e9es de l\u00e9gende) Zoom (roulette de la souris/pinch sur le trac\u00e9) et capacit\u00e9 de panoramique (d\u00e9placement du trac\u00e9 zoom\u00e9) Pour une analyse plus approfondie, vous pouvez utiliser ce script Python qui prend la sortie du journal de BSB-LAN pour cr\u00e9er des fichiers CSV pivot\u00e9s qui peuvent \u00eatre utilis\u00e9s pour des diagrammes plus informatifs.","title":"Fonctionnes de BSB-LAN"},{"location":"fr/using.html#utilisation-de-bsb-lan","text":"","title":"Utilisation de BSB-LAN"},{"location":"fr/using.html#controle-du-systeme-de-chauffage-via-linterface-web","text":"Dans un premier temps, ou si vous souhaitez simplement allumer ou \u00e9teindre votre syst\u00e8me de chauffage, vous pouvez ouvrir l'interface web de BSB-LAN et acc\u00e9der au menu Param\u00e8tres . Cela affichera une liste de cat\u00e9gories de votre contr\u00f4leur de chauffage. Vous pouvez cliquer sur chaque cat\u00e9gorie pour obtenir une liste des param\u00e8tres correspondants. Si vous voyez un bouton Set , cela signifie que le param\u00e8tre peut \u00eatre modifi\u00e9, et en cliquant sur le bouton, la nouvelle valeur sera envoy\u00e9e au chauffage. Si le bouton Set n'est pas pr\u00e9sent, le param\u00e8tre est en lecture seule et ne peut pas \u00eatre modifi\u00e9.","title":"Contr\u00f4le du syst\u00e8me de chauffage via l'interface web"},{"location":"fr/using.html#utilisation-des-commandes-url-de-bsb-lan","text":"La plupart des fonctionnalit\u00e9s de BSB-LAN peuvent \u00eatre contr\u00f4l\u00e9es \u00e0 l'aide de commandes URL. Ces commandes sont utiles, voire n\u00e9cessaires, lorsque vous connectez BSB-LAN \u00e0 un syst\u00e8me de domotique . Elles permettent \u00e9galement d'acc\u00e9der \u00e0 des fonctions qui ne sont pas directement accessibles via l'interface web. Les commandes URL sont appel\u00e9es juste apr\u00e8s le nom d'h\u00f4te de BSB-LAN et une cl\u00e9 de passe (facultative). Par exemple, pour obtenir une liste de cat\u00e9gories, vous devez ouvrir l'URL http://bsb-lan.local/K (ou http://bsb-lan.local/1234/K si la cl\u00e9 de passe 1234 est utilis\u00e9e).","title":"Utilisation des commandes URL de BSB-LAN"},{"location":"fr/using.html#interrogation-et-definition-de-parametres","text":"table th:first-of-type { width: 20%; } table th:nth-of-type(2) { width: 80%; } Commande URL Fonctionnalit\u00e9 /<x> Interroger le param\u00e8tre <x> /<x>!<addr> Interroger le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /<x>/<y>/<z> Interroger les param\u00e8tres <x> , <y> et <z> . Les param\u00e8tres peuvent inclure ! pour adresser diff\u00e9rents contr\u00f4leurs. /<x>-<y> Interroger les param\u00e8tres de <x> \u00e0 <y> /<x>!<addr>-<y> Interroger les param\u00e8tres de <x> \u00e0 <y> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /K Lister toutes les cat\u00e9gories de param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut /K!<addr> Lister toutes les cat\u00e9gories de param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination <addr> /K<x> Interroger tous les param\u00e8tres de la cat\u00e9gorie <x> du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut /K<x>!<addr> Interroger tous les param\u00e8tres de la cat\u00e9gorie <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> /S<x>=<y> D\u00e9finir le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination par d\u00e9faut sur la valeur <y> . Pour d\u00e9finir un param\u00e8tre sur --- (off/d\u00e9sactiv\u00e9), envoyez simplement une valeur vide : S<x>= /S<x>!<addy>=<y> D\u00e9finir le param\u00e8tre <x> du contr\u00f4leur \u00e0 l'adresse de destination <addr> sur la valeur <y> /I<x>=<y> Envoyer la valeur y en tant que t\u00e9l\u00e9gramme INF au param\u00e8tre <x> . Cela n'est n\u00e9cessaire que pour la d\u00e9finition de la temp\u00e9rature de la pi\u00e8ce (param\u00e8tres 10000 ff.).","title":"Interrogation et d\u00e9finition de param\u00e8tres"},{"location":"fr/using.html#configuration","text":"Commande URL Fonctionnalit\u00e9 /C Configuration /CO Afficher la configuration de BSB-LAN /P<x>,<y>,<z> D\u00e9finir temporairement le type de bus sur <x> , l'adresse propre sur <y> et l'adresse cible sur <z> /V<x> Activer ( 1 ) ou d\u00e9sactiver ( 0 ) le mode de sortie d\u00e9taill\u00e9. Il doit rester activ\u00e9 sauf instruction contraire.","title":"Configuration"},{"location":"fr/using.html#journalisation","text":"Commande URL Fonctionnalit\u00e9 /DG Affichage graphique (trac\u00e9) d'un fichier journal actif /D ou /DD Afficher le fichier journal datalog.txt du stockage. Contient les param\u00e8tres enregistr\u00e9s et leurs valeurs lorsque la journalisation sur carte SD est active. /D<n> Afficher les <n> derniers jours du calendrier du fichier journal /D<a>,<b> Afficher les donn\u00e9es du fichier journal entre <a> et <b> . <a> et <b> doivent \u00eatre au format aaaa-mm-jj (par exemple /D2024-04-01,2024-04-30 ) /D0 R\u00e9initialiser les fichiers journaux datalog.txt et journal.txt et cr\u00e9er de nouveaux en-t\u00eates. Doit \u00eatre ex\u00e9cut\u00e9 avant la premi\u00e8re journalisation. /DK<n> Supprimer les donn\u00e9es plus anciennes que <n> jours du fichier journal /LN Forcer la journalisation ind\u00e9pendamment de l'intervalle actuelle et red\u00e9marrer l'intervalle configur\u00e9 \u00e0 ce moment-l\u00e0 /L=<x>,<y>,<z> D\u00e9finir l'intervalle de journalisation sur <x> secondes et (facultativement) r\u00e9initialiser les param\u00e8tres de journalisation sur <y> , <z> , etc. jusqu'au red\u00e9marrage /L=0,0 D\u00e9sactiver la journalisation sur le stockage jusqu'au red\u00e9marrage /LB=<x> Journaliser uniquement les t\u00e9l\u00e9grammes de diffusion ( 1 ) ou tous les t\u00e9l\u00e9grammes ( 0 ). Le param\u00e8tre est actif jusqu'au red\u00e9marrage. /LU=<x> Journaliser uniquement les t\u00e9l\u00e9grammes de bus inconnus ( 1 ) ou tous les t\u00e9l\u00e9grammes ( 0 ). Le param\u00e8tre est actif jusqu'au red\u00e9marrage. /A=0 D\u00e9sactiver le calcul de la moyenne sur 24 heures jusqu'au red\u00e9marrage /A=<x>,<y>,<z> Changer le calcul de la moyenne sur 24 heures pour les param\u00e8tres <x> , <y> et <z> jusqu'au red\u00e9marrage /B0 R\u00e9initialiser les statistiques de temps de fonctionnement et de cycles du br\u00fbleur /DD0 Supprimer uniquement le fichier journal datalog.txt /DJ Afficher le fichier journal journal.txt du stockage /DJ0 Supprimer uniquement le fichier journal journal.txt /LD D\u00e9sactiver la journalisation des t\u00e9l\u00e9grammes dans journal.txt jusqu'au red\u00e9marrage /LE Activer la journalisation des t\u00e9l\u00e9grammes dans journal.txt","title":"Journalisation"},{"location":"fr/using.html#informations-sur-les-parametres","text":"Commande URL Fonctionnalit\u00e9 /E<x> Afficher les options du param\u00e8tre <x> . Disponible uniquement pour les param\u00e8tres de type option, tels que les types de donn\u00e9es VT_ENUM , VT_CUSTOM_ENUM , VT_BITS et VT_CUSTOM_BITS . /R<x> Interroger la valeur par d\u00e9faut du param\u00e8tre <x>","title":"Informations sur les param\u00e8tres"},{"location":"fr/using.html#controle-gpio","text":"Commande URL Fonctionnalit\u00e9 /G<x> Afficher l'\u00e9tat actuel de la broche GPIO <x> /G<x>=<y> D\u00e9finir la broche GPIO <x> sur HIGH ( <y> = 1 ) ou LOW ( <y> = 0 )","title":"Contr\u00f4le GPIO"},{"location":"fr/using.html#interface-json","text":"Pour une structure compl\u00e8te de l'API JSON, voir ici dans la documentation OpenAPI . Commande URL Fonctionnalit\u00e9 /JQ=<x>,<y>,<z> Interroger les param\u00e8tres <x> , <y> et <z> et renvoyer une structure JSON. /JQ Interroger les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. /JS D\u00e9finir les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. /JR<x> Interroger la valeur par d\u00e9faut du param\u00e8tre <x> et renvoyer une structure JSON. /JK=ALL Afficher les plages de toutes les cat\u00e9gories disponibles en tant que structure JSON. /JK=<x> Afficher la structure des param\u00e8tres pour tous les param\u00e8tres de la cat\u00e9gorie <x> . /JC=<x>,<y>,<z> Afficher les valeurs possibles pour les param\u00e8tres <x> , <y> et <z> pour les param\u00e8tres de type option. M\u00eame structure JSON que /JK=<x> . /JC Afficher les valeurs possibles pour les param\u00e8tres en fonction d'une structure JSON re\u00e7ue via HTTP POST. M\u00eame structure JSON que /JK=<x> . /JB Sauvegarder tous les param\u00e8tres modifiables dans une structure JSON qui peut \u00eatre utilis\u00e9e pour les r\u00e9\u00e9crire avec /JS /JB!<addr> Sauvegarder tous les param\u00e8tres modifiables du contr\u00f4leur \u00e0 l'adresse de destination <addr> dans une structure JSON qui peut \u00eatre utilis\u00e9e pour les r\u00e9\u00e9crire avec /JS /JL Cr\u00e9er une structure JSON des param\u00e8tres de configuration de BSB-LAN /JW \u00c9crire les param\u00e8tres de configuration en fonction d'une structure JSON cr\u00e9\u00e9e par /JL /JI Afficher les informations d'ex\u00e9cution de BSB-LAN en tant que structure JSON /JV Renvoyer la version de l'API JSON de BSB-LAN en tant que structure JSON","title":"Interface JSON"},{"location":"fr/using.html#divers","text":"Commande URL Fonctionnalit\u00e9 /M<x>!<y> Envoyer ( <x>=1 ) ou r\u00e9voquer ( <x>=0 ) les messages de d\u00e9couverte automatique MQTT pour tous les param\u00e8tres du contr\u00f4leur \u00e0 l'adresse de destination <y> . /N R\u00e9initialiser et red\u00e9marrer le microcontr\u00f4leur (environ 15 secondes) /NE Effacer l'EEPROM et red\u00e9marrer le microcontr\u00f4leur. Tous les param\u00e8tres de configuration seront ensuite lus \u00e0 partir du fichier de configuration jusqu'\u00e0 ce qu'ils soient d\u00e9finis et enregistr\u00e9s \u00e0 nouveau dans l'interface web pour \u00eatre \u00e9crits dans l'EEPROM. /QD Afficher la structure des param\u00e8tres du syst\u00e8me de chauffage /W Avec /W pr\u00e9c\u00e9dant les commandes URL C , S et Q , les donn\u00e9es sont renvoy\u00e9es sans en-t\u00eate et pied de page HTML (par exemple : /WC ou /WS<x>=<y!z> ).","title":"Divers"},{"location":"fr/using.html#utilisation-de-la-fonctionnalite-de-trace-graphique","text":"Si des donn\u00e9es journalis\u00e9es sont disponibles sur le stockage (carte SD ou m\u00e9moire flash interne), l'option Afficher le fichier journal devient cliquable. Par d\u00e9faut, elle affichera les donn\u00e9es journalis\u00e9es dans le navigateur. Pour acc\u00e9der aux donn\u00e9es journalis\u00e9es elles-m\u00eames (dans le fichier datalog.txt ), utilisez la commande URL /D mentionn\u00e9e ci-dessus. Par d\u00e9faut, \"Afficher le fichier journal\" affiche les donn\u00e9es de journalisation des n derniers jours ( n=DEFAULT_DAYS_TO_PLOT , configurable dans BSB_LAN_config.h ). Ensuite, vous pouvez utiliser les contr\u00f4les de la page web pour s\u00e9lectionner une autre plage, en fonction des donn\u00e9es contenues dans le fichier journal. Les actions de survol, de clic et de roulette de la souris dans l'affichage graphique offrent diverses options de contr\u00f4le : Meilleure lisibilit\u00e9 des num\u00e9ros de valeur lorsque les trac\u00e9s sont proches les uns des autres (survol du trac\u00e9) Les utilisateurs peuvent mettre en surbrillance les trac\u00e9s de mani\u00e8re interactive pour une meilleure vue d'ensemble (survol des entr\u00e9es de l\u00e9gende) Les utilisateurs peuvent d\u00e9sactiver les trac\u00e9s de mani\u00e8re interactive pour une meilleure vue d'ensemble et un meilleur ajustement vertical (clic sur les entr\u00e9es de l\u00e9gende) Zoom (roulette de la souris/pinch sur le trac\u00e9) et capacit\u00e9 de panoramique (d\u00e9placement du trac\u00e9 zoom\u00e9) Pour une analyse plus approfondie, vous pouvez utiliser ce script Python qui prend la sortie du journal de BSB-LAN pour cr\u00e9er des fichiers CSV pivot\u00e9s qui peuvent \u00eatre utilis\u00e9s pour des diagrammes plus informatifs.","title":"Utilisation de la fonctionnalit\u00e9 de trac\u00e9 graphique"}]}